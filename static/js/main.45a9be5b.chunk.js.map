{"version":3,"sources":["styles/colors.ts","components/Sidebar/styles.ts","components/Sidebar/Sidebar.tsx","components/PageHeader/styles.ts","i18n.ts","svg/uk.svg","svg/spain.svg","utils/internationalization.ts","components/SvgIcon/SvgIcon.tsx","components/SelectLang/SelectLang.tsx","components/PageHeader/PageHeader.tsx","pages/layout.ts","utils/determine_style.ts","components/BinomialChart/BinomialChart.tsx","utils/arrays.ts","styles/display.ts","components/Result/Result.tsx","components/BinomialProb/BinomialProb.tsx","components/ResultGroup/ResultGroup.tsx","components/BinomialTable/BinomialTable.tsx","functions/binomials.ts","pages/Binomial/Binomial.tsx","pages/available.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["dark","background","text","sidebarText","sidebarBg","result","scrollBarBg","scrollBarThumb","chart_barNormal","chart_barHighlight","chart_gridColor","light","SidebarContainer","styled","nav","props","theme","Header","H1","SideMain","main","SideFooter","footer","PageSelect","Select","ofType","Sidebar","current_page","available_pages","setNewPage","translate","useTranslation","t","items","itemRenderer","item","handleClick","id","onClick","active","disabled","icon","onItemSelect","filterable","noResults","rightIcon","className","href","packageJSON","version","target","rel","StyledNavbar","Navbar","StyledSwitch","Switch","window","location","origin","pathname","i18n","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","fallbackLng","debug","interpolation","escapeValue","i18n_localstorage","available_langs","flags","esFlag","enFlag","validLang","to_test","out","ImgContainer","img","SvgIcon","src","name","alt","LangSelect","SelectLang","useState","currentLang","setCurrentLang","langs","setLangs","useEffect","local","localStorage","getItem","lang","getLang","toRender","flag","console","log","newLang","changeLanguage","setItem","setLang","minimal","PageHeader","title","isDark","toggleTheme","align","Alignment","LEFT","RIGHT","alignIndicator","checked","onChange","innerLabel","innerLabelChecked","large","minSideBarWidth","ViewPort","div","SideContainer","AppPageContainer","PageFrame","Column","noGrow","height","width","noPad","margin","Row","Container","OverflowContainer","PageContainer","isCellHighlight","value","highlight","String","Array","includes","BinomialChart","data","roundPrecision","legend","themeContext","useContext","ThemeContext","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","tick","fill","YAxis","Tooltip","formatter","x","y","payload","label","toFixed","Bar","map","entry","index","color","BarColor","Cell","range","from","to","step","length","_","i","stringRange","StyledCallout","Callout","StyledResult","Text","Result","precision","math","NoR","iconSize","BinomialProb","handleTab","successFound","validInput","probabilities","isNaN","panel","punctual","accum_left","accum_right","ResultGroup","results","expected","variance","std_dev","assymetry","kurtosis","BinomialTable","table","isLoading","content","numRows","columnWidths","headers","header","cellRenderer","row","col","intent","loading","renderCell","factorial","n","res","binomialModel","r","p","a","b","accumulatedLeft","total","accumulatedRight","stdDeviation","Math","sqrt","partialLeftExpected","partialRightExpected","defaultTable","Binomial","binomial","ToRenderPage","NoInput","sampleSize","setSampleSize","successProbability","setSuccessProbability","NaN","setSuccessFound","setValidInput","setRoundPrecision","setResults","setProbabilities","tableData","setTableData","chartData","setChartData","dataTo","setDataTo","setHighlight","opType","setOpType","handleType","getProbabilities","useDebounce","tab","hl","handleHighlight","undefined","newTable","push","createTable","analysis","getAnalysis","probs_from_table","valid","min","onValueChange","valueNum","valueStr","parseFloat","minorStepSize","placeholder","max","stepSize","size","pageOptions","React","Fragment","defaultPage","FocusStyleManager","onlyShowFocusOnTabs","App","useLocalStorage","setIsDark","CurrentPage","setCurrentPage","fallback","selected","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wgDAEaA,EAAe,CACxBC,WAAY,UACZC,KAAM,UACNC,YAAa,UACbC,UAAW,UACXC,OAAQ,UAERC,YAAa,UACbC,eAAgB,UAEhBC,gBAAiB,UACjBC,mBAAoB,UACpBC,gBAAiB,QAGRC,EAAgB,CACzBV,WAAY,UACZC,KAAM,UACNC,YAAa,UACbC,UAAW,UACXC,OAAQ,UAERC,YAAa,UACbC,eAAgB,OAEhBC,gBAAiB,UACjBC,mBAAoB,UACpBC,gBAAiB,W,6DC1BRE,EAAmBC,IAAOC,IAAV,uMAKhB,SAAAC,GAAK,OAAIA,EAAMC,MAAMb,eACT,SAAAY,GAAK,OAAIA,EAAMC,MAAMZ,aAIjCa,EAASJ,YAAOK,IAAPL,CAAH,+LASNM,EAAWN,IAAOO,KAAV,mJAQRC,EAAaR,IAAOS,OAAV,0I,OCNjBC,EAAaC,IAAOC,SA8EXC,EA5EC,SAAC,GAID,IAHZC,EAGW,EAHXA,aACAC,EAEW,EAFXA,gBACAC,EACW,EADXA,WAGWC,EAAcC,cAAjBC,EAmBR,OACI,eAACpB,EAAD,WACI,cAACK,EAAD,UACKa,EAAU,oBAGf,cAAC,IAAD,IAEA,eAACX,EAAD,WACI,cAAC,IAAD,UACKW,EAAU,kBAEf,cAACP,EAAD,CAEIU,MAAOL,EACPM,aA5BG,SAACC,EAAD,OAAmBC,EAAnB,EAAmBA,YAAnB,OAEf,cAAC,IAAD,CAEIlC,KAAM4B,EAAU,UAAD,OAAWK,EAAKE,KAC/BC,QAASF,EACTG,OAAQZ,EAAaU,KAAOF,EAAKE,GACjCG,SAAUL,EAAKK,SACfC,KAAMN,EAAKM,MALNN,EAAKE,KA0BFK,aAAcb,EACdc,YAAY,EACZC,UAAW,cAAC,IAAD,CAAU1C,KAAK,cAAcsC,UAAU,IANtD,SAQI,cAAC,IAAD,CACIC,KAAK,WACLvC,KAAM4B,EAAU,UAAD,OAAWH,EAAaU,KACvCQ,UAAU,iBAGlB,eAACxB,EAAD,WACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAMyB,UAAU,iBAAiBL,KAAK,eAD1C,OAEKX,EAAU,WAFf,OAGI,mBAAGiB,KAAK,qDAAR,uBAIJ,eAAC,IAAD,CAAID,UAAU,iBAAd,sBACcE,EAAYC,WAE1B,eAAC,IAAD,CAAIH,UAAU,iBAAd,UACI,cAAC,IAAD,CAAML,KAAK,SADf,OAEKX,EAAU,QAFf,oBAGKA,EAAU,MAHf,OAII,mBAAGiB,KAAK,iCAAiCG,OAAO,SAASC,IAAI,sBAA7D,iC,QCxFXC,EAAevC,YAAOwC,IAAPxC,CAAH,6IAKI,SAAAE,GAAK,OAAIA,EAAMC,MAAMZ,aAIrCkD,EAAezC,YAAO0C,IAAP1C,CAAH,+C,qCCPI2C,OAAOC,SAA5BC,E,EAAAA,OAAQC,E,EAAAA,SAEhBC,IACKC,IAAIC,KACJD,IAAIE,KACJF,IAAKG,KACLC,KAAK,CACFC,QAAS,CACPC,SACI,UACKT,EADL,YACeC,EADf,sCAMNS,YAAa,KACbC,OAAO,EACPC,cAAe,CACXC,aAAa,KAIVX,I,wBAAAA,IAAf,EC5Be,OAA0B,+BCA1B,OAA0B,kCCKnCY,GAAoB,aAIpBC,GAA2B,CAC7B,KACA,MAGEC,GAAQ,CACV,GAAMC,GACN,GAAMC,IA0BJC,GAAY,SAACC,GACf,IAAIC,EAAa,KAKjB,MAHgB,OAAZD,IACAC,EAAM,MAEHA,GC7CLC,GAAenE,IAAOoE,IAAV,gDAeHC,GANC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,KACpB,OACI,cAACJ,GAAD,CAAcG,IAAKA,EAAKE,IAAG,OAAED,QAAF,IAAEA,IAAQ,cCRvCE,GAAa9D,IAAOC,SAuDX8D,GAjDI,WAAO,IAAD,EAEiBC,mBAAgB,MAFjC,mBAEdC,EAFc,KAEDC,EAFC,OAGKF,mBAAkB,IAHvB,mBAGdG,EAHc,KAGPC,EAHO,KAYrBC,qBAAU,WACNH,EFAQ,WAAc,IAAD,EACnBI,EAAK,UAAGtC,OAAOuC,aAAaC,QAAQxB,WAA/B,QAAqD,KAC5DyB,EAAe,KAQnB,MALc,OAAVH,EACAG,EAAO,KACQ,OAAVH,IACLG,EAAO,MAEJA,EEVYC,IACfN,EAASnB,MACV,IAiBH,OACI,cAACa,GAAD,CACIrD,MAAO0D,EACPzD,aAlBW,SAACC,EAAD,GAAiD,IAAjCC,EAAgC,EAAhCA,YAC3B+D,EAAWtB,GAAU1C,GACnBiE,EAAO1B,GAAMyB,GAEnB,OACI,cAAC,IAAD,CAEIjG,KAAMiC,EACNG,QAASF,EACTG,OAAQkD,IAAgBtD,EACxBM,KAAM,cAAC,GAAD,CAAS0C,IAAKiB,EAAMhB,KAAMK,KAJ3BtD,IAaTO,aA/Ba,SAACP,GAClBkE,QAAQC,IAAI,CAACnE,SACb,IAAIoE,EAAU1B,GAAU1C,GACxBuD,EAAea,GFDP,SAACA,GACb3C,EAAK4C,eAAeD,GACpB/C,OAAOuC,aAAaU,QAAQjC,GAAmB+B,GEA3CG,CAAQH,IA4BJ5D,YAAY,EAJhB,SAMI,cAAC,IAAD,CACIF,KAAK,gBACLvC,KAAMuF,EACN5C,UAAU,aACV8D,SAAO,OCZRC,GAzBI,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,YAEzB/E,EAAMD,cAANC,EAER,OACI,eAACoB,EAAD,WACI,cAAC,IAAD,CAAa4D,MAAOC,IAAUC,KAA9B,SACI,cAAC,IAAD,UAAgBlF,EAAE6E,OAGtB,eAAC,IAAD,CAAaG,MAAOC,IAAUE,MAA9B,UACI,cAAC,GAAD,IACA,cAAC7D,EAAD,CACI8D,eAAgBH,IAAUE,MAC1BE,QAASP,EACTQ,SAAUP,EACVQ,WAAW,eACXC,kBAAkB,eAClBC,OAAK,W,qECjCnBC,GAAkB,QAUlBC,GAAW9G,IAAO+G,IAAV,4WAOc,SAAA7G,GAAK,OAAIA,EAAMC,MAAMV,eAMrB,SAAAS,GAAK,OAAIA,EAAMC,MAAMT,kBAK3CsH,GAAgBhH,IAAO+G,IAAV,uGACNF,GAEIA,IAIXI,GAAmBjH,IAAO+G,IAAV,mMACGF,GAGRA,IAMXK,GAAYlH,IAAOO,KAAV,iLAKU,SAAAL,GAAK,OAAIA,EAAMC,MAAMf,cACjC,SAAAc,GAAK,OAAIA,EAAMC,MAAMd,QAM5B8H,GAASnH,IAAO+G,IAAV,sLAGK,SAAA7G,GAAK,OAAIA,EAAMkH,OAAS,EAAI,KAC9B,SAAAlH,GAAK,uBAAIA,EAAMmH,cAAV,QAAoB,UAC1B,SAAAnH,GAAK,uBAAIA,EAAMoH,aAAV,QAAmB,UAGxB,SAAApH,GAAK,aACXA,EAAMqH,MAAQ,IAAd,UACIrH,EAAMsH,cADV,QACoB,SAKtBC,GAAMzH,IAAO+G,IAAV,4FAGK,SAAA7G,GAAK,OAAIA,EAAMqH,MAAQ,IAAM,aAErCG,GAAY1H,YAAOmH,GAAPnH,CAAH,8GAMT2H,GAAoB3H,YAAO0H,GAAP1H,CAAH,iDAIjB4H,GAAgB5H,YAAO0H,GAAP1H,CAAH,oFC1Fb6H,GAAkB,SACpBC,EACAC,GAeA,OAXAD,EAAQE,OAAOF,GAEW,kBAAfC,EACSA,IAAcD,IAEzBC,aAAqBE,QACXF,EAAUG,SAASJ,ICuC3BK,GArCO,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,KAAML,EAAiD,EAAjDA,UAAmBM,GAA8B,EAAtCC,OAAsC,EAA9BD,gBAExCE,EAAeC,qBAAWC,KAQhC,OACI,cAACd,GAAD,UACI,eAACe,GAAA,EAAD,CACIpB,MAAO,IACPD,OAAQ,IACRe,KAAMA,EAHV,UAKI,cAACO,GAAA,EAAD,CAAeC,gBAAgB,MAC/B,cAACC,GAAA,EAAD,CAAOC,QAAQ,QAAQC,KAAM,CAAEC,KAAMT,EAAalJ,QAClD,cAAC4J,GAAA,EAAD,CAAOF,KAAM,CAAEC,KAAMT,EAAalJ,QAClC,cAAC6J,GAAA,EAAD,CACIC,UAAW,SAACC,EAAQC,EAAQnJ,GAAjB,kBACFA,EAAMoJ,QAAQC,MADZ,eACwBrJ,EAAM4H,MAAM0B,QAAZ,OAAoBnB,QAApB,IAAoBA,IAAkB,OAI7E,cAACoB,GAAA,EAAD,CAAKX,QAAQ,QAAb,SACMV,EAAKsB,KAAI,SAACC,EAAOC,GACf,IAAMC,EAxBT,SAACF,GAGd,OAFqB9B,GAAgB8B,EAAMJ,MAAOxB,GAE5BQ,EAAa3I,mBAAqB2I,EAAa5I,gBAqBvCmK,CAASH,GACvB,OAAO,cAACI,GAAA,EAAD,CAA4Bf,KAAMa,GAAlC,eAAmBD,e,UCpC5CI,GAAQ,SAACC,EAAcC,GAAkC,IAAtBC,EAAqB,uDAAhB,EACpCC,EAASF,EAAKD,EACpB,OAAIG,EAAS,EACF,aAAInC,MAAMmC,EAAS,IAAIV,KAAI,SAACW,EAAGC,GAAJ,OAAUL,EAAOK,EAAIH,KACpD,IAGLI,GAAc,SAACN,EAAcC,GAAkC,IAAtBC,EAAqB,uDAAhB,EAChD,OAAOH,GAAMC,EAAMC,EAAIC,GAAMT,KAAI,SAAApI,GAAI,OAAI0G,OAAO1G,OCZ9CkJ,GAAgBxK,YAAOyK,IAAPzK,CAAH,0E,SCEb0K,GAAe1K,YAAO2K,IAAP3K,CAAH,kMAQD,SAAAE,GAAK,OAAIA,EAAMC,MAAMX,UA4BvBoL,GAfA,SAAC,GAA4C,IAA1CrG,EAAyC,EAAzCA,KAAM/E,EAAmC,EAAnCA,OAAmC,IAA3BqL,iBAA2B,MAAhB,EAAgB,EACvD,OACI,eAACH,GAAD,WAEI,cAAC,KAAD,CAAKI,KAAMvG,EAAO,QAFtB,OAGI,sBAAMtC,UAAW,UAA+B,qBAAZzC,EAA0B,gBAAkB,IAAhF,SACMA,EACEA,EAAOgK,QAAQqB,GAEf,iBC1BdE,GAAM,WAAO,IAEP5J,EAAMD,cAANC,EAER,OACI,cAACqJ,GAAD,UACI,eAAC,IAAD,WACI,uBAAMvI,UAAU,iBAAhB,UACI,cAAC,IAAD,CAAML,KAAK,aAAaoJ,SAAU,KADtC,UAGC7J,EAAE,WAJP,IAImB,2CA2EhB8J,GA7DM,SAAC,GAMP,IALXC,EAKU,EALVA,UACAC,EAIU,EAJVA,aACAC,EAGU,EAHVA,WACA/C,EAEU,EAFVA,eACAgD,EACU,EADVA,cAKA,OAFAD,EAAaA,IAAeE,MAAMH,GAG9B,cAAC,IAAD,UACI,eAAC,IAAD,CAAM3J,GAAG,YAAYiF,SAAUyE,EAA/B,UACI,cAAC,IAAD,CACIlF,MAAO,cAAC,KAAD,CAAK8E,KAAK,SACjBtJ,GAAG,IACH+J,MACKH,EAGG,cAAC,GAAD,CACI7G,KAAI,2BAAsB4G,EAAtB,KACJ3L,OAAM,OAAE6L,QAAF,IAAEA,OAAF,EAAEA,EAAeG,SACvBX,UAAWxC,IALf,cAAC,GAAD,MASZ,cAAC,IAAD,CACIrC,MAAO,cAAC,KAAD,CAAK8E,KAAK,SACjBtJ,GAAG,IACH+J,MACKH,EAGG,cAAC,GAAD,CACI7G,KAAI,+BAA0B4G,EAA1B,KACJ3L,OAAM,OAAE6L,QAAF,IAAEA,OAAF,EAAEA,EAAeI,WACvBZ,UAAWxC,IALf,cAAC,GAAD,MASZ,cAAC,IAAD,CACIrC,MAAO,cAAC,KAAD,CAAK8E,KAAK,SACjBtJ,GAAG,IACH+J,MACKH,EAGG,cAAC,GAAD,CACI7G,KAAI,+BAA0B4G,EAA1B,KACJ3L,OAAM,OAAE6L,QAAF,IAAEA,OAAF,EAAEA,EAAeK,YACvBb,UAAWxC,IALf,cAAC,GAAD,YCtCbsD,GAhCK,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,QAASf,EAAwB,EAAxBA,UAC5B,OACI,qCACI,cAAC,GAAD,CACItG,KAAK,cACL/E,OAAM,OAAEoM,QAAF,IAAEA,OAAF,EAAEA,EAASC,SACjBhB,UAAWA,IAEf,cAAC,GAAD,CACItG,KAAK,mBACL/E,OAAM,OAAEoM,QAAF,IAAEA,OAAF,EAAEA,EAASE,SACjBjB,UAAWA,IAEf,cAAC,GAAD,CACItG,KAAK,iBACL/E,OAAM,OAAEoM,QAAF,IAAEA,OAAF,EAAEA,EAASG,QACjBlB,UAAWA,IAEf,cAAC,GAAD,CACItG,KAAK,iBACL/E,OAAM,OAAEoM,QAAF,IAAEA,OAAF,EAAEA,EAASI,UACjBnB,UAAWA,IAEf,cAAC,GAAD,CACItG,KAAK,iBACL/E,OAAM,OAAEoM,QAAF,IAAEA,OAAF,EAAEA,EAASK,SACjBpB,UAAWA,Q,6BCMZqB,GA7BO,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,MAAOtB,EAA8C,EAA9CA,UAAW9C,EAAmC,EAAnCA,UAAWqE,EAAwB,EAAxBA,UAiBlD,OAFA5G,QAAQ2G,MAAMA,EAAME,SAGhB,cAAC,KAAD,CACIC,QAASH,EAAME,QAAQjC,OACvBmC,aAAc,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAFvC,SAIKJ,EAAMK,QAAQ9C,KAAI,SAAC+C,EAAgBnC,GAAjB,OACf,cAAC,KAAD,CAAQ/F,KAAMkI,EAAQC,aAAc,SAAAC,GAAG,OArBhC,SAACA,EAAaC,GAC7B,IAAMC,EAAShF,GAAgB8E,EAAK5E,GAAa,UAAY,OAG7D,OACI,cAAC,KAAD,CAAM8E,OAAQA,EAAQC,QAASV,EAA/B,SACMD,EAAME,QAAQM,GAAKC,GAChBpD,QAAQoD,EAAM/B,EAAY,KAcYkC,CAAWJ,EAAKrC,Y,UCjCrE0C,GAAY,SAACC,GACf,GAAU,IAANA,EACA,OAAO,EAGX,IADA,IAAIC,EAAM,EACD5C,EAAI,EAAGA,GAAK2C,EAAG3C,IACpB4C,GAAO5C,EACX,OAAO4C,GAaLC,GAAgB,SAACC,EAAWH,EAAWI,GACzC,IAXiBC,EAAWC,EAa5B,QAbiBD,EAWOL,MAXIM,EAWDH,GAThB,EAEOJ,GAAUM,IACRN,GAAUO,GAAKP,GAAUM,EAAIC,KAO/B,SAAIF,EAAKD,GAAZ,SAAmB,EAAIC,EAAOJ,EAAIG,IAI/CI,GAAkB,SAACJ,EAAWH,EAAWI,GAG3C,IAFA,IAAII,EAAQ,EAEHrE,EAAI,EAAGA,GAAKgE,EAAGhE,IACpBqE,GAASN,GAAc/D,EAAG6D,EAAGI,GAEjC,OAAOI,GAGLC,GAAmB,SAACN,EAAWH,EAAWI,GAG5C,IAFA,IAAII,EAAQ,EAEHrE,EAAIgE,EAAGhE,GAAK6D,EAAG7D,IACpBqE,GAASN,GAAc/D,EAAG6D,EAAGI,GAEjC,OAAOI,GAaL3B,GAAW,SAACmB,EAAWI,GACzB,OAAOJ,EAAII,GAAK,EAAIA,IAGlBM,GAAe,SAACV,EAAWI,GAC7B,OAAOO,KAAKC,KAAK/B,GAASmB,EAAGI,KAG3BrB,GAAY,SAACiB,EAAWI,GAC1B,OAAQ,EAAI,EAAIA,GAAKO,KAAKC,KAAKZ,EAAII,GAAK,EAAIA,KAE1CpB,GAAW,SAACgB,EAAWI,GACzB,OAAO,GAAM,EAAI,EAAIA,GAAK,EAAIA,KAAOJ,EAAII,GAAK,EAAIA,KAGhDS,GAAsB,SAACV,EAAWH,EAAWI,GAE/C,IADA,IAAII,EAAQ,EACHrE,EAAI,EAAGA,GAAKgE,EAAGhE,IACpBqE,GAAUrE,EAAI+D,GAAc/D,EAAG6D,EAAGI,GACtC,OAAOI,GAELM,GAAuB,SAACX,EAAWH,EAAWI,GAEhD,IADA,IAAII,EAAQ,EACHrE,EAAIgE,EAAGhE,GAAK6D,EAAG7D,IACpBqE,GAAUrE,EAAI+D,GAAc/D,EAAG6D,EAAGI,GACtC,OAAOI,GAkDLO,GAA+B,CACjCxB,QAAS,CAAC,IAAK,OAAQ,OAAQ,OAAQ,OAAQ,QAC/CH,QAAS,CACL,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACpC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACpC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACpC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACpC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KCwG7B4B,IC7OFC,GAAsB,CAC/B1M,GAAI,WACJwE,MAAO,iBACPmI,aDuBJ,WAAqB,IAEThN,EAAMD,cAANC,EAEFiN,EAAU,kBACZ,cAAC5D,GAAD,UACI,eAAC,IAAD,WACI,uBAAMvI,UAAU,iBAAhB,UACI,cAAC,IAAD,CAAML,KAAK,aAAaoJ,SAAU,KADtC,UAGC7J,EAAE,WAJP,IAImB,qCAJnB,IAImCA,EAAE,OAJrC,IAI6C,2CAVrC,EAeoBwD,mBAAiB,GAfrC,mBAeT0J,EAfS,KAeGC,EAfH,OAgBoC3J,mBAAiB,GAhBrD,mBAgBT4J,EAhBS,KAgBWC,EAhBX,OAiBwB7J,mBAAiB8J,KAjBzC,mBAiBTtD,EAjBS,KAiBKuD,EAjBL,OAkBoB/J,oBAAkB,GAlBtC,mBAkBTyG,EAlBS,KAkBGuD,EAlBH,OAoB4BhK,mBAAiB,GApB7C,mBAoBT0D,EApBS,KAoBOuG,EApBP,OAqBcjK,qBArBd,mBAqBTiH,EArBS,KAqBAiD,EArBA,OAsB0BlK,qBAtB1B,mBAsBT0G,EAtBS,KAsBMyD,EAtBN,OAwBkBnK,qBAxBlB,mBAwBToK,EAxBS,KAwBEC,EAxBF,OAyBkBrK,mBAAuC,CAAE,CAAC4E,MAAO,GAAIzB,MAAO,KAzB9E,mBAyBTmH,EAzBS,KAyBEC,EAzBF,OA4BYvK,mBAAiB,GA5B7B,mBA4BTwK,EA5BS,KA4BDC,EA5BC,OA6BkBzK,mBAA4B,IA7B9C,mBA6BToD,EA7BS,KA6BEsH,EA7BF,OA8BY1K,mBAAyB,KA9BrC,mBA8BT2K,EA9BS,KA8BDC,GA9BC,KA2DVC,GAAa,SAACpC,EAAWH,EAAWI,GACtCyB,ED+BiB,SAAC1B,EAAWH,EAAWI,GAM5C,MALgC,CAC5B7B,SAAU2B,GAAcC,EAAGH,EAAGI,GAC9B5B,WAAY+B,GAAgBJ,EAAGH,EAAGI,GAClC3B,YAAagC,GAAiBN,EAAGH,EAAGI,ICnCnBoC,CAAiBrC,EAAGH,EAAGI,KA4C5C,OAxCAqC,cAAY,WACRF,GAAYrE,EAAckD,EAAYE,KACvC,IAAK,CAACF,EAAYE,EAAoBpD,IAEzCnG,qBAAU,YAtBc,SAAC2K,EAAqBvC,EAAWH,GACrD,IAAI2C,EAGAA,EADQ,MAARD,EACKpF,GAAY,EAAG6C,GACP,MAARuC,EACApF,GAAY6C,EAAGH,GAEfjF,OAAOoF,GAEhBiC,EAAaO,GAabC,CAAgBP,EAAQnE,EAAcgE,KACvC,CAAChE,EAAcgE,EAAQG,IAG1BtK,qBAAU,WACNgK,OAAac,GACbZ,OAAaY,GACbjB,OAAWiB,KACZ,CAACzB,EAAYE,IAGhBmB,cAAY,WACR,IAAMK,ED3BM,SAChB9C,EACAI,EACApD,EACAC,GACkB,IAAD,IAGXmC,EAAsB,GAG5BnC,EAAE,UAAGA,SAAH,QAAS+C,EAEX,IAAK,IAAIG,EAHTnD,EAAI,UAAGA,SAAH,QAAW,EAGImD,GAAKlD,EAAIkD,IACxBf,EAAQ2D,KAAK,CACT5C,EACAD,GAAcC,EAAGH,EAAGI,GACpBG,GAAgBJ,EAAGH,EAAGI,GACtBK,GAAiBN,EAAGH,EAAGI,GACvBS,GAAoBV,EAAGH,EAAGI,GAC1BU,GAAqBX,EAAGH,EAAGI,KAGnC,MAAO,CAACb,QAhBQ,CAAC,IAAK,OAAQ,OAAQ,OAAQ,OAAQ,QAgBrCH,WCII4D,CAAY5B,EAAYE,GACnC2B,EDFM,SAAC7B,EAAoBE,GACrC,IA5DmBtB,EAAWI,EAmE9B,MAP0B,CACtBxB,UA7DeoB,EA6DSoB,EA7DEhB,EA6DUkB,EA5DjCtB,EAAII,GA6DPvB,SAAUA,GAASuC,EAAYE,GAC/BxC,QAAS4B,GAAaU,EAAYE,GAClCvC,UAAWA,GAAUqC,EAAYE,GACjCtC,SAAUA,GAASoC,EAAYE,ICJd4B,CAAY9B,EAAYE,GAEnC6B,EAAmBL,EAAS1D,QAAQ3C,KAAI,SAAApI,GAAI,MAAK,CACnDiI,MAAOvB,OAAO1G,EAAK,IACnBwG,MAAOxG,EAAK,OAGhB0N,EAAae,GACbb,EAAakB,GACbhB,EAAUf,GACVQ,EAAWqB,KAIZ,IAAK,CAAC7B,EAAYE,IAErBvJ,qBAAU,WACN,IAAMqL,KAAWhC,IAAcE,GAC/BI,EAAc0B,GACd7K,QAAQC,IAAI,CAAE4K,QAAOhC,aAAYE,yBAClC,CAACF,EAAYE,IAGZ,eAAC3G,GAAD,WACI,eAACH,GAAD,WACI,eAACN,GAAD,WACI,cAAC,IAAD,oBACA,eAACM,GAAD,CAAKF,OAAK,EAAV,UACI,eAACJ,GAAD,CAAQK,OAAO,WAAWJ,QAAM,EAAhC,UACI,eAAC,IAAD,WACI,qCADJ,MACsBjG,EAAE,eACpB,cAAC,IAAD,CACImP,IAAK,EACLC,cAnFP,SAACC,EAAkBC,GAAuB,IAAD,EAC9DnC,EAAa,UAACoC,WAAWD,UAAZ,QAAyB,IAmFVE,cAAe,KACfC,YAAY,SAGpB,eAAC,IAAD,WACI,qCADJ,MACsBzP,EAAE,gBACpB,cAAC,IAAD,CACImP,IAAK,EACLO,IAAK,EACLC,SAAU,GACVP,cA3FN,SAACC,EAAkBC,GAAuB,IAAD,EAC/DjC,EAAqB,UAACkC,WAAWD,UAAZ,QAAyB,IA2FlBG,YAAY,SAGpB,eAAC,IAAD,WACI,qCADJ,MACsBzP,EAAE,iBACpB,cAAC,IAAD,CACImP,IAAK,EACLC,cAhGL,SAACC,EAAkBC,GAAuB,IAAD,EAChE/B,EAAe,UAACgC,WAAWD,UAAZ,QAAyB,GACxC3B,OAAiBgB,IA+FWe,IAAKxC,EACLuC,YAAY,YAIxB,eAACzJ,GAAD,CAAQK,OAAO,WAAWJ,QAAM,EAAhC,UACI,eAAC,IAAD,WACKjG,EAAE,mBADP,IAC2B,2CACvB,cAAC,IAAD,CACImP,IAAK,EACLC,cAAe3B,EACf9G,MAAK,OAAEO,QAAF,IAAEA,IAAkB,IACzBuI,YAAY,SAKpB,cAAC,GAAD,CACI1F,UA/GV,SAACyE,GACfJ,GAAUI,IA+GcxE,aAAcA,EACd9C,eAAgBA,EAChB+C,WAAYA,EACZC,cAAeA,aAK/B,eAAClE,GAAD,WACI,cAAC,IAAD,UAAKhG,EAAE,cACJiK,EAGC,cAAC,GAAD,CACIQ,QAASA,EACTf,UAAWxC,IAJf,cAAC+F,EAAD,UASZ,eAAC3G,GAAD,WACI,eAACN,GAAD,CAAQG,MAAM,cAAcF,QAAM,EAAlC,UACI,cAAC,IAAD,UAAKjG,EAAE,WACJiK,EAGC,cAAC,GAAD,CACIe,MAAO4C,GAAaf,GACpBnD,UAAWxC,EACX+D,WAAY2C,EACZhH,UAAWA,IANf,cAACqG,EAAD,OAUR,eAACjH,GAAD,WACI,cAAC,IAAD,UAAKhG,EAAE,WACJiK,EAGC6D,EACI,cAAC,GAAD,CACI7G,KAAM6G,EACNlH,UAAWA,EACXM,eAAgBA,IAGpB,cAAC,IAAD,CAAS0I,KAAM,MATnB,cAAC3C,EAAD,cCrNpBzM,UAAU,GAYDqP,GAA2B,CACpC9C,GAVkC,CAClC1M,GAAI,YACJwE,MAAO,iBACPmI,aAAc,kBAAM8C,IAAMC,UAC1BvP,UAAU,EACVC,KAAM,SASGuP,GAAcjD,GCR3BkD,IAAkBC,sBAoDHC,OAlDf,WAAgB,IAAD,EAEiBC,YAAgB,UAAU,GAF3C,mBAEJtL,EAFI,KAEIuL,EAFJ,OAG2B7M,mBAASwM,IAHpC,mBAGJM,EAHI,KAGSC,EAHT,KAmBX,OAVAlM,QAAQC,IAAI,CAAEgM,gBAWV,cAAC,WAAD,CAAUE,SAAU,eAAC1K,GAAD,eAAmB,cAAC,IAAD,IAAnB,OAApB,SACI,cAAC,IAAD,CAAe9G,MAAO8F,EAAS9G,EAAOW,EAAtC,SACI,eAACgH,GAAD,CAAU7E,UAAS,uBAAkBgE,EAAS,WAAa,IAA3D,UAEI,cAACe,GAAD,UACI,cAAC,EAAD,CACIlG,aAAc2Q,EACd1Q,gBAAiBiQ,GACjBhQ,WAjBL,SAAC4Q,GAEhBF,EAAeE,QAmBH,eAAC3K,GAAD,WACI,cAAC,GAAD,CACIjB,MAAOyL,EAAYzL,MACnBC,SAAUA,EACVC,YA/BJ,WAChBsL,GAAWvL,MAgCK,cAACiB,GAAD,UACI,cAACuK,EAAYtD,aAAb,iBC7Cb0D,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,4BCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.45a9be5b.chunk.js","sourcesContent":["import Itheme from '../types/theme'\n\nexport const dark: Itheme = {\n    background: '#2F3437',\n    text: '#EBEBEB',\n    sidebarText: '#EBEBEB',\n    sidebarBg: '#1B222A',\n    result: '#19A6FF',\n\n    scrollBarBg: '#262A2C',\n    scrollBarThumb: '#171D25',\n\n    chart_barNormal: '#828282',\n    chart_barHighlight: '#19A6FF',\n    chart_gridColor: '#555',\n}\n\nexport const light: Itheme = {\n    background: '#FFFFFF',\n    text: '#37352F',\n    sidebarText: '#37352F',\n    sidebarBg: '#EBEBEB',\n    result: '#0C527E',\n\n    scrollBarBg: '#EBEBEB',\n    scrollBarThumb: '#888',\n\n    chart_barNormal: '#414141',\n    chart_barHighlight: '#19A6FF',\n    chart_gridColor: '#CCCCCC'\n}\n","import { H1 } from '@blueprintjs/core'\nimport styled from 'styled-components'\n\nexport const SidebarContainer = styled.nav`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    width: 100%;\n    color: ${props => props.theme.sidebarText};\n    background-color: ${ props => props.theme.sidebarBg };\n    border-right: 3px solid \"#CACBCC\";\n`\n\nexport const Header = styled(H1)`\n    font-size: 3em !important;\n    line-height: 1.2em !important;\n    font-weight: bold;\n    word-wrap: break-word;\n    width: 100%;\n    padding: .5em .4em;\n`\n\nexport const SideMain = styled.main`\n    position: relative;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const SideFooter = styled.footer`\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    padding: 0 1em;\n    align-items: flex-start;\n`\n","import React from 'react'\nimport { Button, Divider, H4, H5, H6, Icon, MenuItem } from '@blueprintjs/core'\nimport { useTranslation } from 'react-i18next'\nimport { Select } from '@blueprintjs/select'\n\nimport { IPageInfo } from '../../types/pages'\nimport packageJSON from '../../../package.json'\nimport {\n    SidebarContainer,\n    Header,\n    SideMain,\n    SideFooter,\n} from './styles'\n\ntype IProps = {\n    readonly current_page: IPageInfo,\n    readonly available_pages: IPageInfo[],\n    setNewPage: (newItem: IPageInfo) => void,\n}\n\ntype IClickHandler = {\n    handleClick: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void,\n}\n\nconst PageSelect = Select.ofType<IPageInfo>()\n\nconst Sidebar = ({\n    current_page,\n    available_pages,\n    setNewPage\n}: IProps ) => {\n\n    const { t: translate } = useTranslation();\n\n    // const initialContent = () => {\n    //     return current_page ? <MenuItem text={current_page} disabled /> : undefined\n    // }\n\n    const renderItem = (item: IPageInfo, {handleClick}: IClickHandler) => (\n\n        <MenuItem\n            key={item.id}\n            text={translate(`select-${item.id}`)}\n            onClick={handleClick}\n            active={current_page.id === item.id}\n            disabled={item.disabled}\n            icon={item.icon}\n        />\n\n    )\n\n    return (\n        <SidebarContainer>\n            <Header>\n                {translate('sidebar-header')}\n            </Header>\n\n            <Divider />\n\n            <SideMain>\n                <H4>\n                    {translate('distribution')}\n                </H4>\n                <PageSelect\n                    // initialContent={initialContent}\n                    items={available_pages}\n                    itemRenderer={renderItem}\n                    onItemSelect={setNewPage}\n                    filterable={false}\n                    noResults={<MenuItem text=\"No results.\" disabled={true} />}\n                >\n                    <Button\n                        icon=\"function\"\n                        text={translate(`select-${current_page.id}`)}\n                        rightIcon=\"caret-down\"\n                    />\n                </PageSelect>\n                <SideFooter>\n                    <H4>\n                        <Icon className=\"bp3-text-muted\" icon=\"git-branch\" />&nbsp;\n                        {translate('view-on')}&nbsp;\n                        <a href=\"https://github.com/diegoasanch/Estadistica_General\">\n                            GitHub\n                        </a>\n                    </H4>\n                    <H5 className=\"bp3-text-muted\">\n                        version: {packageJSON.version}\n                    </H5>\n                    <H6 className=\"bp3-text-muted\">\n                        <Icon icon=\"code\" />&nbsp;\n                        {translate('with')} 💖&nbsp;\n                        {translate('by')}&nbsp;\n                        <a href=\"https://github.com/diegoasanch\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            Diego.\n                        </a>\n                    </H6>\n                </SideFooter>\n            </SideMain>\n        </SidebarContainer>\n    )\n}\n\nexport default Sidebar\n","import { Navbar } from '@blueprintjs/core'\nimport styled from 'styled-components'\nimport { Switch } from '@blueprintjs/core'\n\nexport const StyledNavbar = styled(Navbar)`\n    width: 100%;\n    position: sticky;\n    top: 0;\n    &.bp3-navbar {\n        background-color: ${ props => props.theme.sidebarBg};\n    }\n`\n\nexport const StyledSwitch = styled(Switch)`\n    margin: .2em;\n`\n","import i18n from 'i18next'\nimport Backend from 'i18next-http-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport { initReactI18next } from 'react-i18next'\nimport { homepage } from '../package.json'\n\nconst { origin, pathname } = window.location\n\ni18n\n    .use(Backend)\n    .use(LanguageDetector)\n    .use (initReactI18next)\n    .init({\n        backend: {\n          loadPath: (\n              process.env.NODE_ENV === 'production' ?\n                `${origin}/${pathname}/locales/{{lng}}/translation.json`\n                :\n                `${homepage}/locales/{{lng}}/translation.json`\n            ),\n        },\n        fallbackLng: 'es',\n        debug: true,\n        interpolation: {\n            escapeValue: false\n        }\n    })\n\nexport default i18n\n","export default __webpack_public_path__ + \"static/media/uk.64f4888d.svg\";","export default __webpack_public_path__ + \"static/media/spain.12ca02a6.svg\";","import i18n from \"../i18n\"\nimport enFlag from '../svg/uk.svg'\nimport esFlag from '../svg/spain.svg'\n\nconst DEFAULT_LANG = 'es'\nconst i18n_localstorage = 'i18nextLng'\n\nexport type ILang = 'es' | 'en'\n\nconst available_langs: ILang[] = [\n    'es',\n    'en',\n]\n\nconst flags = {\n    'es': esFlag,\n    'en': enFlag,\n}\n\nconst setLang = (newLang: string): void => {\n    i18n.changeLanguage(newLang);\n    window.localStorage.setItem(i18n_localstorage, newLang)\n\n}\n\nconst getLang = (): ILang => {\n    const local = window.localStorage.getItem(i18n_localstorage) ?? 'es'\n    let lang : ILang = 'es'\n\n\n    if (local === 'es')\n        lang = 'es'\n    else if (local === 'en')\n        lang = 'en'\n\n    return lang\n\n    // For some reason this, does not work (should be type safe)\n    // if (available_langs.includes(local))\n    //     return local\n}\n\nconst validLang = (to_test: string): ILang => {\n    let out: ILang = 'es' // fallback\n\n    if (to_test === 'en')\n        out = 'en'\n\n    return out\n}\n\nexport {\n    DEFAULT_LANG,\n    available_langs,\n    flags,\n    setLang,\n    getLang,\n    validLang,\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst ImgContainer = styled.img`\n    height: 1.5em;\n`\n\ntype IProps = {\n    src: string,\n    name?: string\n}\n\nconst SvgIcon = ({ src, name }: IProps) => {\n    return (\n        <ImgContainer src={src} alt={name ?? 'svg-icon'} />\n    )\n}\n\nexport default SvgIcon\n","import React, { useEffect, useState } from 'react'\nimport { Select } from '@blueprintjs/select'\nimport { available_langs, validLang, getLang, ILang, setLang, flags } from '../../utils/internationalization'\nimport { Button, MenuItem } from '@blueprintjs/core'\nimport SvgIcon from '../SvgIcon'\n\nconst LangSelect = Select.ofType<string>()\n\ntype IClickHandler = {\n    handleClick: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void,\n}\n\nconst SelectLang = () => {\n\n    const [currentLang, setCurrentLang] = useState<ILang>('es')\n    const [langs, setLangs] = useState<ILang[]>([])\n\n    const handleSelect = (item: string) => {\n        console.log({item})\n        let newLang = validLang(item)\n        setCurrentLang(newLang)\n        setLang(newLang)\n    }\n\n    useEffect(() => {\n        setCurrentLang(getLang())\n        setLangs(available_langs)\n    }, [])\n\n    const RenderLang = (item: string, {handleClick}: IClickHandler) => {\n        let toRender = validLang(item)\n        const flag = flags[toRender]\n\n        return (\n            <MenuItem\n                key={item}\n                text={item}\n                onClick={handleClick}\n                active={currentLang === item}\n                icon={<SvgIcon src={flag} name={currentLang} /> }\n            />\n        )\n    }\n\n    return (\n        <LangSelect\n            items={langs}\n            itemRenderer={RenderLang}\n            onItemSelect={handleSelect}\n            filterable={false}\n        >\n            <Button\n                icon=\"globe-network\"\n                text={currentLang}\n                rightIcon=\"caret-down\"\n                minimal\n            />\n        </LangSelect>\n    )\n}\n\nexport default SelectLang\n","import React from 'react'\nimport {\n    NavbarGroup,\n    NavbarHeading,\n    Alignment\n} from '@blueprintjs/core'\n\nimport { StyledNavbar, StyledSwitch } from './styles'\nimport { useTranslation } from 'react-i18next'\nimport SelectLang from '../SelectLang'\n\n\ntype Iprops = {\n    title: string,\n    readonly isDark: boolean,\n    toggleTheme: () => void,\n}\n\nconst PageHeader = ({ title, isDark, toggleTheme }: Iprops) => {\n\n    const { t } = useTranslation()\n\n    return (\n        <StyledNavbar>\n            <NavbarGroup align={Alignment.LEFT}>\n                <NavbarHeading>{t(title)}</NavbarHeading>\n            </NavbarGroup>\n\n            <NavbarGroup align={Alignment.RIGHT}>\n                <SelectLang />\n                <StyledSwitch\n                    alignIndicator={Alignment.RIGHT}\n                    checked={isDark}\n                    onChange={toggleTheme}\n                    innerLabel=\"🌞\"\n                    innerLabelChecked=\"🌚\"\n                    large\n                />\n            </NavbarGroup>\n        </StyledNavbar>\n    )\n}\n\nexport default PageHeader\n","import styled from 'styled-components'\n\n// const sideBarWidth = '20vw'\nconst minSideBarWidth = '250px'\n\ntype IContainer = {\n    width?: 'auto' |  '100%' | '' | 'max-content' | string ,\n    height?: string,\n    margin?: string,\n    noPad?: boolean,\n    noGrow?: boolean,\n}\n\nconst ViewPort = styled.div`\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    flex-direction: row;\n\n    > * ::-webkit-scrollbar {\n        background-color: ${props => props.theme.scrollBarBg};\n        width: 10px;\n        height: 10px;\n        border-radius: 10px;\n    }\n    > * ::-webkit-scrollbar-thumb {\n        background-color: ${props => props.theme.scrollBarThumb};\n        border-radius: 5px;\n    }\n`\n\nconst SideContainer = styled.div`\n    width: ${minSideBarWidth};\n    height: 100%;\n    min-width: ${minSideBarWidth};\n    /* max-wid */\n`\n\nconst AppPageContainer = styled.div`\n    width: calc(100% - ${minSideBarWidth});\n    height: 100%;\n    overflow-y: auto;\n    min-width: ${minSideBarWidth};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nconst PageFrame = styled.main`\n    position: relative;\n    width: 100%;\n    overflow: auto;\n    margin: 0;\n    background-color: ${ props => props.theme.background };\n    color: ${props => props.theme.text };\n    max-width: 1050px;\n`\n\n\n\nconst Column = styled.div<IContainer>`\n    display: flex;\n    flex-direction: column;\n    flex-grow: ${props => props.noGrow ? 0 : 1};\n    height: ${ props => props.height ?? '100%'};\n    width: ${ props => props.width ?? '100%'};\n    min-width: max-content;\n\n    margin: ${props => (\n        props.noPad ? '0' : (\n            props.margin ?? '1em'\n        )\n    )};\n`\n\nconst Row = styled.div<IContainer>`\n    display: flex;\n    flex-direction: row;\n    margin: ${props => props.noPad ? '0' : 'inherit'};\n`\nconst Container = styled(Column)<IContainer>`\n    width: 100%;\n    height: 100%;\n    min-width: max-content;\n    margin: 0;\n`\nconst OverflowContainer = styled(Container)<IContainer>`\n    overflow: auto;\n`\n\nconst PageContainer = styled(Container)<IContainer>`\n    padding: 2em;\n    margin: 0;\n    overflow: auto;\n`\n\nexport {\n    ViewPort,\n    SideContainer,\n    PageFrame,\n    Column,\n    Row,\n    Container,\n    OverflowContainer,\n    AppPageContainer,\n    PageContainer,\n}\n","const isCellHighlight = (\n    value: number | string,\n    highlight: string | string[] | undefined,\n): boolean => {\n\n    let is_highlight\n    value = String(value)\n\n    if (typeof(highlight) === 'string')\n        is_highlight =  highlight === value\n\n    else if (highlight instanceof Array)\n        is_highlight = highlight.includes(value)\n    else\n        is_highlight = true\n\n    // console.log({ is_highlight, value, highlight })\n    return is_highlight\n}\n\nexport {\n    isCellHighlight\n}\n","import React, { useContext } from 'react'\nimport { IBarChartItem } from '../../types/tables'\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nimport { OverflowContainer } from '../../pages/layout';\nimport { ThemeContext } from 'styled-components'\nimport { isCellHighlight } from '../../utils/determine_style';\n\ntype IProps = {\n    data: IBarChartItem[],\n    highlight?: string | string[],\n    legend?: string,\n    roundPrecision?: number,\n}\n\nconst BinomialChart = ({ data, highlight, legend, roundPrecision }: IProps ) => {\n\n    const themeContext = useContext(ThemeContext)\n\n    const BarColor = (entry: IBarChartItem): string => {\n        const is_highlight = isCellHighlight(entry.label, highlight)\n\n        return is_highlight ? themeContext.chart_barHighlight : themeContext.chart_barNormal;\n    }\n\n    return (\n        <OverflowContainer>\n            <BarChart\n                width={450}\n                height={300}\n                data={data}\n            >\n                <CartesianGrid strokeDasharray=\"5\" />\n                <XAxis dataKey=\"label\" tick={{ fill: themeContext.text}} />\n                <YAxis tick={{ fill: themeContext.text}} />\n                <Tooltip\n                    formatter={(x: any, y: any, props: any) => (\n                        `P(${props.payload.label}) = ${props.value.toFixed(roundPrecision ?? 4)}`\n                    )}\n                />\n\n                <Bar dataKey=\"value\">\n                    { data.map((entry, index) => {\n                        const color = BarColor(entry)\n                        return <Cell key={`cell-${index}`} fill={color} />\n                    })}\n                </Bar>\n            </BarChart>\n        </OverflowContainer>\n    )\n}\n\nexport default BinomialChart\n","/**\n * from and to inclusive\n * @param from\n * @param to\n * @param step\n * @returns\n */\nconst range = (from: number, to: number, step=1): number[] => {\n    const length = to - from\n    if (length > 0)\n        return [...Array(length + 1)].map((_, i) => from + i * step);\n    return []\n}\n\nconst stringRange = (from: number, to: number, step=1): string[] => {\n    return range(from, to, step).map(item => String(item))\n}\n\nexport {\n    range,\n    stringRange\n}\n","import { Callout } from '@blueprintjs/core'\nimport styled from 'styled-components'\n\nconst StyledCallout = styled(Callout)`\n    width: max-content;\n    padding: 1.5em;\n`\n\nexport {\n    StyledCallout\n}\n","import React from 'react'\nimport { Text } from '@blueprintjs/core'\nimport styled from 'styled-components'\nimport TeX from '@matejmazur/react-katex'\n\nconst StyledResult = styled(Text)`\n    font-size: 1.4em;\n    margin: .2em;\n    margin-left: .5em;\n\n    .number {\n        font-weight: bold;\n        font-size: 1.2em;\n        color: ${props => props.theme.result};\n    }\n`\n\ntype IProps = {\n    name: string,\n    result: number | undefined,\n    precision: number,\n}\n\n/**\n * ## `name` string Will be rendered using [KaTeX](https://katex.org/docs/supported.html)\n */\nconst Result = ({ name, result, precision= 4 }: IProps) => {\n    return (\n        <StyledResult>\n\n            <TeX math={name + ' = '} />&nbsp;\n            <span className={`number` + (typeof(result) === 'undefined' ? ' bp3-skeleton' : '')}>\n                { result ?   // if no result, show skeleton loader animation\n                    result.toFixed(precision)\n                  :\n                    '0.000000' // just some placeholder for the skeleton\n                }\n            </span>\n        </StyledResult>)\n}\n\nexport default Result\n","import React from 'react'\nimport { Card, H3, Icon, Tab, Tabs } from '@blueprintjs/core'\nimport TeX from '@matejmazur/react-katex'\nimport { useTranslation } from 'react-i18next'\nimport { StyledCallout } from '../../styles/display'\nimport Result from '../Result'\nimport { IOperationType } from '../../types/pages'\nimport { IProbabilities } from '../../types/tables'\n\nconst NoR = () => {\n\n    const { t } = useTranslation()\n\n    return (\n        <StyledCallout>\n            <H3>\n                <span className=\"bp3-text-muted\">\n                    <Icon icon=\"calculator\" iconSize={25} />&nbsp;\n                </span>\n                {t('specify')} <code>r</code>\n            </H3>\n        </StyledCallout>\n    )\n}\n\ntype IProps = {\n    handleTab: (tab: IOperationType) => void,\n    successFound: number,\n    roundPrecision: number,\n    validInput: boolean,\n    probabilities: IProbabilities | undefined,\n}\n\nconst BinomialProb = ({\n    handleTab,\n    successFound,\n    validInput,\n    roundPrecision,\n    probabilities,\n}: IProps) => {\n\n    validInput = validInput && !isNaN(successFound)\n\n    return (\n        <Card>\n            <Tabs id=\"operation\" onChange={handleTab}>\n                <Tab\n                    title={<TeX math=\"P(r)\" />}\n                    id=\"p\"\n                    panel={\n                        !validInput ?\n                            <NoR />\n                        :\n                            <Result\n                                name={`P(\\\\text{V.A.} = ${successFound})`}\n                                result={probabilities?.punctual}\n                                precision={roundPrecision}\n                            />\n                    }\n                />\n                <Tab\n                    title={<TeX math=\"F(r)\"/>}\n                    id=\"f\"\n                    panel={\n                        !validInput ?\n                            <NoR />\n                        :\n                            <Result\n                                name={`P(\\\\text{V.A.} \\\\leq ${successFound})`}\n                                result={probabilities?.accum_left}\n                                precision={roundPrecision}\n                            />\n                    }\n                />\n                <Tab\n                    title={<TeX math=\"G(r)\"/>}\n                    id=\"g\"\n                    panel={\n                        !validInput ?\n                            <NoR />\n                        :\n                            <Result\n                                name={`P(\\\\text{V.A.} \\\\geq ${successFound})`}\n                                result={probabilities?.accum_right}\n                                precision={roundPrecision}\n                            />\n                    }\n                />\n            </Tabs>\n\n        </Card>\n    )\n}\n\nexport default BinomialProb\n","import React from 'react'\nimport { IResults } from '../../types/tables'\nimport Result from '../Result/Result'\n\ntype IProps = {\n    results: IResults | undefined,\n    precision: number,\n}\n\nconst ResultGroup = ({ results, precision }: IProps) => {\n    return (\n        <>\n            <Result\n                name=\"E(r) = \\mu\"\n                result={results?.expected}\n                precision={precision}\n            />\n            <Result\n                name=\"V(r) = \\sigma^2\"\n                result={results?.variance}\n                precision={precision}\n            />\n            <Result\n                name=\"D(r) = \\sigma\"\n                result={results?.std_dev}\n                precision={precision}\n            />\n            <Result\n                name=\"As = \\alpha_3\"\n                result={results?.assymetry}\n                precision={precision}\n            />\n            <Result\n                name=\"Ku = \\alpha_4\"\n                result={results?.kurtosis}\n                precision={precision}\n            />\n    </>\n    )\n}\n\nexport default ResultGroup\n","import React from 'react'\nimport { Cell, Column, Table } from '@blueprintjs/table'\nimport { IBinomialTable } from '../../types/tables'\nimport { isCellHighlight } from '../../utils/determine_style'\n\ntype IProps = {\n    table: IBinomialTable,\n    precision: number,\n    isLoading: boolean,\n    highlight?: string | string[],\n}\n\nconst BinomialTable = ({ table, precision, highlight, isLoading }: IProps) => {\n\n    const renderCell = (row: number, col: number) => {\n        const intent = isCellHighlight(row, highlight) ? 'primary' : 'none'\n        // console.log(`Cell intent: ${intent}`)\n\n        return (\n            <Cell intent={intent} loading={isLoading}>\n                { table.content[row][col]\n                    .toFixed(col ? precision : 0)\n                }\n            </Cell>\n        )\n    }\n\n    console.table(table.content)\n\n    return (\n        <Table\n            numRows={table.content.length}\n            columnWidths={[35, 75, 75, 75, 75, 75]}\n        >\n            {table.headers.map((header: string, i: number) => (\n                <Column name={header} cellRenderer={row => renderCell(row, i)} />\n            ))}\n        </Table>\n    )\n}\n\nexport default BinomialTable\n","import { IBinomialTable, IProbabilities, IResults } from \"../types/tables\"\n\nconst factorial = (n: number): number => {\n    if (n === 0)\n        return 1\n\n    let res = 1\n    for (let i = 1; i <= n; i++)\n        res *= i\n    return res\n}\n\nconst combinatory = (a: number, b: number): number => {\n    if (a === b)\n        return 1\n\n    const numerator = factorial(a)\n    const denominator = factorial(b) * factorial(a - b)\n\n    return numerator / denominator\n}\n\nconst binomialModel = (r: number, n: number, p: number): number => {\n    const nCr = combinatory(n, r)\n    const result = nCr * (p ** r) * ((1 - p) ** (n - r))\n    return result\n}\n\nconst accumulatedLeft = (r: number, n: number, p: number): number => {\n    let total = 0\n\n    for (let x = 0; x <= r; x++)\n        total += binomialModel(x, n, p)\n\n    return total\n}\n\nconst accumulatedRight = (r: number, n: number, p: number): number => {\n    let total = 0\n\n    for (let x = r; x <= n; x++)\n        total += binomialModel(x, n, p)\n\n    return total\n}\n\n/**\n * \"Esperanza matematica\" o mu\n * @param n Cantidad de observaciones\n * @param p Probabilidad de exito\n * @returns Esperanza matematica\n */\nconst expectedValue = (n: number, p: number): number => {\n    return n * p\n}\n\nconst variance = (n: number, p: number): number => {\n    return n * p * (1 - p)\n}\n\nconst stdDeviation = (n: number, p: number): number => {\n    return Math.sqrt(variance(n, p))\n}\n\nconst assymetry = (n: number, p: number): number => {\n    return (1 - 2 * p) / Math.sqrt(n * p * (1 - p))\n}\nconst kurtosis = (n: number, p: number): number => {\n    return 3 + ((1 - 6 * p * (1 - p)) / (n * p * (1 - p)))\n}\n\nconst partialLeftExpected = (r: number, n: number, p: number): number => {\n    let total = 0\n    for (let x = 0; x <= r; x++)\n        total += (x * binomialModel(x, n, p))\n    return total\n}\nconst partialRightExpected = (r: number, n: number, p: number): number => {\n    let total = 0\n    for (let x = r; x <= n; x++)\n        total += (x * binomialModel(x, n, p))\n    return total\n}\n\n\nconst createTable = (\n    n: number,\n    p: number,\n    from?: number,\n    to?: number,\n): IBinomialTable => {\n\n    const headers = ['r', 'P(r)', 'F(r)', 'G(r)', 'H(r)', 'J(r)']\n    const content: number[][] = []\n\n    from = from ?? 0\n    to = to ?? n\n\n    for (let r = from; r <= to; r++ ) {\n        content.push([\n            r,\n            binomialModel(r, n, p),\n            accumulatedLeft(r, n, p),\n            accumulatedRight(r, n, p),\n            partialLeftExpected(r, n, p),\n            partialRightExpected(r, n, p),\n        ])\n    }\n    return {headers, content}\n}\n\nconst getAnalysis = (sampleSize: number, successProbability: number): IResults  => {\n    const results: IResults = {\n        expected: expectedValue(sampleSize, successProbability),\n        variance: variance(sampleSize, successProbability),\n        std_dev: stdDeviation(sampleSize, successProbability),\n        assymetry: assymetry(sampleSize, successProbability),\n        kurtosis: kurtosis(sampleSize, successProbability),\n    }\n    return results\n}\n\nconst getProbabilities = (r: number, n: number, p: number): IProbabilities => {\n    const results: IProbabilities = {\n        punctual: binomialModel(r, n, p),\n        accum_left: accumulatedLeft(r, n, p),\n        accum_right: accumulatedRight(r, n, p),\n    }\n    return results\n}\n\nconst defaultTable: IBinomialTable = {\n    headers: ['r', 'P(r)', 'F(r)', 'G(r)', 'H(r)', 'J(r)'],\n    content: [\n        [0, 0, 0 ,0, 0, 0], [0, 0, 0 ,0, 0, 0],\n        [0, 0, 0 ,0, 0, 0], [0, 0, 0 ,0, 0, 0],\n        [0, 0, 0 ,0, 0, 0], [0, 0, 0 ,0, 0, 0],\n        [0, 0, 0 ,0, 0, 0], [0, 0, 0 ,0, 0, 0],\n        [0, 0, 0 ,0, 0, 0], [0, 0, 0 ,0, 0, 0],\n    ]\n}\n\nexport {\n    binomialModel,\n    accumulatedLeft,\n    accumulatedRight,\n    expectedValue,\n    variance,\n    stdDeviation,\n    assymetry,\n    kurtosis,\n    partialLeftExpected,\n    partialRightExpected,\n    createTable,\n    getAnalysis,\n    getProbabilities,\n    defaultTable,\n}\n","import React, { useEffect, useState } from 'react'\nimport BinomialChart from '../../components/BinomialChart'\nimport { IOperationType } from '../../types/pages'\nimport { stringRange } from '../../utils/arrays'\n\nimport { StyledCallout } from '../../styles/display'\nimport BinomialProb from '../../components/BinomialProb'\nimport ResultGroup from '../../components/ResultGroup'\nimport { PageContainer, Row, Column } from '../layout'\n\nimport BinomialTable from '../../components/BinomialTable'\nimport { useTranslation } from 'react-i18next'\nimport { useDebounce } from 'react-use'\nimport { IBarChartItem, IBinomialTable, IProbabilities, IResults } from '../../types/tables'\n\nimport {\n    H1,\n    H3,\n    Label,\n    NumericInput,\n    Spinner,\n    Icon,\n} from '@blueprintjs/core'\n\nimport {\n    createTable,\n    defaultTable,\n    getAnalysis,\n    getProbabilities\n} from '../../functions/binomials'\n\nfunction Binomial() {\n\n    const { t } = useTranslation()\n\n    const NoInput = () => (\n        <StyledCallout>\n            <H3>\n                <span className=\"bp3-text-muted\">\n                    <Icon icon=\"calculator\" iconSize={25} />&nbsp;\n                </span>\n                {t('specify')} <code>n</code> {t('and')} <code>p</code>\n            </H3>\n        </StyledCallout>\n    )\n\n    const [sampleSize, setSampleSize] = useState<number>(0) // n\n    const [successProbability, setSuccessProbability] = useState<number>(0) // p\n    const [successFound, setSuccessFound] = useState<number>(NaN) // r\n    const [validInput, setValidInput] = useState<boolean>(false)\n\n    const [roundPrecision, setRoundPrecision] = useState<number>(5)\n    const [results, setResults] = useState<IResults | undefined>()\n    const [probabilities, setProbabilities] = useState<IProbabilities | undefined>()\n\n    const [tableData, setTableData] = useState<IBinomialTable | undefined>()\n    const [chartData, setChartData] = useState<IBarChartItem[] | undefined>(([ {label: '', value: 0} ]) as IBarChartItem[])\n\n    // const [dataFrom, setDataFrom] = useState<number>(0)\n    const [dataTo, setDataTo] = useState<number>(0)\n    const [highlight, setHighlight] = useState<string | string[]>('')\n    const [opType, setOpType] = useState<IOperationType>('p')\n\n    const handleSampleSize = (valueNum: number, valueStr: string ) => {\n        setSampleSize(parseFloat(valueStr) ?? 0)\n    }\n    const handleSuccessProb = (valueNum: number, valueStr: string ) => {\n        setSuccessProbability(parseFloat(valueStr) ?? 0)\n    }\n    const handleSuccessFound = (valueNum: number, valueStr: string ) => {\n        setSuccessFound(parseFloat(valueStr) ?? 0)\n        setProbabilities(undefined)\n    }\n    const handleTab = (tab: IOperationType) => {\n        setOpType(tab)\n    }\n\n    const handleHighlight = (tab: IOperationType, r: number, n: number) => {\n        let hl: string | string[]\n\n        if (tab === 'f')\n            hl = stringRange(0, r)\n        else if (tab === 'g')\n            hl = stringRange(r, n)\n        else\n            hl = String(r)\n\n        setHighlight(hl)\n    }\n\n    const handleType = (r: number, n: number, p: number) => {\n        setProbabilities(getProbabilities(r, n, p))\n    }\n\n    // For the calculations\n    useDebounce(() => {\n        handleType( successFound, sampleSize, successProbability)\n    }, 300, [sampleSize, successProbability, successFound])\n\n    useEffect(() => {\n        handleHighlight(opType, successFound, dataTo)\n    }, [successFound, dataTo, opType])\n\n    // for rendering the loaders\n    useEffect(() => {\n        setTableData(undefined)\n        setChartData(undefined)\n        setResults(undefined)\n    }, [sampleSize, successProbability])\n\n    // Debouncing the calculations\n    useDebounce(() => {\n        const newTable = createTable(sampleSize, successProbability)\n        const analysis = getAnalysis(sampleSize, successProbability)\n\n        const probs_from_table = newTable.content.map(item => ({\n            label: String(item[0]),\n            value: item[1],\n        }))\n\n        setTableData(newTable)\n        setChartData(probs_from_table)\n        setDataTo(sampleSize)\n        setResults(analysis)\n\n        // console.table(probs_from_table)\n\n    }, 300, [sampleSize, successProbability])\n\n    useEffect(() => {\n        const valid = !!(sampleSize && successProbability)\n        setValidInput(valid)\n        console.log({ valid, sampleSize, successProbability})\n    }, [sampleSize, successProbability])\n\n    return (\n        <PageContainer>\n            <Row>\n                <Column>\n                    <H1>Input</H1>\n                    <Row noPad>\n                        <Column margin=\".8em 1em\" noGrow >\n                            <Label>\n                                <code>n</code> = {t('sample-size')}\n                                <NumericInput\n                                    min={1}\n                                    onValueChange={handleSampleSize}\n                                    minorStepSize={0.0001}\n                                    placeholder=\"n\"\n                                />\n                            </Label>\n                            <Label>\n                                <code>p</code> = {t('success-prob')}\n                                <NumericInput\n                                    min={0}\n                                    max={1}\n                                    stepSize={0.1}\n                                    onValueChange={handleSuccessProb}\n                                    placeholder=\"p\"\n                                />\n                            </Label>\n                            <Label>\n                                <code>r</code> = {t('success-found')}\n                                <NumericInput\n                                    min={0}\n                                    onValueChange={handleSuccessFound}\n                                    max={sampleSize}\n                                    placeholder=\"r\"\n                                />\n                            </Label>\n                        </Column>\n                        <Column margin=\".8em 1em\" noGrow >\n                            <Label>\n                                {t('round-precision')} <code> (0.xf)</code>\n                                <NumericInput\n                                    min={0}\n                                    onValueChange={setRoundPrecision}\n                                    value={roundPrecision ?? 'x'}\n                                    placeholder=\"x\"\n                                />\n                            </Label>\n\n                            {/* P(r) , F(r) , G(r)  */}\n                            <BinomialProb\n                                handleTab={handleTab}\n                                successFound={successFound}\n                                roundPrecision={roundPrecision}\n                                validInput={validInput}\n                                probabilities={probabilities}\n                            />\n                        </Column>\n                        </Row>\n                </Column>\n                <Column>\n                    <H1>{t('analysis')}</H1>\n                    { !validInput ?\n                        <NoInput />\n                      :\n                        <ResultGroup\n                            results={results}\n                            precision={roundPrecision}\n                        />\n                    }\n                </Column>\n            </Row>\n            <Row>\n                <Column width=\"max-content\" noGrow>\n                    <H1>{t('table')}</H1>\n                    { !validInput ?\n                        <NoInput />\n                      :\n                        <BinomialTable\n                            table={tableData || defaultTable}\n                            precision={roundPrecision}\n                            isLoading={!tableData}\n                            highlight={highlight}\n                        />\n                    }\n                </Column>\n                <Column>\n                    <H1>{t('chart')}</H1>\n                    { !validInput ?\n                        <NoInput />\n                      :\n                       (chartData ?\n                            <BinomialChart\n                                data={chartData}\n                                highlight={highlight}\n                                roundPrecision={roundPrecision}\n                            />\n                        :\n                            <Spinner size={100} />\n                        )\n                     }\n                </Column>\n            </Row>\n\n\n        </PageContainer >\n    )\n}\n\nexport default Binomial\n","import React from \"react\"\nimport { IPageInfo } from \"../types/pages\"\nimport Binomial from \"./Binomial\"\n\n// All available pages\nexport const binomial: IPageInfo = {\n    id: 'binomial',\n    title: 'pages-binomial',\n    ToRenderPage: Binomial,\n    disabled: false,\n}\n\nexport const coming_soon: IPageInfo = {\n    id: 'more_soon',\n    title: 'pages-binomial',\n    ToRenderPage: () => React.Fragment,\n    disabled: true,\n    icon: 'plus'\n}\n\n// Array of all of them\nexport const pageOptions: IPageInfo[] = [\n    binomial,\n    coming_soon,\n]\n\nexport const defaultPage = binomial\n\n","import React, { Suspense, useState } from 'react'\nimport { useLocalStorage } from 'react-use'\nimport { dark, light } from './styles/colors'\nimport { ThemeProvider } from 'styled-components'\n\nimport { FocusStyleManager, Spinner } from \"@blueprintjs/core\"\nimport Sidebar from './components/Sidebar'\nimport PageHeader from './components/PageHeader'\nimport { pageOptions, defaultPage } from './pages/available'\n\nimport { IPageInfo } from './types/pages'\nimport {\n    ViewPort,\n    SideContainer,\n    AppPageContainer,\n    PageFrame\n} from './pages/layout'\n\nFocusStyleManager.onlyShowFocusOnTabs()\n\nfunction App() {\n\n    const [isDark, setIsDark] = useLocalStorage('isDark', false)\n    const [CurrentPage, setCurrentPage] = useState(defaultPage)\n\n    const toggleTheme = () => {\n        setIsDark(!isDark)\n    }\n\n    console.log({ CurrentPage })\n\n    const selectPage = (selected: IPageInfo) => {\n\n        setCurrentPage(selected)\n\n        // TODO: push id to url\n        // TODO: use URL params from hash router\n    }\n\n    return (\n        <Suspense fallback={<AppPageContainer> <Spinner /> </AppPageContainer>}>\n            <ThemeProvider theme={isDark ? dark : light}>\n                <ViewPort className={`.bp3-ui-text ${isDark ? 'bp3-dark' : ''}`}>\n\n                    <SideContainer>\n                        <Sidebar\n                            current_page={CurrentPage}\n                            available_pages={pageOptions}\n                            setNewPage={selectPage}\n                        />\n                    </SideContainer>\n\n                    <AppPageContainer>\n                        <PageHeader\n                            title={CurrentPage.title}\n                            isDark={!!isDark}\n                            toggleTheme={toggleTheme}\n                        />\n                        <PageFrame>\n                            <CurrentPage.ToRenderPage />\n                        </PageFrame>\n                    </AppPageContainer>\n\n                </ViewPort>\n            </ThemeProvider>\n        </Suspense>\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/table/lib/css/table.css\";\nimport '@blueprintjs/select/lib/css/blueprint-select.css'\nimport 'katex/dist/katex.min.css';\nimport './i18n'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}