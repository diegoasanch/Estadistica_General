{"version":3,"sources":["styles/colors.ts","components/Sidebar/styles.ts","pages/available.ts","styles/typography.ts","components/Sidebar/Sidebar.tsx","components/PageHeader/styles.ts","i18n.ts","svg/uk.svg","svg/spain.svg","utils/internationalization.ts","components/SvgIcon/styles.ts","components/SvgIcon/SvgIcon.tsx","components/SelectLang/SelectLang.tsx","components/PageHeader/PageHeader.tsx","pages/layout.ts","utils/determine_style.ts","contexts/inputs.ts","components/ChartTooltip/ChartTooltip.tsx","components/ProbabilityChart/ProbabilityChart.tsx","utils/arrays.ts","components/Result/Result.tsx","styles/display.ts","components/NoInputCards/No2/No2.tsx","components/PunctualOrAccumulated/PunctualOrAccumulated.tsx","components/ResultGroup/ResultGroup.tsx","components/ProbabilityTable/styles.ts","components/ProbabilityTable/ProbabilityTable.tsx","pages/PageTemplate/PageTemplate.tsx","components/MathInput/MathInput.tsx","components/ProbabilityInput/ProbabilityInput.tsx","components/InputGroups/BinomialInput/BinomialInput.tsx","functions/general.ts","functions/binomials.ts","functions/shared.ts","utils/toaster.ts","components/NoGreater/NoGreater.tsx","components/NoNegative/NoNegative.tsx","svg/bug.svg","pages/Binomial/Binomial.tsx","components/InputGroups/PascalInput/PascalInput.tsx","functions/pascal.ts","pages/Pascal/Pascal.tsx","pages/Home/styles.ts","components/LandingChart/LandingChart.tsx","pages/Home/Home.tsx","components/InputGroups/HypergeometricInput/HypergeometricInput.tsx","functions/hypergeometric.ts","pages/Hypergeometric/Hypergeometric.tsx","components/LoadingScreen/LoadingScreen.tsx","components/SvgIcon/ThinkingIcon/ThinkingIcon.tsx","pages/NotFound404/NotFound404.tsx","components/InputGroups/HyperPascalInput/HyperPascalInput.tsx","functions/hyperPascal.ts","pages/HyperPascal/HyperPascal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["dark","background","text","sidebarText","sidebarBg","result","scrollBarBg","scrollBarThumb","chart_barNormal","chart_barHighlight","chart_gridColor","landing_chart","code","disabled_link","emojiSkin","light","SidebarContainer","styled","nav","props","theme","Header","H1","SideMain","main","SideFooter","footer","SideNav","NavButton","Text","selected","disabled","home","id","url","title","landingPage","select","icon","pageOptions","defaultPage","HomeHeader","HomeSubTitle","H2","StyledLink","Link","InlineIcon","Icon","Sidebar","current_page","translate","useTranslation","t","useState","filter","item","options","to","map","option","iconSize","className","href","target","rel","packageJSON","version","StyledNavbar","Navbar","StyledSwitch","Switch","window","location","origin","pathname","i18n","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","homepage","fallbackLng","debug","interpolation","escapeValue","i18n_localstorage","available_langs","flags","esFlag","enFlag","validLang","to_test","out","InlineSvg","svg","height","InlineImg","img","SvgIcon","src","name","alt","LangSelect","Select","ofType","SelectLang","currentLang","setCurrentLang","langs","setLangs","useEffect","local","localStorage","getItem","lang","getLang","items","itemRenderer","handleClick","toRender","flag","onClick","active","onItemSelect","newLang","changeLanguage","setItem","setLang","filterable","rightIcon","minimal","PageHeader","currentPage","isDark","toggleTheme","align","Alignment","LEFT","RIGHT","alignIndicator","checked","onChange","innerLabel","innerLabelChecked","large","minSideBarWidth","ViewPort","div","SideContainer","AppPageContainer","PageFrame","Column","noGrow","width","noPad","margin","Row","Container","OverflowContainer","PageContainer","CenteredContainer","isCellHighlight","value","highlight","String","Array","includes","PrecisionContext","createContext","StyledDivider","Divider","ChartTooltip","payload","label","variable","isArray","innerPayload","sanitizeTooltipProps","roundPrecision","useContext","toFixed","ProbabilityChart","data","themeContext","ThemeContext","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","tick","fill","YAxis","Tooltip","content","Bar","entry","index","color","BarColor","Cell","range","from","step","length","_","i","stringRange","handleHighlight","tab","num","StyledResult","Result","precision","math","StyledCallout","Callout","NoNAndP","a","b","c","PunctualOrAccumulated","handleTab","validInput","probabilities","varLabel","isNaN","panel","punctual","No2","accum_left","accum_right","ResultGroup","results","validResults","displayValue","undefined","texLabel","StyledTable","Table","ProbabilityTable","table","isLoading","numRows","columnWidths","headers","concat","header","cellRenderer","row","col","intent","loading","renderCell","PageTemplate","input","analysis","chart","validAnalysis","noInputs","MathInput","min","max","stepSize","onValueChange","placeholder","numValue","strValue","inputElement","parsedNum","evaluate","error","console","allowNumericCharactersOnly","AcceptsFraction","StyledLabel","Label","ProbabilityInput","position","Position","TOP","BinomialInput","handleSampleSize","handleSuccessProb","handleSuccessFound","setRoundPrecision","extraPanel","factorial","n","res","combinatory","binomialModel","r","p","accumulatedLeft","total","x","accumulatedRight","variance","stdDeviation","Math","sqrt","assymetry","kurtosis","partialLeftExpected","partialRightExpected","analysis_labels","defaultTable","defaultResults","AppToaster","Toaster","create","maxToasts","showToast","message","show","NoGreater","NoNegative","TemporaryWarning170","bug","Binomial","NaN","sampleSize","setSampleSize","successProbability","setSuccessProbability","successFound","setSuccessFound","setValidInput","setResults","setValidResults","setValidAnalysis","setProbabilities","tableData","setTableData","chartData","setChartData","dataTo","setDataTo","setHighlight","opType","setOpType","handleType","getProbabilities","some","useDebounce","toHighlight","valid","time","getAnalysis","timeEnd","newTable","push","createTable","probs_from_table","Provider","valueNum","valueStr","parseFloat","size","PascalInput","minorStepSize","probability","BinomialAccumulatedLeft","Pascal","dataFrom","setDataFrom","LandingContainer","LandingBackground","HeaderContainer","ChartControls","StyledEditableText","EditableText","SizeInput","H3","createRandomChart","prob","entries","chart_data","createLandingChart","LandingChart","playAnimation","setProb","useInterval","new_prob","ResponsiveContainer","stroke","Home","setPlayAnimation","setSize","newSize","parseInt","cleanSize","maxLength","prev","handleTotalSize","handleTotalSuccess","numVal","strVal","N","R","MIN_LIMIT","MAX_LIMIT","expectedValue","Hypergeometric","totalSize","setTotalSize","totalSuccess","setTotalSuccess","HypergeometricInput","StyledHeader","LoadingScreen","ThinkingIcon","viewBox","xmlns","cx","cy","d","stroke-linecap","stroke-linejoin","stroke-width","StyledSubTitle","MinText","NotFound404","mu","HyperPascal","MAX_n","validateInput","accL","accR","expe","HyperPascalInput","FocusStyleManager","onlyShowFocusOnTabs","App","useLocation","useLocalStorage","setIsDark","setCurrentPage","current_location","substring","page","find","gtag","hash","search","fallback","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5f70b76.chunk.js","sourcesContent":["import Itheme from '../types/theme'\n\nexport const dark: Itheme = {\n    background: '#2F3437',\n    text: '#EBEBEB',\n    sidebarText: '#EBEBEB',\n    sidebarBg: '#1B222A',\n    result: '#19A6FF',\n\n    scrollBarBg: '#262A2C',\n    scrollBarThumb: '#171D25',\n\n    chart_barNormal: '#828282',\n    chart_barHighlight: '#19A6FF',\n    chart_gridColor: '#555',\n    landing_chart: '#0D5E91',\n    code: '#59C0FF',\n    disabled_link: '#777',\n    emojiSkin: '#EEDD28',\n}\n\nexport const light: Itheme = {\n    background: '#FFFFFF',\n    text: '#37352F',\n    sidebarText: '#37352F',\n    sidebarBg: '#EBEBEB',\n    result: '#0C527E',\n\n    scrollBarBg: '#EBEBEB',\n    scrollBarThumb: '#888',\n\n    chart_barNormal: '#414141',\n    chart_barHighlight: '#19A6FF',\n    chart_gridColor: '#CCCCCC',\n    landing_chart: '#50A9E1',\n    code: '#0C527E',\n    disabled_link: '#777',\n    emojiSkin: '#FCEA2B',\n}\n","import { Text, H1 } from '@blueprintjs/core'\nimport styled from 'styled-components'\n\nexport const SidebarContainer = styled.nav`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    width: 100%;\n    color: ${props => props.theme.sidebarText};\n    background-color: ${ props => props.theme.sidebarBg };\n`\n\nexport const Header = styled(H1)`\n    font-size: 2.5em !important;\n    line-height: 1.2em !important;\n    font-weight: bold;\n    word-wrap: break-word;\n    width: 100%;\n    margin: 1em 0;\n    text-align: center;\n\n    code {\n        font-size: .9em;\n        padding-left: .1em;\n    }\n`\n\nexport const SideMain = styled.main`\n    position: relative;\n    /* padding-top: 3em; */\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const SideFooter = styled.footer`\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    padding: 0 1em;\n    align-items: flex-start;\n`\nexport const SideNav = styled.nav`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    width: 100%;\n    margin-left: .5em;\n    padding-top: 3em;\n\n    > * {\n        padding: .5em 0;\n    }\n`\n\ntype NavProp = {\n    selected: boolean,\n    disabled: boolean,\n}\n\nexport const NavButton = styled(Text)<NavProp>`\n    display: flex;\n    font-size: 1.5em;\n    align-items: baseline;\n    padding-left: .5em;\n    transition: 100ms ease-in-out;\n\n    color: ${props => (\n        props.selected ? props.theme.code\n        :\n        props.disabled ? props.theme.disabled_link\n        : 'inherit'\n    )};\n    border-left: ${props => (\n        props.selected ?\n            `4px solid ${props.theme.code}`\n        : 'none'\n    )};\n\n    &:hover {\n        border-left: 4px solid;\n    }\n`\n","import { IPageInfo } from \"../types/pages\"\n\n// All available pages\nconst home: IPageInfo = {\n    id: 'home',\n    url: '',\n    title: 'pages-home',\n    disabled: false,\n    landingPage: false,\n    select: true,\n    icon: 'home'\n}\n\nconst binomial: IPageInfo = {\n    id: 'binomial',\n    url: 'binomial',\n    title: 'pages-binomial',\n    disabled: false,\n    landingPage: true,\n    select: true,\n    icon: 'function',\n}\n\nconst pascal: IPageInfo = {\n    id: 'pascal',\n    url: 'pascal',\n    title: 'pages-pascal',\n    disabled: false,\n    landingPage: true,\n    select: true,\n    icon: 'function',\n}\n\nconst hypergeometric: IPageInfo = {\n    id: 'hypergeometric',\n    url: 'hypergeometric',\n    title: 'pages-hypergeometric',\n    disabled: false,\n    landingPage: true,\n    select: true,\n    icon: 'function',\n}\n\nconst hyperPascal: IPageInfo = {\n    id: 'hyperpascal',\n    url: 'hyperpascal',\n    title: 'pages-hyperpascal',\n    disabled: false,\n    landingPage: true,\n    select: true,\n    icon: 'function',\n}\n\nconst coming_soon: IPageInfo = {\n    id: 'more_soon',\n    url: '',\n    title: 'pages-binomial',\n    disabled: true,\n    landingPage: false,\n    select: true,\n    icon: 'plus'\n}\n\n// Array of all of them\nconst pageOptions: IPageInfo[] = [\n    home,\n    binomial,\n    pascal,\n    hypergeometric,\n    hyperPascal,\n    coming_soon,\n]\n\nconst defaultPage = home\n\nconst getAvailable = (): string[] => {\n    return pageOptions.map(item => item.id)\n}\n\nconst getLandingPageOptions = (): IPageInfo[] => {\n    return pageOptions.filter(item => item.landingPage)\n}\n\nconst getSelectOptions = (): IPageInfo[] => {\n    return pageOptions.filter(item => item.select)\n}\n\nexport {\n    home,\n    binomial,\n    pascal,\n    hypergeometric,\n    coming_soon,\n    pageOptions,\n    defaultPage,\n    getAvailable,\n    getLandingPageOptions,\n    getSelectOptions,\n}\n","import { H1, H2, Icon } from \"@blueprintjs/core\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst HomeHeader = styled(H1)`\n    text-align: center;\n    font-size: 5em !important;\n    line-height: 1em !important;\n    font-weight: bold;\n    padding: .2em;\n    border-radius: .1em;\n\n    /* background-color: ${props => props.theme.background + \"CC\"};\n    backdrop-filter: blur( 4px );\n    -webkit-backdrop-filter: blur( 4px ); */\n\n`\nconst HomeSubTitle = styled(H2)`\n    /* text-align: center; */\n    font-size: 3em !important;\n    margin-top: .5em;\n    margin-bottom: 2em;\n\n    padding: .5em;\n    border-radius: .1em;\n    /* background-color: ${props => props.theme.background + \"AA\"};\n    backdrop-filter: blur( 4px );\n    -webkit-backdrop-filter: blur( 4px ); */\n`\nconst StyledLink = styled(Link)`\n    color: inherit !important;\n\n    code {\n        color: ${props => props.theme.code } !important ;\n    }\n\n`\n\nconst InlineIcon = styled(Icon)`\n    vertical-align: baseline;\n    margin: 0 .3em;\n`\n\n\nexport {\n    HomeHeader,\n    HomeSubTitle,\n    StyledLink,\n    InlineIcon,\n}\n","import React, { useState } from 'react'\nimport { H4, H5, H6, Icon } from '@blueprintjs/core'\nimport { useTranslation } from 'react-i18next'\n\nimport { IPageInfo } from '../../types/pages'\nimport packageJSON from '../../../package.json'\nimport {\n    SidebarContainer,\n    Header,\n    SideMain,\n    SideFooter,\n    SideNav,\n    NavButton,\n} from './styles'\nimport { getSelectOptions } from '../../pages/available'\nimport { StyledLink } from '../../styles/typography'\n\ntype IProps = {\n    readonly current_page: IPageInfo,\n}\n\nconst Sidebar = ({\n    current_page,\n}: IProps ) => {\n\n    const { t: translate } = useTranslation();\n\n    const [options] = useState(getSelectOptions())\n\n    return (\n        <SidebarContainer>\n            <Header>\n                <StyledLink to=\"/\">Probab<code>/ly</code></StyledLink>\n            </Header>\n\n            <SideMain>\n                <SideNav>\n                    {\n                        options.map(option => (\n                            <StyledLink to={option.disabled ? '#' : option.url} key={option.id}>\n                                <NavButton\n                                    selected={current_page.id === option.id}\n                                    disabled={option.disabled}\n                                >\n                                    <Icon icon={option.icon ?? \"function\"} iconSize={15}/>&nbsp;\n                                    {translate(`select-${option.id}`)}\n                                </NavButton>\n                            </StyledLink>\n                        ))\n                    }\n                </SideNav>\n                <SideFooter>\n                    <H4>\n                        <Icon className=\"bp3-text-muted\" icon=\"git-branch\" />&nbsp;\n                        {translate('view-on')}&nbsp;\n                        <a href=\"https://github.com/diegoasanch/probably\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            GitHub\n                        </a>\n                    </H4>\n                    <H5 className=\"bp3-text-muted\">\n                        version: {packageJSON.version}\n                    </H5>\n                    <H6 className=\"bp3-text-muted\">\n                        <Icon icon=\"code\" />&nbsp;\n                        {translate('with')} 💖&nbsp;\n                        {translate('by')}&nbsp;\n                        <a href=\"https://github.com/diegoasanch\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            Diego.\n                        </a>\n                    </H6>\n                </SideFooter>\n            </SideMain>\n        </SidebarContainer>\n    )\n}\n\nexport default Sidebar\n","import { Navbar } from '@blueprintjs/core'\nimport styled from 'styled-components'\nimport { Switch } from '@blueprintjs/core'\n\nexport const StyledNavbar = styled(Navbar)`\n    width: 100%;\n    position: sticky;\n    top: 0;\n\n    &.bp3-navbar {\n        background-color: ${ props => props.theme.sidebarBg};\n    }\n`\n\nexport const StyledSwitch = styled(Switch)`\n    margin: .2em;\n`\n","import i18n from 'i18next'\nimport Backend from 'i18next-http-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport { initReactI18next } from 'react-i18next'\nimport { homepage } from '../package.json'\n\nconst { origin, pathname } = window.location\n// console.log(origin, pathname)\n// console.log(`Deployed translations  ${homepage}/locales/{{lng}}/translation.json`)\n// console.log(`Local translations  ${origin}${pathname}/locales/{{lng}}/translation.json`)\n\ni18n\n    .use(Backend)\n    .use(LanguageDetector)\n    .use (initReactI18next)\n    .init({\n        backend: {\n          loadPath: (\n              process.env.NODE_ENV === 'production' ?\n              `${homepage}/locales/{{lng}}/translation.json`\n              :\n              `${origin}${pathname}/locales/{{lng}}/translation.json`\n            ),\n        },\n        fallbackLng: 'es',\n        debug: true,\n        interpolation: {\n            escapeValue: false\n        }\n    })\n\nexport default i18n\n","export default __webpack_public_path__ + \"static/media/uk.64f4888d.svg\";","export default __webpack_public_path__ + \"static/media/spain.12ca02a6.svg\";","import i18n from \"../i18n\"\nimport enFlag from '../svg/uk.svg'\nimport esFlag from '../svg/spain.svg'\n\nconst DEFAULT_LANG = 'es'\nconst i18n_localstorage = 'i18nextLng'\n\nexport type ILang = 'es' | 'en'\n\nconst available_langs: ILang[] = [\n    'es',\n    'en',\n]\n\nconst flags = {\n    'es': esFlag,\n    'en': enFlag,\n}\n\nconst setLang = (newLang: string): void => {\n    i18n.changeLanguage(newLang);\n    window.localStorage.setItem(i18n_localstorage, newLang)\n\n}\n\nconst getLang = (): ILang => {\n    const local = window.localStorage.getItem(i18n_localstorage) ?? 'es'\n    let lang : ILang = 'es'\n\n\n    if (local === 'es')\n        lang = 'es'\n    else if (local === 'en')\n        lang = 'en'\n\n    return lang\n\n    // For some reason this, does not work (should be type safe)\n    // if (available_langs.includes(local))\n    //     return local\n}\n\nconst validLang = (to_test: string): ILang => {\n    let out: ILang = 'es' // fallback\n\n    if (to_test === 'en')\n        out = 'en'\n\n    return out\n}\n\nexport {\n    DEFAULT_LANG,\n    available_langs,\n    flags,\n    setLang,\n    getLang,\n    validLang,\n}\n","import styled from \"styled-components\";\n\ntype InlineProps = {\n    width?: string,\n    heigth?: string,\n}\n\nconst InlineSvg = styled.svg<InlineProps>`\n    height: ${props => props.height ?? '1.5em'};\n    vertical-align: text-bottom;\n`\n\nconst InlineImg = styled.img<InlineProps>`\n    height: ${props => props.height ?? '1.5em'};\n    vertical-align: text-bottom;\n`\n\nexport {\n    InlineSvg,\n    InlineImg,\n}\n","import React from 'react'\nimport { InlineImg } from './styles'\n\ntype IProps = {\n    src: string,\n    name?: string\n    height?: string,\n}\n\nconst SvgIcon = ({ src, name, height }: IProps) => {\n    return (\n        <InlineImg src={src} alt={name ?? 'svg-icon'} height={height} />\n    )\n}\n\nexport default SvgIcon\n","import React, { useEffect, useState } from 'react'\nimport { Select } from '@blueprintjs/select'\nimport { available_langs, validLang, getLang, ILang, setLang, flags } from '../../utils/internationalization'\nimport { Button, MenuItem } from '@blueprintjs/core'\nimport SvgIcon from '../SvgIcon'\n\nconst LangSelect = Select.ofType<string>()\n\ntype IClickHandler = {\n    handleClick: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void,\n}\n\nconst SelectLang = () => {\n\n    const [currentLang, setCurrentLang] = useState<ILang>('es')\n    const [langs, setLangs] = useState<ILang[]>([])\n\n    const handleSelect = (item: string) => {\n        let newLang = validLang(item)\n        setCurrentLang(newLang)\n        setLang(newLang)\n    }\n\n    useEffect(() => {\n        setCurrentLang(getLang())\n        setLangs(available_langs)\n    }, [])\n\n    const RenderLang = (item: string, {handleClick}: IClickHandler) => {\n        let toRender = validLang(item)\n        const flag = flags[toRender]\n\n        return (\n            <MenuItem\n                key={item}\n                text={item}\n                onClick={handleClick}\n                active={currentLang === item}\n                icon={<SvgIcon src={flag} name={currentLang} /> }\n            />\n        )\n    }\n\n    return (\n        <LangSelect\n            items={langs}\n            itemRenderer={RenderLang}\n            onItemSelect={handleSelect}\n            filterable={false}\n        >\n            <Button\n                icon=\"globe-network\"\n                text={currentLang}\n                rightIcon=\"caret-down\"\n                minimal\n            />\n        </LangSelect>\n    )\n}\n\nexport default SelectLang\n","import React from 'react'\nimport { StyledNavbar, StyledSwitch } from './styles'\nimport { useTranslation } from 'react-i18next'\nimport SelectLang from '../SelectLang'\n\nimport { IPageInfo } from '../../types/pages'\nimport { InlineIcon } from '../../styles/typography'\nimport {\n    NavbarGroup,\n    NavbarHeading,\n    Alignment,\n} from '@blueprintjs/core'\n\ntype Iprops = {\n    title: string,\n    currentPage: IPageInfo,\n    readonly isDark: boolean,\n    toggleTheme: () => void,\n}\n\nconst PageHeader = ({ title, currentPage, isDark, toggleTheme }: Iprops) => {\n\n    const { t } = useTranslation()\n\n    return (\n        <StyledNavbar>\n            <NavbarGroup align={Alignment.LEFT}>\n                <NavbarHeading>\n                    { currentPage.icon &&\n                        <InlineIcon icon={currentPage.icon} iconSize={12} />\n                    }\n                    {t(title)}\n                </NavbarHeading>\n            </NavbarGroup>\n\n            <NavbarGroup align={Alignment.RIGHT}>\n                <SelectLang />\n                <StyledSwitch\n                    alignIndicator={Alignment.RIGHT}\n                    checked={isDark}\n                    onChange={toggleTheme}\n                    innerLabel=\"🌞\"\n                    innerLabelChecked=\"🌚\"\n                    large\n                />\n            </NavbarGroup>\n        </StyledNavbar>\n    )\n}\n\nexport default PageHeader\n","import styled from 'styled-components'\n\n// const sideBarWidth = '20vw'\nconst minSideBarWidth = '250px'\n\ntype IContainer = {\n    width?: 'auto' |  '100%' | '' | 'max-content' | string ,\n    height?: string,\n    margin?: string,\n    noPad?: boolean,\n    noGrow?: boolean,\n}\n\nconst ViewPort = styled.div`\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    flex-direction: row;\n\n    > * ::-webkit-scrollbar {\n        background-color: ${props => props.theme.scrollBarBg};\n        width: 10px;\n        height: 10px;\n        border-radius: 10px;\n    }\n    > * ::-webkit-scrollbar-thumb {\n        background-color: ${props => props.theme.scrollBarThumb};\n        border-radius: 5px;\n    }\n`\n\nconst SideContainer = styled.div`\n    width: ${minSideBarWidth};\n    height: 100%;\n    min-width: ${minSideBarWidth};\n    /* max-wid */\n`\n\nconst AppPageContainer = styled.div`\n    width: calc(100% - ${minSideBarWidth});\n    height: 100%;\n    overflow-y: auto;\n    min-width: ${minSideBarWidth};\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nconst PageFrame = styled.main`\n    position: relative;\n    width: 100%;\n    overflow: auto;\n    margin: 0;\n    background-color: ${ props => props.theme.background };\n    color: ${props => props.theme.text };\n    max-width: 1050px;\n    height: 100%;\n`\n\n\n\nconst Column = styled.div<IContainer>`\n    display: flex;\n    flex-direction: column;\n    flex-grow: ${props => props.noGrow ? 0 : 1};\n    height: ${ props => props.height ?? '100%'};\n    width: ${ props => props.width ?? '100%'};\n    min-width: max-content;\n\n    margin: ${props => (\n        props.noPad ? '0' : (\n            props.margin ?? '1em'\n        )\n    )};\n`\n\nconst Row = styled.div<IContainer>`\n    display: flex;\n    flex-direction: row;\n    margin: ${props => props.noPad ? '0' : 'inherit'};\n`\nconst Container = styled(Column)<IContainer>`\n    width: 100%;\n    height: 100%;\n    min-width: max-content;\n    margin: 0;\n`\nconst OverflowContainer = styled(Container)<IContainer>`\n    overflow: auto;\n`\n\nconst PageContainer = styled(Container)<IContainer>`\n    padding: 2em;\n    margin: 0;\n    overflow: auto;\n`\n\nconst CenteredContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`\n\n\nexport {\n    ViewPort,\n    SideContainer,\n    PageFrame,\n    Column,\n    Row,\n    Container,\n    OverflowContainer,\n    AppPageContainer,\n    PageContainer,\n    CenteredContainer\n}\n","const isCellHighlight = (\n    value: number | string,\n    highlight: string | string[] | undefined,\n): boolean => {\n\n    let is_highlight\n    value = String(value)\n\n    if (typeof(highlight) === 'string')\n        is_highlight =  highlight === value\n\n    else if (highlight instanceof Array)\n        is_highlight = highlight.includes(value)\n    else\n        is_highlight = true\n\n    // console.log({ is_highlight, value, highlight })\n    return is_highlight\n}\n\nexport {\n    isCellHighlight\n}\n","import { createContext } from \"react\";\n\nconst PrecisionContext = createContext<number>(4)\n\nexport {\n    PrecisionContext,\n}\n","import React, { useContext } from 'react'\nimport { Card, Divider } from '@blueprintjs/core';\nimport styled from 'styled-components'\nimport { PrecisionContext } from '../../contexts/inputs';\n\nconst StyledDivider = styled(Divider)`\n    margin: .8em 0;\n`\n\ntype ITooltipProps = {\n    active: boolean,\n    label: string,\n    value: number,\n    variable: string,\n}\n\nconst sanitizeTooltipProps = (props: any): ITooltipProps => {\n    let { active, payload, label, variable } = props\n    active = !!active\n\n    let value = 0\n\n    if (typeof(label) !== 'string')\n        label = String(label)\n\n    if (Array.isArray(payload)) {\n        const innerPayload = payload[0]\n\n        if (typeof(innerPayload?.value) === 'number')\n            value = innerPayload.value\n    }\n\n    return { active, label, value, variable }\n}\n\nconst ChartTooltip = (props: any) => {\n\n    const { active, label, value, variable } = sanitizeTooltipProps(props)\n    const roundPrecision = useContext(PrecisionContext)\n    // console.log({ props, variable })\n\n    if (!active)\n        return <></>\n\n    return (\n        <Card>\n            <code>{ variable }</code> = {label}\n            <StyledDivider />\n            <code>P({label})</code> = {value.toFixed(roundPrecision)}\n        </Card>\n    )\n}\nexport default ChartTooltip\n","import React, { useContext } from 'react'\nimport { IBarChartItem } from '../../types/tables'\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nimport { OverflowContainer } from '../../pages/layout';\nimport { ThemeContext } from 'styled-components'\nimport { isCellHighlight } from '../../utils/determine_style';\nimport ChartTooltip from '../ChartTooltip';\n\n\ntype IProps = {\n    data: IBarChartItem[],\n    highlight?: string | string[],\n    variable: string,\n}\n\nconst ProbabilityChart = ({ data, highlight, variable }: IProps ) => {\n\n    const themeContext = useContext(ThemeContext)\n\n    const BarColor = (entry: IBarChartItem): string => {\n        const is_highlight = isCellHighlight(entry.label, highlight)\n        return is_highlight ? themeContext.chart_barHighlight : themeContext.chart_barNormal;\n    }\n\n    return (\n        <OverflowContainer>\n            <BarChart\n                width={450}\n                height={300}\n                data={data}\n            >\n                <CartesianGrid strokeDasharray=\"5\" />\n                <XAxis dataKey=\"label\" tick={{ fill: themeContext.text}} />\n                <YAxis tick={{ fill: themeContext.text}} />\n                <Tooltip content={(props: any ) => (\n                    <ChartTooltip variable={variable} {...props} />\n                )} />\n\n                <Bar dataKey=\"value\">\n                    { data.map((entry, index) => {\n                        const color = BarColor(entry)\n                        return <Cell key={`cell-${index}`} fill={color} />\n                    })}\n                </Bar>\n            </BarChart>\n        </OverflowContainer>\n    )\n}\n\nexport default ProbabilityChart\n","import { IOperationType } from \"../types/pages\";\n\n/**\n * from and to inclusive\n * @param from\n * @param to\n * @param step\n * @returns\n */\nconst range = (from: number, to: number, step=1): number[] => {\n    const length = to - from\n    if (length > 0)\n        return [...Array(length + 1)].map((_, i) => from + i * step);\n    return []\n}\n\nconst stringRange = (from: number, to: number, step=1): string[] => {\n    return range(from, to, step).map(item => String(item))\n}\n\nconst handleHighlight = (tab: IOperationType, num: number, to: number, from=0): string | string[] => {\n    let hl: string | string[]\n\n    if (tab === 'f')\n        hl = stringRange(from, num)\n    else if (tab === 'g')\n        hl = stringRange(num, to)\n    else\n        hl = String(num)\n\n    return hl\n}\n\nexport {\n    range,\n    stringRange,\n    handleHighlight,\n}\n","import React from 'react'\nimport { Text } from '@blueprintjs/core'\nimport styled from 'styled-components'\nimport TeX from '@matejmazur/react-katex'\n\nconst StyledResult = styled(Text)`\n    font-size: 1.4em;\n    margin: .2em;\n    margin-left: .5em;\n\n    .number {\n        font-weight: bold;\n        font-size: 1.2em;\n        color: ${props => props.theme.result};\n    }\n`\n\ntype IProps = {\n    name: string,\n    result: number | undefined,\n    precision: number,\n}\n\n/**\n * ## `name` string Will be rendered using [KaTeX](https://katex.org/docs/supported.html)\n * If result is undefined, an animation will be displayed\n */\nconst Result = ({ name, result, precision= 4 }: IProps) => {\n    return (\n        <StyledResult>\n\n            <TeX math={name + ' = '} />&nbsp;\n            <span className={`number` + (typeof(result) === 'undefined' ? ' bp3-skeleton' : '')}>\n                { result ?   // if no result, show skeleton loader animation\n                    result.toFixed(precision)\n                  :\n                    '0.000000' // just some placeholder for the skeleton\n                }\n            </span>\n        </StyledResult>)\n}\n\nexport default Result\n","import { Callout } from '@blueprintjs/core'\nimport styled from 'styled-components'\n\nconst StyledCallout = styled(Callout)`\n    width: max-content;\n    padding: 1.5em;\n`\n\nexport {\n    StyledCallout\n}\n","import React from 'react'\nimport { H3, Icon } from '@blueprintjs/core'\nimport { useTranslation } from 'react-i18next'\nimport { StyledCallout } from '../../../styles/display'\n\ntype IProps = {\n    a: string,\n    b?: string,\n    c?: string,\n}\n\nconst NoNAndP = ({ a, b, c }: IProps) => {\n    const { t } = useTranslation()\n\n    return (\n        <StyledCallout>\n            <H3>\n                <span className=\"bp3-text-muted\">\n                    <Icon icon=\"calculator\" iconSize={25} />&nbsp;\n                </span>\n                {t('specify')} <code>{a}</code>\n                { c &&\n                    <>\n                        &nbsp;, <code>{c}</code>\n                    </>\n                }\n                { b &&\n                    <>\n                        &nbsp;{t('and')} <code>{b}</code>\n                    </>\n                }\n            </H3>\n        </StyledCallout>\n    )\n}\n\nexport default NoNAndP\n","import React, { useContext } from 'react'\nimport { Card, Tab, Tabs } from '@blueprintjs/core'\nimport TeX from '@matejmazur/react-katex'\nimport Result from '../Result'\nimport { IOperationType } from '../../types/pages'\nimport { IProbabilities } from '../../types/tables'\nimport No2 from '../NoInputCards/No2'\nimport { PrecisionContext } from '../../contexts/inputs'\n\ntype IProps = {\n    handleTab: (tab: IOperationType) => void,\n    variable: number,\n    validInput: boolean,\n    probabilities: IProbabilities | undefined,\n    varLabel: string,\n}\n\nconst PunctualOrAccumulated = ({\n    handleTab,\n    variable,\n    validInput,\n    probabilities,\n    varLabel,\n}: IProps) => {\n\n    validInput = validInput && !isNaN(variable)\n    const roundPrecision = useContext(PrecisionContext)\n\n    return (\n        <Card>\n            <Tabs id=\"operation\" onChange={handleTab}>\n                <Tab\n                    title={<TeX math=\"P(r)\" />}\n                    id=\"p\"\n                    panel={\n                        !validInput ?\n                            <No2 a={varLabel} />\n                        :\n                            <Result\n                                name={`P(\\\\text{V.A.} = ${variable})`}\n                                result={probabilities?.punctual}\n                                precision={roundPrecision}\n                            />\n                    }\n                />\n                <Tab\n                    title={<TeX math=\"F(r)\"/>}\n                    id=\"f\"\n                    panel={\n                        !validInput ?\n                            <No2 a={varLabel} />\n                        :\n                            <Result\n                                name={`P(\\\\text{V.A.} \\\\leq ${variable})`}\n                                result={probabilities?.accum_left}\n                                precision={roundPrecision}\n                            />\n                    }\n                />\n                <Tab\n                    title={<TeX math=\"G(r)\"/>}\n                    id=\"g\"\n                    panel={\n                        !validInput ?\n                            <No2 a={varLabel} />\n                        :\n                            <Result\n                                name={`P(\\\\text{V.A.} \\\\geq ${variable})`}\n                                result={probabilities?.accum_right}\n                                precision={roundPrecision}\n                            />\n                    }\n                />\n            </Tabs>\n\n        </Card>\n    )\n}\n\nexport default PunctualOrAccumulated\n","import React, { useContext } from 'react'\nimport { PrecisionContext } from '../../contexts/inputs'\nimport { IResult } from '../../types/tables'\nimport Result from '../Result/Result'\n\ntype IProps = {\n    results: IResult[],\n    validResults: boolean,\n}\n\nconst ResultGroup = ({ results, validResults }: IProps) => {\n\n    const roundPrecision = useContext(PrecisionContext)\n\n    return (\n        <>\n            { results.map(( item, index ) => {\n                const displayValue = validResults ? item.value : undefined\n                return (\n                    <Result\n                        name={item.texLabel}\n                        result={displayValue}\n                        precision={roundPrecision}\n                        key={`result-${index}`}\n                    />\n                )\n            })}\n        </>\n    )\n}\n\nexport default ResultGroup\n","import { Table } from '@blueprintjs/table'\nimport styled from 'styled-components'\n\nexport const StyledTable = styled(Table)`\n    height: min-content;\n`\n","import React, { useContext } from 'react'\nimport { Cell, Column } from '@blueprintjs/table'\nimport { ITable } from '../../types/tables'\nimport { isCellHighlight } from '../../utils/determine_style'\nimport { StyledTable } from './styles'\nimport { PrecisionContext } from '../../contexts/inputs'\n\ntype IProps = {\n    table: ITable,\n    isLoading: boolean,\n    highlight?: string | string[],\n}\n\n/**\n * The first column is the thinnest\n */\nconst getColumnWidths = (length: number) => {\n    return [35].concat(Array(length - 1).fill(75))\n}\n\nconst ProbabilityTable = ({ table, highlight, isLoading }: IProps) => {\n\n    const roundPrecision = useContext(PrecisionContext)\n\n    const renderCell = (row: number, col: number) => {\n        // Determine if higlightable from first value of row\n        const intent = isCellHighlight(table.content[row][0], highlight) ? 'primary' : 'none'\n\n        return (\n            <Cell intent={intent} loading={isLoading}>\n                { table.content[row][col]\n                    .toFixed(col ? roundPrecision : 0)\n                }\n            </Cell>\n        )\n    }\n\n    // console.table(table.content)\n\n    return (\n        <StyledTable\n            numRows={table.content.length}\n            columnWidths={getColumnWidths(table.headers.length)}\n        >\n            {table.headers.map((header: string, i: number) => (\n                <Column\n                    name={header}\n                    cellRenderer={row => renderCell(row, i)}\n                    key={`column-${i}`} />\n            ))}\n        </StyledTable>\n    )\n}\n\nexport default ProbabilityTable\n","import React from 'react'\nimport { Column, PageContainer, Row } from '../layout'\nimport { H1 } from '@blueprintjs/core'\nimport { useTranslation } from 'react-i18next'\nimport NoInput from '../../components/NoInputCards/No2'\n\n\n// For displaying the specify a and b card when no input\ntype INoInputs = {\n    a: string,\n    b: string,\n    c?: string,\n}\n\ntype IProps = {\n    input: JSX.Element,\n    analysis: JSX.Element,\n    table: JSX.Element,\n    chart: JSX.Element,\n    validInput: boolean,\n    validAnalysis?: boolean, // TODO: maybe fix\n    noInputs: INoInputs\n}\n\n/**\n * This is a stateles component, it is intended to be the blueprint for all of\n * the pages, receives the page components to render and places them accordingly\n * @returns\n */\nconst PageTemplate = ({ input, analysis, table, chart, validInput, validAnalysis, noInputs }: IProps) => {\n\n    const { t } = useTranslation()\n\n\n    return (\n        <PageContainer>\n            <Row>\n                <Column>\n                    <H1>Input</H1>\n                    { input }\n                </Column>\n                <Column>\n                    <H1>{t('analysis')}</H1>\n                    { validAnalysis ?\n                        analysis\n                      :\n                        <NoInput {...noInputs} />\n                    }\n                </Column>\n            </Row>\n            <Row>\n                <Column width=\"max-content\" noGrow>\n                    <H1>{t('table')}</H1>\n                    { validInput ?\n                        table\n                      :\n                        <NoInput {...noInputs} />\n                    }\n                </Column>\n                <Column>\n                    <H1>{t('chart')}</H1>\n                    { validInput ?\n                        chart\n                      :\n                        <NoInput {...noInputs} />\n                    }\n                </Column>\n            </Row>\n        </PageContainer>\n    )\n}\n\nexport default PageTemplate\n","import React from 'react'\nimport { INumericInputProps, NumericInput } from '@blueprintjs/core'\nimport { evaluate } from 'mathjs'\n\ntype HandleInputType = (valueAsNumber: number, valueAsString: string, inputElement: HTMLInputElement | null) => void\n\nconst MathInput = ({ min, max, stepSize, onValueChange, placeholder }: INumericInputProps) => {\n\n    const handleInput: HandleInputType = ( numValue: number, strValue: string, inputElement: HTMLInputElement | null ): void => {\n        // console.log(`Value as number: ${numValue}, Value as string: ${strValue}`)\n\n        if (onValueChange) {\n            let parsedNum: number\n            try {\n                parsedNum = evaluate(strValue)\n            }\n            catch (error) {\n                console.error('mathjs error 🤦‍♂️: parsing input error')\n                parsedNum = 0\n            }\n            // console.log(`Parsed num: ${parsedNum}, type: ${typeof(parsedNum)}`)\n            onValueChange(parsedNum, String(parsedNum), inputElement)\n        }\n    }\n\n    return (\n        <NumericInput\n            min={min}\n            max={max}\n            stepSize={stepSize}\n            placeholder={placeholder}\n            onValueChange={handleInput}\n            allowNumericCharactersOnly={false}\n        />\n    )\n}\n\nexport default MathInput\n","import React from 'react'\nimport { Icon, Label, Position } from '@blueprintjs/core'\nimport { Tooltip2 } from \"@blueprintjs/popover2\"\nimport { useTranslation } from 'react-i18next'\nimport MathInput from '../MathInput'\nimport styled from 'styled-components'\n\nconst AcceptsFraction = () => {\n    const { t } = useTranslation()\n    return (\n        <>\n            {t('accepts-fract')}&nbsp;&nbsp; <code>1/2</code> = <code>0.5</code>\n        </>\n    )\n}\nconst StyledLabel = styled(Label)`\n    .bp3-icon {\n        vertical-align: baseline;\n    }\n`\n\n/**\n * This is just a wrapper for the MathInput component, will render the probability\n * label with a tooltip\n * @param props\n * @returns\n */\nconst ProbabilityInput = (props: any) => {\n    const { t } = useTranslation()\n\n    return (\n        <StyledLabel>\n            <Tooltip2 content={<AcceptsFraction />} position={Position.TOP}>\n                <>\n                    <code>p</code> = {t('success-prob')}&nbsp;\n                    <Icon intent=\"primary\" icon=\"info-sign\" iconSize={12} />\n                </>\n            </Tooltip2>\n            <MathInput {...props} />\n        </StyledLabel>\n    )\n}\n\nexport default ProbabilityInput\n","import { Label, NumericInput } from '@blueprintjs/core'\nimport React, { useContext } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { PrecisionContext } from '../../../contexts/inputs'\nimport { Column, Row } from '../../../pages/layout'\nimport ProbabilityInput from '../../ProbabilityInput'\n\ntype BlueprintStateSetter = (valueNum: number, valueStr: string) => void\ntype StateSetter = (value: React.SetStateAction<number>) => void\n\ntype IProps = {\n    handleSampleSize: StateSetter,\n    handleSuccessProb: BlueprintStateSetter,\n    handleSuccessFound: StateSetter,\n    setRoundPrecision: StateSetter,\n    extraPanel?: JSX.Element,\n}\n\nconst BinomialInput = ({\n    handleSampleSize,\n    handleSuccessProb,\n    handleSuccessFound,\n    setRoundPrecision,\n    extraPanel,\n\n}: IProps) => {\n\n    const { t } = useTranslation()\n    const roundPrecision = useContext(PrecisionContext)\n\n    return (\n        <Row noPad>\n            <Column margin=\".8em 1em\" noGrow >\n                <Label>\n                    <code>n</code> = {t('sample-size')}\n                    <NumericInput\n                        min={1}\n                        onValueChange={handleSampleSize}\n                        stepSize={1}\n                        placeholder=\"n\"\n                    />\n                </Label>\n                <ProbabilityInput\n                    min={0}\n                    max={1}\n                    stepSize={0.1}\n                    onValueChange={handleSuccessProb}\n                    placeholder=\"p\"\n                />\n                <Label>\n                    <code>r</code> = {t('success-found')}\n                    <NumericInput\n                        min={0}\n                        onValueChange={handleSuccessFound}\n                        placeholder=\"r\"\n                    />\n                </Label>\n            </Column>\n            <Column margin=\".8em 1em\" noGrow >\n                <Label>\n                    {t('round-precision')} <code> (0.xf)</code>\n                    <NumericInput\n                        min={0}\n                        onValueChange={setRoundPrecision}\n                        value={roundPrecision ?? 'x'}\n                        placeholder=\"x\"\n                    />\n                </Label>\n                { extraPanel }\n            </Column>\n        </Row>\n    )\n}\n\nexport default BinomialInput\n","// eslint-disable-next-line\nimport { preCalculatedFactorials } from \"../utils/constants\"\n\nconst factorial = (n: number): number => {\n    if (n === 0)\n        return 1\n    let res = 1\n    for (let i = 1; i <= n; i++)\n        res *= i\n    return res\n}\n\n// const factorial = (n: number): number => {\n//     // This quite faster\n//     return preCalculatedFactorials[n]\n// }\n\n/**\n * `a` choose `b`\n */\nconst combinatory = (a: number, b: number): number => {\n    if (a === b)\n        return 1\n\n    const numerator = factorial(a)\n    const denominator = factorial(b) * factorial(a - b)\n\n    return numerator / denominator\n}\n\nexport {\n    factorial,\n    combinatory,\n}\n","import { ITable, IProbabilities, IResult, IBarChartItem } from \"../types/tables\"\nimport { combinatory } from \"./general\"\n\n\n\nconst binomialModel = (r: number, n: number, p: number): number => {\n    const nCr = combinatory(n, r)\n    const result = nCr * (p ** r) * ((1 - p) ** (n - r))\n    return result\n}\n\nconst accumulatedLeft = (r: number, n: number, p: number): number => {\n    let total = 0\n\n    for (let x = 0; x <= r; x++)\n        total += binomialModel(x, n, p)\n\n    return total\n}\n\nconst accumulatedRight = (r: number, n: number, p: number): number => {\n    let total = 0\n\n    for (let x = r; x <= n; x++)\n        total += binomialModel(x, n, p)\n\n    return total\n}\n\n/**\n * \"Esperanza matematica\" o mu\n * @param n Cantidad de observaciones\n * @param p Probabilidad de exito\n * @returns Esperanza matematica\n */\nconst expectedValue = (n: number, p: number): number => {\n    return n * p\n}\n\nconst variance = (n: number, p: number): number => {\n    return n * p * (1 - p)\n}\n\nconst stdDeviation = (n: number, p: number): number => {\n    return Math.sqrt(variance(n, p))\n}\n\nconst assymetry = (n: number, p: number): number => {\n    return (1 - 2 * p) / Math.sqrt(n * p * (1 - p))\n}\nconst kurtosis = (n: number, p: number): number => {\n    return 3 + ((1 - 6 * p * (1 - p)) / (n * p * (1 - p)))\n}\n\nconst partialLeftExpected = (r: number, n: number, p: number): number => {\n    let total = 0\n    for (let x = 0; x <= r; x++)\n        total += (x * binomialModel(x, n, p))\n    return total\n}\nconst partialRightExpected = (r: number, n: number, p: number): number => {\n    let total = 0\n    for (let x = r; x <= n; x++)\n        total += (x * binomialModel(x, n, p))\n    return total\n}\n\n\nconst createTable = (\n    n: number,\n    p: number,\n    from?: number,\n    to?: number,\n): ITable => {\n\n    const headers = ['r', 'P(r)', 'F(r)', 'G(r)', 'H(r)', 'J(r)']\n    const content: number[][] = []\n\n    from = from ?? 0\n    to = to ?? n\n\n    for (let r = from; r <= to; r++ ) {\n        content.push([\n            r,\n            binomialModel(r, n, p),\n            accumulatedLeft(r, n, p),\n            accumulatedRight(r, n, p),\n            partialLeftExpected(r, n, p),\n            partialRightExpected(r, n, p),\n        ])\n    }\n    return {headers, content}\n}\n\nconst createLandingChart = (n: number, p: number): IBarChartItem[] => {\n    const chart_data: IBarChartItem[] = []\n\n    for (let r = 0; r <= n; r++) {\n        chart_data.push(\n            {\n                label: String(r),\n                value: binomialModel(r, n, p)\n            }\n        )\n    }\n    return chart_data\n}\n\nconst analysis_labels = {\n    expected: \"E(r) = \\\\mu\",\n    variance: \"V(r) = \\\\sigma^2\",\n    std_dev: \"D(r) = \\\\sigma\",\n    assymetry: \"As = \\\\alpha_3\",\n    kurtosis: \"Ku = \\\\alpha_4\"\n}\n\nconst getAnalysis = (sampleSize: number, successProbability: number): IResult[]  => {\n    const results: IResult[] = [\n        {\n            texLabel: analysis_labels.expected,\n            value: expectedValue(sampleSize, successProbability),\n        },\n        {\n            texLabel: analysis_labels.variance,\n            value: variance(sampleSize, successProbability),\n        },\n        {\n            texLabel: analysis_labels.std_dev,\n            value: stdDeviation(sampleSize, successProbability),\n        },\n        {\n            texLabel: analysis_labels.assymetry,\n            value: assymetry(sampleSize, successProbability),\n        },\n        {\n            texLabel: analysis_labels.kurtosis,\n            value: kurtosis(sampleSize, successProbability),\n        },\n    ]\n\n    return results\n}\n\nconst getProbabilities = (r: number, n: number, p: number): IProbabilities => {\n    const results: IProbabilities = {\n        punctual: binomialModel(r, n, p),\n        accum_left: accumulatedLeft(r, n, p),\n        accum_right: accumulatedRight(r, n, p),\n    }\n    return results\n}\n\nconst defaultTable: ITable = {\n    headers: ['r', 'P(r)', 'F(r)', 'G(r)', 'H(r)', 'J(r)'],\n    content: [\n        [0, 0, 0 ,0, 0, 0], [0, 0, 0 ,0, 0, 0],\n        [0, 0, 0 ,0, 0, 0], [0, 0, 0 ,0, 0, 0],\n        [0, 0, 0 ,0, 0, 0], [0, 0, 0 ,0, 0, 0],\n        [0, 0, 0 ,0, 0, 0], [0, 0, 0 ,0, 0, 0],\n        [0, 0, 0 ,0, 0, 0], [0, 0, 0 ,0, 0, 0],\n    ]\n}\n\nexport {\n    binomialModel,\n    accumulatedLeft,\n    accumulatedRight,\n    expectedValue,\n    variance,\n    stdDeviation,\n    assymetry,\n    kurtosis,\n    partialLeftExpected,\n    partialRightExpected,\n    createTable,\n    createLandingChart,\n    getAnalysis,\n    getProbabilities,\n    defaultTable,\n}\n","import { IResult } from \"../types/tables\"\n\nconst analysis_labels = {\n    expected: \"E(r) = \\\\mu\",\n    variance: \"V(r) = \\\\sigma^2\",\n    std_dev: \"D(r) = \\\\sigma\",\n    assymetry: \"As = \\\\alpha_3\",\n    kurtosis: \"Ku = \\\\alpha_4\"\n}\n\nconst defaultResults: IResult[] = [\n    { texLabel: analysis_labels.expected, value: 0 }\n]\n\nexport {\n    analysis_labels,\n    defaultResults\n}\n","import React from 'react'\nimport { Position, Toaster, Intent } from '@blueprintjs/core'\n\nconst AppToaster = Toaster.create({\n    className: \"recipe-toaster\",\n    position: Position.TOP,\n    maxToasts: 2,\n})\n\nconst showToast = (message: string | React.ReactNode, intent?: Intent) => {\n    AppToaster.show({ message, intent })\n}\n\nexport {\n    showToast,\n}\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype Props = {\n    a: string,\n    b: string,\n}\n\nconst NoGreater = ({ a,  b }: Props) => {\n\n    const { t } = useTranslation()\n\n    return (\n        <span>\n            <code>{a}</code> {t('no-greater')} <code>{b}</code>\n        </span>\n\n    )\n}\nexport default NoGreater\n","import { Icon } from '@blueprintjs/core'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nconst NoNegative = () => {\n\n    const { t } = useTranslation()\n\n    return (\n        <span>\n            <Icon icon=\"warning-sign\" /> {t('no-negative')}\n        </span>\n\n    )\n}\nexport default NoNegative\n","export default __webpack_public_path__ + \"static/media/bug.3a3f13b3.svg\";","import React, { useEffect, useState } from 'react'\nimport ProbabilityChart from '../../components/ProbabilityChart'\nimport { IOperationType } from '../../types/pages'\nimport { handleHighlight } from '../../utils/arrays'\n\nimport PunctualOrAccumulated from '../../components/PunctualOrAccumulated'\nimport ResultGroup from '../../components/ResultGroup'\nimport ProbabilityTable from '../../components/ProbabilityTable'\nimport { useDebounce } from 'react-use'\n\nimport { IBarChartItem, ITable, IProbabilities, IResult } from '../../types/tables'\nimport { Spinner } from '@blueprintjs/core'\nimport PageTemplate from '../PageTemplate'\nimport { PrecisionContext } from '../../contexts/inputs'\n\nimport BinomialInput from '../../components/InputGroups/BinomialInput'\nimport {\n    createTable,\n    defaultTable,\n    getAnalysis,\n    getProbabilities\n} from '../../functions/binomials'\nimport { defaultResults } from '../../functions/shared'\nimport { showToast } from '../../utils/toaster'\nimport NoGreater from '../../components/NoGreater'\nimport NoNegative from '../../components/NoNegative'\n\n// TODO: Fix the bug170  ------------------------\nimport { useTranslation } from 'react-i18next'\nimport SvgIcon from '../../components/SvgIcon'\nimport bug from '../../svg/bug.svg'\n\nconst TemporaryWarning170 = () => {\n    const { t } = useTranslation()\n\n    return (\n        <span>\n            {t('bug170-pre')} <code>n &gt; 170</code> {t('bug170-post') + ' '}\n            <a\n                href=\"https://github.com/diegoasanch/probably/issues/6\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n            >\n                bug.\n                <SvgIcon src={bug} name=\"bug\" height=\"2em\" />\n            </a>\n\n        </span>\n    )\n}\n//! end TODO: Fix the bug170 ---------------------\n\nconst validateInput = (n: number, p: number, r: number): void => {\n    if (n > 170)\n        showToast(<TemporaryWarning170 />, 'danger')\n    if (r > n)\n        showToast(<NoGreater a='r' b='n' />, 'danger')\n    if (p > 1)\n        showToast(<NoGreater a='p' b='1' />, 'danger')\n    if ([n, r, p].some(item => item < 0))\n        showToast(<NoNegative />, 'danger')\n}\n\nfunction Binomial() {\n\n    const [sampleSize, setSampleSize] = useState(NaN) // n\n    const [successProbability, setSuccessProbability] = useState(NaN) // p\n    const [successFound, setSuccessFound] = useState<number>(NaN) // r\n    const [validInput, setValidInput] = useState(false)\n\n    const [roundPrecision, setRoundPrecision] = useState(5)\n    const [results, setResults] = useState<IResult[]>(defaultResults)\n    const [validResults, setValidResults] = useState(false)\n    const [validAnalysis, setValidAnalysis] = useState(false) // TODO: Fix this\n    const [probabilities, setProbabilities] = useState<IProbabilities | undefined>()\n\n    const [tableData, setTableData] = useState<ITable | undefined>()\n    const [chartData, setChartData] = useState<IBarChartItem[] | undefined>(([ {label: '', value: 0} ]) as IBarChartItem[])\n\n    // const [dataFrom, setDataFrom] = useState<number>(0)\n    const [dataTo, setDataTo] = useState(0)\n    const [highlight, setHighlight] = useState<string | string[]>('')\n    const [opType, setOpType] = useState<IOperationType>('p')\n\n    const handleSuccessProb = (valueNum: number, valueStr: string ) => {\n        setSuccessProbability(parseFloat(valueStr))\n    }\n    const handleType = (r: number, n: number, p: number) => {\n        setProbabilities(getProbabilities(r, n, p))\n    }\n\n    // for the punctual probs  loader\n    useEffect(() => {\n        setProbabilities(undefined)\n        validateInput(sampleSize, successProbability, successFound)\n    }, [sampleSize, successProbability, successFound])\n\n    // For the calculations\n    useDebounce(() => {\n        handleType( successFound, sampleSize, successProbability)\n    }, 300, [sampleSize, successProbability, successFound])\n\n    useEffect(() => {\n        const toHighlight = handleHighlight(opType, successFound, dataTo)\n        setHighlight(toHighlight)\n    }, [successFound, dataTo, opType])\n\n    // for rendering the loaders\n    useEffect(() => {\n        setTableData(undefined)\n        setChartData(undefined)\n        setResults(defaultResults)\n        setValidResults(false)\n        setProbabilities(undefined)\n\n        // TODO: Also remove the <= 170 limit from bug170\n        const valid = !!(sampleSize && successProbability)\n        setValidInput(valid &&  (sampleSize <= 170))\n        setValidAnalysis(valid) // TODO: fix\n    }, [sampleSize, successProbability])\n\n    // Debouncing the calculations\n    useDebounce(() => {\n\n        if (validAnalysis) {\n            console.time('Analysis generation ⌚')\n            const analysis = getAnalysis(sampleSize, successProbability)\n            console.timeEnd('Analysis generation ⌚')\n            setResults(analysis)\n            setValidResults(true)\n        }\n\n        if (validInput) {\n            console.time('Table generation ⌚')\n            const newTable = createTable(sampleSize, successProbability)\n            console.timeEnd('Table generation ⌚')\n\n            // console.time('Analysis generation ⌚')\n            // const analysis = getAnalysis(sampleSize, successProbability)\n            // console.timeEnd('Analysis generation ⌚')\n\n            console.time('Chart data ⌚')\n            const probs_from_table = newTable.content.map(item => ({\n                label: String(item[0]),\n                value: item[1],\n            }))\n            console.timeEnd('Chart data ⌚')\n\n            setTableData(newTable)\n            setChartData(probs_from_table)\n            setDataTo(sampleSize)\n            // setResults(analysis)\n        }\n    }, 300, [sampleSize, successProbability, validInput, validAnalysis])\n\n    return (\n        <PrecisionContext.Provider value={roundPrecision}>\n            <PageTemplate\n                noInputs={{ a: 'n', b: 'p'}}\n                validInput={validInput}\n                validAnalysis={validAnalysis}\n                input={\n                    <BinomialInput\n                        handleSampleSize={setSampleSize}\n                        handleSuccessProb={handleSuccessProb}\n                        handleSuccessFound={setSuccessFound}\n                        setRoundPrecision={setRoundPrecision}\n                        extraPanel={\n                            <PunctualOrAccumulated\n                                handleTab={setOpType}\n                                variable={successFound}\n                                validInput={validInput}\n                                probabilities={probabilities}\n                                varLabel=\"r\"\n                            />\n                        }\n                    />\n                }\n                analysis={\n                    <ResultGroup\n                        // validResults={validAnalysis}\n                        validResults={validResults}\n                        results={results}\n                    /> }\n                table={\n                    <ProbabilityTable\n                        table={tableData || defaultTable}\n                        isLoading={!tableData}\n                        highlight={highlight}\n                    />\n                }\n                chart={\n                    (chartData ?\n                        <ProbabilityChart\n                            variable=\"r\"\n                            data={chartData}\n                            highlight={highlight}\n                        />\n                    :\n                        <Spinner size={100} />\n                    )\n                }\n            />\n        </PrecisionContext.Provider>\n    )\n}\n\nexport default Binomial\n","import { Label, NumericInput } from '@blueprintjs/core'\nimport React, { useContext } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { PrecisionContext } from '../../../contexts/inputs'\nimport { Column, Row } from '../../../pages/layout'\nimport ProbabilityInput from '../../ProbabilityInput'\n\ntype BlueprintStateSetter = (valueNum: number, valueStr: string) => void\ntype StateSetter = (value: React.SetStateAction<number>) => void\n\ntype IProps = {\n    handleSampleSize: BlueprintStateSetter,\n    handleSuccessProb: BlueprintStateSetter,\n    handleSuccessFound: BlueprintStateSetter,\n    setRoundPrecision: StateSetter,\n    extraPanel?: JSX.Element,\n    sampleSize: number,\n}\n\nconst PascalInput = ({\n    handleSampleSize,\n    handleSuccessProb,\n    handleSuccessFound,\n    setRoundPrecision,\n    extraPanel,\n    sampleSize,\n\n}: IProps) => {\n\n    const { t } = useTranslation()\n    const roundPrecision = useContext(PrecisionContext)\n\n    return (\n        <Row noPad>\n            <Column margin=\".8em 1em\" noGrow >\n                <Label>\n                    <code>r</code> = {t('success-found')}\n                    <NumericInput\n                        min={0}\n                        onValueChange={handleSuccessFound}\n                        placeholder=\"r\"\n                    />\n                </Label>\n                <ProbabilityInput\n                    min={0}\n                    max={1}\n                    stepSize={0.1}\n                    onValueChange={handleSuccessProb}\n                    placeholder=\"p\"\n                />\n                <Label>\n                    <code>n</code> = {t('sample-size')}\n                    <NumericInput\n                        min={1}\n                        onValueChange={handleSampleSize}\n                        minorStepSize={1}\n                        placeholder=\"n\"\n                    />\n                </Label>\n            </Column>\n            <Column margin=\".8em 1em\" noGrow >\n                <Label>\n                    {t('round-precision')} <code> (0.xf)</code>\n                    <NumericInput\n                        min={0}\n                        onValueChange={setRoundPrecision}\n                        value={roundPrecision ?? 'x'}\n                        placeholder=\"x\"\n                    />\n                </Label>\n                { extraPanel }\n            </Column>\n        </Row>\n    )\n}\n\nexport default PascalInput\n","import { ITable, IProbabilities, IResult } from \"../types/tables\"\nimport { combinatory } from \"./general\"\nimport { analysis_labels } from \"./shared\"\nimport { accumulatedLeft as BinomialAccumulatedLeft } from './binomials'\n\nconst probability = (n: number, r: number, p: number): number => {\n    const nCr_1 = combinatory((n - 1), (r - 1))\n    const result = nCr_1 * p**r * (1 - p)**(n-r)\n    return result\n}\n\nconst accumulatedLeft = (n: number, r: number, p: number): number => {\n    let total = 0\n\n    for (let x = r; x <= n; x++)\n        total += probability(x, r, p)\n\n    return total\n}\n\nconst accumulatedRight = (n: number, r: number, p: number, limit= 40): number => {\n    return BinomialAccumulatedLeft(r-1, n-1, p)\n}\n\nconst expectedValue = (r: number, p: number): number => {\n    return r / p\n}\n\nconst variance = (r: number, p: number): number => {\n    return (r * (1 - p)) / p**2\n}\n\nconst stdDeviation = (r: number, p: number): number => {\n    return Math.sqrt(variance(r, p))\n}\n\nconst assymetry = (r: number, p: number): number => {\n    return (2 - p) / Math.sqrt(r * (1 - p))\n}\n\nconst kurtosis = (r: number, p: number): number => {\n    return 3 + ((p**2 - 6 * p + 6) / (r * (1 - p)))\n}\n\nconst partialLeftExpected = (n: number, r: number, p: number): number => {\n    return (r / p) * accumulatedLeft(n + 1, r + 1, p)\n}\n\nconst createTable = (\n    r: number,\n    p: number,\n    from= 0,\n    to= 60,\n): ITable => {\n\n    const headers = ['n', 'P(n)', 'F(n)', 'G(n)', 'H(n)']\n    // const headers = ['r', 'P(r)', 'F(r)', 'G(r)', 'H(r)', 'J(r)']\n    const content: number[][] = []\n\n    from = from ?? 0\n\n    for (let n = from; n <= to; n++ ) {\n        content.push([\n            n,\n            probability(n, r, p),\n            accumulatedLeft(n, r, p),\n            accumulatedRight(n, r, p),\n            partialLeftExpected(n, r, p),\n            // partialRightExpected(n, r, p),\n        ])\n    }\n    return {headers, content}\n}\n\n\nconst getAnalysis = (successFound: number, successProbability: number): IResult[]  => {\n    const results: IResult[] = [\n        {\n            texLabel: analysis_labels.expected,\n            value: expectedValue(successFound, successProbability),\n        },\n        {\n            texLabel: analysis_labels.variance,\n            value: variance(successFound, successProbability),\n        },\n        {\n            texLabel: analysis_labels.std_dev,\n            value: stdDeviation(successFound, successProbability),\n        },\n        {\n            texLabel: analysis_labels.assymetry,\n            value: assymetry(successFound, successProbability),\n        },\n        {\n            texLabel: analysis_labels.kurtosis,\n            value: kurtosis(successFound, successProbability),\n        },\n    ]\n\n    return results\n}\n\nconst getProbabilities = (n: number, r: number, p: number): IProbabilities => {\n    const results: IProbabilities = {\n        punctual: probability(n, r, p),\n        accum_left: accumulatedLeft(n, r, p),\n        accum_right: accumulatedRight(n, r, p),\n    }\n    return results\n}\n\nconst defaultTable: ITable = {\n    headers: ['r', 'P(r)', 'F(r)', 'G(r)', 'H(r)'],\n    content: [\n        [0, 0, 0 ,0, 0], [0, 0, 0 ,0, 0],\n        [0, 0, 0 ,0, 0], [0, 0, 0 ,0, 0],\n        [0, 0, 0 ,0, 0], [0, 0, 0 ,0, 0],\n        [0, 0, 0 ,0, 0], [0, 0, 0 ,0, 0],\n        [0, 0, 0 ,0, 0], [0, 0, 0 ,0, 0],\n    ]\n}\n\nexport {\n    probability,\n    accumulatedLeft,\n    accumulatedRight,\n    expectedValue,\n    stdDeviation,\n    assymetry,\n    kurtosis,\n    partialLeftExpected,\n    createTable,\n    getAnalysis,\n    getProbabilities,\n    defaultTable,\n}\n","import React, { useEffect, useState } from 'react'\nimport ProbabilityChart from '../../components/ProbabilityChart'\nimport { IOperationType } from '../../types/pages'\nimport { handleHighlight } from '../../utils/arrays'\n\nimport PunctualOrAccumulated from '../../components/PunctualOrAccumulated'\nimport ResultGroup from '../../components/ResultGroup'\nimport ProbabilityTable from '../../components/ProbabilityTable'\nimport { useDebounce } from 'react-use'\n\nimport { IBarChartItem, ITable, IProbabilities, IResult } from '../../types/tables'\nimport { Spinner } from '@blueprintjs/core'\nimport PageTemplate from '../PageTemplate'\nimport { PrecisionContext } from '../../contexts/inputs'\n\nimport PascalInput from '../../components/InputGroups/PascalInput'\nimport {\n    createTable,\n    defaultTable,\n    getAnalysis,\n    getProbabilities\n} from '../../functions/pascal'\nimport { defaultResults } from '../../functions/shared'\nimport { showToast } from '../../utils/toaster'\nimport NoGreater from '../../components/NoGreater'\nimport NoNegative from '../../components/NoNegative'\n\nconst validateInput = (n: number, p: number, r: number): void => {\n    if (p > 1)\n        showToast(<NoGreater a='p' b='1' />, 'danger')\n    if ([n, r, p].some(item => item < 0))\n        showToast(<NoNegative />, 'danger')\n}\n\nfunction Pascal() {\n\n    const [sampleSize, setSampleSize] = useState(NaN) // n\n    const [successProbability, setSuccessProbability] = useState(NaN) // p\n    const [successFound, setSuccessFound] = useState<number>(NaN) // r\n    const [validInput, setValidInput] = useState(false)\n\n    const [roundPrecision, setRoundPrecision] = useState(5)\n    const [results, setResults] = useState<IResult[]>(defaultResults)\n    const [validResults, setValidResults] = useState(false)\n    const [probabilities, setProbabilities] = useState<IProbabilities | undefined>()\n\n    const [tableData, setTableData] = useState<ITable | undefined>()\n    const [chartData, setChartData] = useState<IBarChartItem[] | undefined>(([ {label: '', value: 0} ]) as IBarChartItem[])\n\n    const [dataFrom, setDataFrom] = useState<number>(0)\n    // TODO: fix this disable\n    // eslint-disable-next-line\n    const [dataTo, setDataTo] = useState(60)\n    const [highlight, setHighlight] = useState<string | string[]>('')\n    const [opType, setOpType] = useState<IOperationType>('p')\n\n    const handleSampleSize = (valueNum: number, valueStr: string ) => {\n        setSampleSize(valueNum)\n        setProbabilities(undefined)\n    }\n    const handleSuccessProb = (valueNum: number, valueStr: string ) => {\n        setSuccessProbability(parseFloat(valueStr) ?? 0)\n    }\n    const handleSuccessFound = (valueNum: number, valueStr: string ) => {\n        const value = parseFloat(valueStr) ?? 0\n        setSuccessFound(value)\n        setDataFrom(value)\n        setDataTo(value + 80)\n    }\n    const handleType = (r: number, n: number, p: number) => {\n        setProbabilities(getProbabilities(n, r, p))\n    }\n\n    useEffect(() => {\n        validateInput(sampleSize, successProbability, successFound)\n    }, [sampleSize, successProbability, successFound])\n\n    // For the  calculations\n    useDebounce(() => {\n        handleType( successFound, sampleSize, successProbability)\n    }, 300, [sampleSize, successProbability, successFound])\n\n    // For the higlights\n    useEffect(() => {\n        const toHighlight = handleHighlight(opType, sampleSize, dataTo, dataFrom)\n        setHighlight(toHighlight)\n    }, [sampleSize, opType, dataTo, dataFrom])\n\n    // for rendering the loaders\n    useEffect(() => {\n        setTableData(undefined)\n        setChartData(undefined)\n        setResults(defaultResults)\n        setValidResults(false)\n        setProbabilities(undefined)\n\n\n    }, [successFound, successProbability])\n\n    // Debouncing the table and chart calculations\n    useDebounce(() => {\n        if (validInput) {\n            console.time('Table generation ⌚')\n            const newTable = createTable(successFound, successProbability, dataFrom, dataTo)\n            console.timeEnd('Table generation ⌚')\n\n            console.time('Analysis generation ⌚')\n            const analysis = getAnalysis(successFound, successProbability) // TODO: check (1)\n            console.timeEnd('Analysis generation ⌚')\n\n            console.time('Chart data ⌚')\n            const probs_from_table = newTable.content.map(item => ({\n                label: String(item[0]),\n                value: item[1],\n            }))\n            console.timeEnd('Chart data ⌚')\n\n            setTableData(newTable)\n            setResults(analysis)   // TODO: check (1)\n            setChartData(probs_from_table)\n            setValidResults(true)\n        }\n    }, 300, [successFound, successProbability, validInput])\n\n    useEffect(() => {\n        const valid = !!(successFound && successProbability)\n        setValidInput(valid)\n    }, [successFound, successProbability])\n\n    return (\n        <PrecisionContext.Provider value={roundPrecision}>\n            <PageTemplate\n                noInputs={{ a: 'r', b: 'p' }}\n                validInput={validInput}\n                input={\n                    <PascalInput\n                        handleSampleSize={handleSampleSize}\n                        handleSuccessProb={handleSuccessProb}\n                        handleSuccessFound={handleSuccessFound}\n                        setRoundPrecision={setRoundPrecision}\n                        sampleSize={sampleSize}\n                        extraPanel={\n                            <PunctualOrAccumulated\n                                handleTab={setOpType}\n                                variable={sampleSize}\n                                validInput={validInput}\n                                probabilities={probabilities}\n                                varLabel=\"n\"\n                            />\n                        }\n                    />\n                }\n                analysis={\n                    <ResultGroup\n                        validResults={validResults}\n                        results={results}\n                    /> }\n                table={\n                    <ProbabilityTable\n                        table={tableData || defaultTable}\n                        isLoading={!tableData}\n                        highlight={highlight}\n                    />\n                }\n                chart={\n                    (chartData ?\n                        <ProbabilityChart\n                            variable=\"n\"\n                            data={chartData}\n                            highlight={highlight}\n                        />\n                    :\n                        <Spinner size={100} />\n                    )\n                }\n            />\n        </PrecisionContext.Provider>\n    )\n}\n\nexport default Pascal\n","import { EditableText, H3 } from \"@blueprintjs/core\"\nimport styled from \"styled-components\"\n\nconst LandingContainer = styled.div`\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    position: relative;\n`\n\nconst LandingBackground = styled.div`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    z-index: 0;\n`\nconst HeaderContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    z-index: 1;\n`\nconst ChartControls = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: baseline;\n\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    margin: 1em;\n`\nconst StyledEditableText = styled(EditableText)`\n    width: 1.6em;\n    .bp3-editable-text-content {\n        min-width: 1.8em !important;\n    }\n\n`\nconst SizeInput = styled(H3)`\n    margin-right: .5em;\n`\n\n\nexport {\n    LandingContainer,\n    LandingBackground,\n    HeaderContainer,\n    ChartControls,\n    StyledEditableText,\n    SizeInput,\n}\n","import React, { useContext, useState } from 'react'\nimport { useInterval } from 'react-use'\nimport { Bar, BarChart, CartesianGrid, Cell, ResponsiveContainer } from 'recharts'\nimport { ThemeContext } from 'styled-components'\nimport { createLandingChart } from '../../functions/binomials'\nimport { IBarChartItem } from '../../types/tables'\n\nconst createRandomChart = (prob: number, entries: number): IBarChartItem[] => {\n\n    // console.time('Creating table 📅')\n    const chart_data = createLandingChart(entries, prob)\n    // console.timeEnd('Creating table 📅')\n\n    return chart_data\n}\n\nconst INITIAL_PROB = 0.01\n\ntype IProps = {\n    playAnimation: boolean,\n    size: number,\n}\n\nconst LandingChart = ({ playAnimation, size }: IProps) => {\n\n    const themeContext = useContext(ThemeContext)\n    const [chartData, setChartData] = useState(createRandomChart(INITIAL_PROB, size))\n    const [prob, setProb] = useState(INITIAL_PROB)\n\n    useInterval(() => {\n        const new_prob = prob < 0.96 ? (prob + 0.04) : 0.04\n        setProb(new_prob)\n        setChartData(createRandomChart(new_prob, size))\n    }, playAnimation ? 800 : null)\n\n\n    return (\n        <ResponsiveContainer>\n            <BarChart data={chartData}>\n                <CartesianGrid strokeDasharray=\"2 5\" stroke={themeContext.chart_gridColor} />\n                <Bar dataKey=\"value\">\n                    { chartData.map(( entry, index) => (\n                        <Cell key={`cell-${index}`} fill={themeContext.landing_chart} />\n                    )) }\n                </Bar>\n            </BarChart>\n        </ResponsiveContainer>\n    )\n}\n\nexport default LandingChart\n","import React, { useState } from 'react'\nimport { HomeHeader, HomeSubTitle, StyledLink } from '../../styles/typography'\nimport TextLoop from \"react-text-loop\"\nimport { getLandingPageOptions } from '../available'\n// import { Link } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport { ChartControls, HeaderContainer, LandingBackground, LandingContainer, SizeInput, StyledEditableText } from './styles'\nimport LandingChart from '../../components/LandingChart'\nimport { Button } from '@blueprintjs/core'\n\nconst INITIAL_SIZE = 60\n\nconst cleanSize = (value: string): number => {\n    const newSize = parseInt(value)\n    let result: number\n\n    if (!isNaN(newSize)) {\n        if (newSize < 1)\n            result = 1\n        else if (newSize > 150)\n            result = 150\n        else\n            result = newSize\n    }\n    else if (value === '')\n        result = 0\n    else\n        result = INITIAL_SIZE\n\n    return result\n}\n\nconst Home = () => {\n\n    const { t } = useTranslation()\n    const [playAnimation, setPlayAnimation] = useState(true)\n    const [size, setSize] = useState(INITIAL_SIZE)\n\n    const toggleAnimation = () => {\n        setPlayAnimation( prev => !prev )\n    }\n\n    const handleSize = (value: string) => {\n        setSize(cleanSize(value))\n    }\n\n    return (\n        <LandingContainer>\n            <HeaderContainer>\n                <HomeHeader>\n                    {t('home-header-line-1')}<br/>\n                    {t('home-header-line-2')}\n                </HomeHeader>\n                <HomeSubTitle>\n                    {t('calculate-pre')}&nbsp;\n                    <code>\n                        <TextLoop>\n                            {\n                                getLandingPageOptions().map(option => (\n                                    <StyledLink to={option.url} key={option.id}>\n                                        {option.id}\n                                    </StyledLink>\n                                ))\n                            }\n                        </TextLoop>\n                    </code>\n                    {t('calculate-post')}\n                </HomeSubTitle>\n\n            </HeaderContainer>\n\n            <LandingBackground>\n                <LandingChart playAnimation={playAnimation} size={size - 1} />\n                <ChartControls>\n                    <SizeInput>\n                        <code>\n                            n =&nbsp;\n                            <StyledEditableText\n                                value={String(size)}\n                                onChange={handleSize}\n                                maxLength={3}\n                            />\n                        </code>\n                    </SizeInput>\n                    <Button\n                        intent=\"primary\"\n                        icon={playAnimation ? 'pause' : 'play'}\n                        onClick={toggleAnimation}\n                        large\n                    />\n                </ChartControls>\n            </LandingBackground>\n        </LandingContainer>\n    )\n}\n\nexport default Home\n","import { Label, NumericInput } from '@blueprintjs/core'\nimport React, { useContext } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { PrecisionContext } from '../../../contexts/inputs'\nimport { Column, Row } from '../../../pages/layout'\n\ntype StateSetter = (value: React.SetStateAction<number>) => void\n\ntype IProps = {\n    handleTotalSize: StateSetter,\n    handleTotalSuccess: StateSetter,\n    handleSampleSize: StateSetter,\n    handleSuccessFound: StateSetter,\n    setRoundPrecision: (value: number) => void,\n    extraPanel?: JSX.Element,\n}\n\nconst PascalInput = ({\n    handleSampleSize,\n    handleTotalSize,\n    handleTotalSuccess,\n    handleSuccessFound,\n    setRoundPrecision,\n    extraPanel,\n\n}: IProps) => {\n\n    const { t } = useTranslation()\n    const roundPrecision = useContext(PrecisionContext)\n\n    const handleNaNs = (numVal: number, strVal: string): void => {\n        if (!strVal)\n            numVal = NaN\n        handleSuccessFound(numVal)\n    }\n\n    return (\n        <Row noPad>\n            <Column margin=\".8em 1em\" noGrow >\n                <Label>\n                    <code>N</code> = {t('population-size')}\n                    <NumericInput\n                        min={0}\n                        stepSize={1}\n                        onValueChange={handleTotalSize}\n                        placeholder=\"N\"\n                    />\n                </Label>\n                <Label>\n                    <code>R</code> = {t('total-success')}\n                    <NumericInput\n                        min={0}\n                        stepSize={1}\n                        onValueChange={handleTotalSuccess}\n                        placeholder=\"N\"\n                    />\n                </Label>\n                <Label>\n                    <code>n</code> = {t('sample-size')}\n                    <NumericInput\n                        min={1}\n                        onValueChange={handleSampleSize}\n                        minorStepSize={1}\n                        placeholder=\"n\"\n                    />\n                </Label>\n                <Label>\n                    <code>r</code> = {t('success-found')}\n                    <NumericInput\n                        min={0}\n                        onValueChange={handleNaNs}\n                        placeholder=\"r\"\n                    />\n                </Label>\n\n            </Column>\n            <Column margin=\".8em 1em\" noGrow >\n                <Label>\n                    {t('round-precision')} <code> (0.xf)</code>\n                    <NumericInput\n                        min={0}\n                        onValueChange={setRoundPrecision}\n                        value={roundPrecision ?? 'x'}\n                        placeholder=\"x\"\n                    />\n                </Label>\n                { extraPanel }\n            </Column>\n        </Row>\n    )\n}\n\nexport default PascalInput\n","import { IProbabilities, IResult, ITable } from \"../types/tables\"\nimport { combinatory } from \"./general\"\nimport { analysis_labels } from \"./shared\"\n\nconst probability = (r: number, n: number, N: number, R: number): number => {\n    const MIN_LIMIT = Math.max(0, n - (N - R))\n    const MAX_LIMIT = Math.min(n, R)\n\n    if (r < MIN_LIMIT || r > MAX_LIMIT)\n        return 0\n\n    const numerator = combinatory(R, r) * combinatory(N - R, n - r)\n    const denominator = combinatory(N, n)\n\n    return numerator / denominator\n}\n\nconst accumulatedLeft = (r: number, n: number, N: number, R: number): number => {\n    let total = 0\n\n    for (let x = 0; x <= r; x++)\n        total += probability(x, n, N, R)\n\n    return total\n}\n\nconst accumulatedRight = (r: number, n: number, N: number, R: number): number => {\n    let total = 0\n\n    for (let x = r; x <= n; x++)\n        total += probability(x, n, N, R)\n\n    return total\n}\n\nconst expectedValue = (n: number, N: number, R: number): number => {\n    return n * (R / N)\n}\n\nconst variance = (n: number, N: number, R: number): number => {\n    return n * (R / N) * (1 - (R / N)) * ((N-n) / (N-1))\n}\n\nconst stdDeviation = (n: number, N: number, R: number): number => {\n    return Math.sqrt(variance(n, N, R))\n}\n\nconst assymetry = (n: number, N: number, R: number): number => {\n    const numerator = (N-2 * R) * (N-2 * n) * Math.sqrt(N-1)\n    const denominator = (N-2) * Math.sqrt(n * R * (N-R) * (N-n))\n\n    return numerator / denominator\n}\n\nconst kurtosis = (n: number, N: number, R: number): number => {\n    // What a hell of a function man\n    const part_1 = (N**2 * (N-1)) / (n * R * (N-2) * (N-3) * (N-R) * (N-n) )\n    const part_2a = N * (N+1)\n    const part_2b = 6 * n * (N-n)\n    const part_2c = 3 * (R / N**2) * (N-R) * (N**2 * (n-2) - N * n**2 + 6*n * (N-n))\n\n    return part_1 * (part_2a - part_2b + part_2c)\n}\n\nconst partialLeftExpected = (r: number, n: number, N: number, R: number): number => {\n    return n * (R / N) * accumulatedLeft(r-1, n-1, N-1, R-1)\n}\n\nconst createTable = (\n    n: number,\n    N: number,\n    R: number,\n): ITable => {\n\n    const headers = ['r', 'P(r)', 'F(r)', 'G(r)', 'H(r)']\n    // const headers = ['r', 'P(r)', 'F(r)', 'G(r)', 'H(r)', 'J(r)']\n\n    const content: number[][] = []\n\n\n    for (let r = 0; r <= n; r++ ) {\n        content.push([\n            r,\n            probability(r, n, N, R),\n            accumulatedLeft(r, n, N, R),\n            accumulatedRight(r, n, N, R),\n            partialLeftExpected(r, n, N, R),\n            // partialRightExpected(r, n, N, R),\n        ])\n    }\n    return {headers, content}\n}\n\nconst getAnalysis = (n: number, N: number, R: number): IResult[]  => {\n    const results: IResult[] = [\n        {\n            texLabel: analysis_labels.expected,\n            value: expectedValue(n, N, R),\n        },\n        {\n            texLabel: analysis_labels.variance,\n            value: variance(n, N, R),\n        },\n        {\n            texLabel: analysis_labels.std_dev,\n            value: stdDeviation(n, N, R),\n        },\n        {\n            texLabel: analysis_labels.assymetry,\n            value: assymetry(n, N, R),\n        },\n        {\n            texLabel: analysis_labels.kurtosis,\n            value: kurtosis(n, N, R),\n        },\n    ]\n    return results\n}\n\nconst getProbabilities = (r: number, n: number, N: number, R: number): IProbabilities => {\n    const results: IProbabilities = {\n        punctual: probability(r, n, N, R),\n        accum_left: accumulatedLeft(r, n, N, R),\n        accum_right: accumulatedRight(r, n, N, R),\n    }\n    return results\n}\n\n\nconst defaultTable: ITable = {\n    headers: ['r', 'P(r)', 'F(r)', 'G(r)', 'H(r)'],\n    content: [\n        [0, 0, 0 ,0, 0], [0, 0, 0 ,0, 0],\n        [0, 0, 0 ,0, 0], [0, 0, 0 ,0, 0],\n        [0, 0, 0 ,0, 0], [0, 0, 0 ,0, 0],\n        [0, 0, 0 ,0, 0], [0, 0, 0 ,0, 0],\n        [0, 0, 0 ,0, 0], [0, 0, 0 ,0, 0],\n    ]\n}\n\n\nexport {\n    probability,\n    accumulatedLeft,\n    accumulatedRight,\n    createTable,\n    getAnalysis,\n    getProbabilities,\n    defaultTable,\n}\n","import React, { useEffect, useState } from 'react'\nimport ProbabilityChart from '../../components/ProbabilityChart'\nimport { IOperationType } from '../../types/pages'\nimport { handleHighlight } from '../../utils/arrays'\n\nimport PunctualOrAccumulated from '../../components/PunctualOrAccumulated'\nimport ResultGroup from '../../components/ResultGroup'\nimport ProbabilityTable from '../../components/ProbabilityTable'\nimport { useDebounce } from 'react-use'\n\nimport { IBarChartItem, ITable, IProbabilities, IResult } from '../../types/tables'\nimport { Spinner } from '@blueprintjs/core'\nimport PageTemplate from '../PageTemplate'\nimport { PrecisionContext } from '../../contexts/inputs'\n\nimport HypergeometricInput from '../../components/InputGroups/HypergeometricInput'\nimport {\n    createTable,\n    defaultTable,\n    getAnalysis,\n    getProbabilities\n} from '../../functions/hypergeometric'\nimport { defaultResults } from '../../functions/shared'\nimport { showToast } from '../../utils/toaster'\nimport NoGreater from '../../components/NoGreater'\nimport NoNegative from '../../components/NoNegative'\n\nconst validateInput = (N: number, R: number, n: number, r: number): void => {\n    if (R > N)\n        showToast(<NoGreater a='R' b='N' />, 'danger')\n    if (n > N)\n        showToast(<NoGreater a='n' b='N' />, 'danger')\n    if (r > n)\n        showToast(<NoGreater a='r' b='n' />, 'danger')\n    if (r > R)\n        showToast(<NoGreater a='r' b='R' />, 'danger')\n    if ([N, R, n, r].some(item => item < 0))\n        showToast(<NoNegative />, 'danger')\n}\n\nfunction Hypergeometric() {\n\n    const [totalSize, setTotalSize] = useState(NaN) // .............. N\n    const [totalSuccess, setTotalSuccess] = useState(NaN) // ........ R\n    const [sampleSize, setSampleSize] = useState(NaN) // ............ n\n    const [successFound, setSuccessFound] = useState<number>(NaN) //. r\n\n    const [validInput, setValidInput] = useState(false)\n\n    const [roundPrecision, setRoundPrecision] = useState(5)\n    const [results, setResults] = useState<IResult[]>(defaultResults)\n    const [validResults, setValidResults] = useState(false)\n    const [probabilities, setProbabilities] = useState<IProbabilities | undefined>()\n\n    const [tableData, setTableData] = useState<ITable | undefined>()\n    const [chartData, setChartData] = useState<IBarChartItem[] | undefined>(([ {label: '', value: 0} ]) as IBarChartItem[])\n\n    const [highlight, setHighlight] = useState<string | string[]>('')\n    const [opType, setOpType] = useState<IOperationType>('p')\n\n    const handleType = (r: number, n: number, N: number, R: number) => {\n        setProbabilities(getProbabilities(r, n, N, R))\n    }\n\n    // For the panel animation\n    useEffect(() => {\n        setProbabilities(undefined)\n        validateInput(totalSize, totalSuccess, sampleSize, successFound)\n    }, [totalSize, totalSuccess, sampleSize, successFound])\n\n    // For the  calculations\n    useDebounce(() => {\n        handleType(successFound, sampleSize, totalSize, totalSuccess)\n    }, 300, [totalSize, totalSuccess, sampleSize, successFound])\n\n    // For the higlights\n    useEffect(() => {\n        const toHighlight = handleHighlight(opType, successFound, sampleSize)\n        setHighlight(toHighlight)\n    }, [successFound, sampleSize, opType])\n\n    // for rendering the loaders\n    useEffect(() => {\n        setTableData(undefined)\n        setChartData(undefined)\n        setResults(defaultResults)\n        setValidResults(false)\n        setProbabilities(undefined)\n\n    }, [totalSize, totalSuccess, sampleSize])\n\n    // Debouncing the table and chart calculations\n    useDebounce(() => {\n\n        if (validInput) {\n            console.time('Table generation ⌚')\n            const newTable = createTable(sampleSize, totalSize, totalSuccess)\n            console.timeEnd('Table generation ⌚')\n\n            console.time('Analysis generation ⌚')\n            const analysis = getAnalysis(sampleSize, totalSize, totalSuccess) // TODO: add J(r) (1)\n            console.timeEnd('Analysis generation ⌚')\n\n            console.time('Chart data ⌚')\n            const probs_from_table = newTable.content.map(item => ({\n                label: String(item[0]),\n                value: item[1],\n            }))\n            console.timeEnd('Chart data ⌚')\n\n            setTableData(newTable)\n            setResults(analysis)   // TODO: add J(r) (1)\n            setChartData(probs_from_table)\n            setValidResults(true)\n        }\n    }, 300, [totalSize, totalSuccess, sampleSize, validInput])\n\n    useEffect(() => {\n        const valid = !!(totalSize && totalSuccess && sampleSize)\n        setValidInput(valid)\n    }, [totalSize, totalSuccess, sampleSize])\n\n    return (\n        <PrecisionContext.Provider value={roundPrecision}>\n            <PageTemplate\n                noInputs={{ a: 'N', b: 'n', c: 'R' }}\n                validInput={validInput}\n                input={\n                    <HypergeometricInput\n                        handleTotalSize={setTotalSize} // N\n                        handleTotalSuccess={setTotalSuccess} // R\n                        handleSampleSize={setSampleSize} // n\n                        handleSuccessFound={setSuccessFound} // r\n                        setRoundPrecision={setRoundPrecision}\n\n                        extraPanel={\n                            <PunctualOrAccumulated\n                                handleTab={setOpType}\n                                variable={successFound}\n                                validInput={validInput}\n                                probabilities={probabilities}\n                                varLabel=\"r\"\n                            />\n                        }\n                    />\n                }\n                analysis={\n                    <ResultGroup\n                        validResults={validResults}\n                        results={results}\n                    /> }\n                table={\n                    <ProbabilityTable\n                        table={tableData || defaultTable}\n                        isLoading={!tableData}\n                        highlight={highlight}\n                    />\n                }\n                chart={\n                    (chartData ?\n                        <ProbabilityChart\n                            variable=\"r\"\n                            data={chartData}\n                            highlight={highlight}\n                        />\n                    :\n                        <Spinner size={100} />\n                    )\n                }\n            />\n        </PrecisionContext.Provider>\n    )\n}\n\nexport default Hypergeometric\n","import React from 'react'\nimport { Spinner } from '@blueprintjs/core'\nimport styled from 'styled-components'\nimport { Header } from '../Sidebar/styles'\nimport { CenteredContainer } from '../../pages/layout'\n\nconst StyledHeader = styled(Header)`\n    margin-bottom: .5em;\n`\n\nconst LoadingScreen = () => {\n    return (\n        <CenteredContainer>\n            <StyledHeader>\n                Probab<code>/ly</code>\n            </StyledHeader>\n            <Spinner intent=\"primary\" />\n        </CenteredContainer>\n    )\n}\n\nexport default LoadingScreen\n","import React, { useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { InlineSvg } from '../styles'\n\nconst ThinkingIcon = () => {\n    const theme = useContext(ThemeContext)\n\n    return (\n        <InlineSvg id=\"emoji\" viewBox=\"0 0 72 72\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g id=\"color\">\n                <circle cx=\"36\" cy=\"36.2\" r=\"24\" fill={theme.emojiSkin}/>\n                <path fill={theme.emojiSkin} d=\"M19.1,62.3c-0.3-1.2-0.4-2.4-0.3-3.6c0.2-1.1,2.3-6.5,2.7-7.3s1.4-4.5,2.4-4.8c1-0.3,1.2,0.1,1.1,0.7 S24.4,55,24.4,55l9.4-2.8c0,0,7.7-1.9,7.9-1c2.1,2-5.4,4.5-7.5,4.4c0,0,1.1,0.6,0.9,1.3s-0.8,1.2-1,1.2s0.5,0.5,0.6,1.4 c0.9,1.8-2.8,2.3-2.8,2.3c1.3-0.2,3.3,2.1,0.1,2.7c-1,0.3-4.8,1.4-4.8,1.4s-3.3,1.2-5.2-0.1C20.8,65,19.7,63.8,19.1,62.3z\"/>\n            </g>\n            <g id=\"line\">\n                <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M28.9,44.5c2.4-0.7,11.9,0.5,14.1,2.1\"/>\n                <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M22.4,22.5c1.3-0.9,2.8-1.3,4.4-1.1c1.6,0,3.1,0.6,4.2,1.7\"/>\n                <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M51.1,26.5c-2.7-0.7-5.5-0.8-8.2-0.3\"/>\n                <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M42,58.4c12.3-3.3,19.5-15.9,16.2-28.2S42.3,10.7,30,14c-10,2.7-17,11.8-17,22.2c0,4.6,1.4,9.2,4,13\"/>\n                <path d=\"M31,30.7c0,1.7-1.3,3-3,3s-3-1.3-3-3s1.3-3,3-3S31,29,31,30.7\"/>\n                <path d=\"M48,33.7c0,1.7-1.3,3-3,3s-3-1.3-3-3s1.3-3,3-3S48,32,48,33.7\"/>\n                <path fill=\"none\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19.7,56.7c-1,1.6-1.2,3.7-0.5,5.5c1.1,3.3,4,5.2,7.2,4.2l4.9-1.4l1-0.3c0.8-0.2,1.3-1.1,1.1-1.8l0,0 c-0.2-0.5-0.6-0.9-1.2-1l1.2-0.3c0.8-0.2,1.3-1.1,1.1-1.8c-0.2-0.5-0.6-1-1.2-1.1l1.2-0.4c0.8-0.2,1.3-1.1,1.1-1.8 c-0.1-0.5-0.5-0.9-1-1l6.4-1.9c0.8-0.2,1.3-1.1,1.1-1.8s-1.1-1.3-1.8-1.1l0,0l-10.2,3l-5.1,1.5l0.6-7.8c0.1-0.9-1.5-1.2-2.1,0.2 L19.7,56.7z\"/>\n            </g>\n        </InlineSvg>\n    )\n}\n\nexport default ThinkingIcon\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HomeHeader, HomeSubTitle } from '../../styles/typography'\nimport { CenteredContainer } from '../layout'\nimport { H3 } from '@blueprintjs/core'\nimport { useTranslation } from 'react-i18next'\n\nimport ThinkingIcon from '../../components/SvgIcon/ThinkingIcon'\n\nconst StyledSubTitle = styled(HomeSubTitle)`\n    margin: 0;\n`\nconst MinText = styled(H3)`\n    color: ${props => props.theme.disabled_link} !important;\n`\n\nconst NotFound404 = () => {\n    const { t } = useTranslation()\n\n    return (\n        <CenteredContainer>\n            <HomeHeader>\n                <code>404</code>\n            </HomeHeader>\n\n            <StyledSubTitle>\n                {t('404-title')}\n            </StyledSubTitle>\n\n            <MinText>\n                {t('404-subtitle')} <ThinkingIcon />\n            </MinText>\n        </CenteredContainer>\n    )\n}\n\nexport default NotFound404\n","import { Label, NumericInput } from '@blueprintjs/core'\nimport React, { useContext } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { PrecisionContext } from '../../../contexts/inputs'\nimport { Column, Row } from '../../../pages/layout'\n\ntype StateSetter = (value: React.SetStateAction<number>) => void\n\ntype IProps = {\n    handleTotalSize: StateSetter,\n    handleTotalSuccess: StateSetter,\n    handleSampleSize: StateSetter,\n    handleSuccessFound: StateSetter,\n    setRoundPrecision: (value: number) => void,\n    extraPanel?: JSX.Element,\n}\n\nconst PascalInput = ({\n    handleSampleSize,\n    handleTotalSize,\n    handleTotalSuccess,\n    handleSuccessFound,\n    setRoundPrecision,\n    extraPanel,\n\n}: IProps) => {\n\n    const { t } = useTranslation()\n    const roundPrecision = useContext(PrecisionContext)\n\n    const handleNaNs = (numVal: number, strVal: string): void => {\n        if (!strVal)\n            numVal = NaN\n        handleSampleSize(numVal)\n    }\n\n    return (\n        <Row noPad>\n            <Column margin=\".8em 1em\" noGrow >\n                <Label>\n                    <code>N</code> = {t('population-size')}\n                    <NumericInput\n                        min={0}\n                        stepSize={1}\n                        onValueChange={handleTotalSize}\n                        placeholder=\"N\"\n                    />\n                </Label>\n                <Label>\n                    <code>R</code> = {t('total-success')}\n                    <NumericInput\n                        min={0}\n                        stepSize={1}\n                        onValueChange={handleTotalSuccess}\n                        placeholder=\"N\"\n                    />\n                </Label>\n                <Label>\n                    <code>r</code> = {t('success-found')}\n                    <NumericInput\n                        min={0}\n                        onValueChange={handleSuccessFound}\n                        placeholder=\"r\"\n                    />\n                </Label>\n                <Label>\n                    <code>n</code> = {t('sample-size')}\n                    <NumericInput\n                        min={1}\n                        onValueChange={handleNaNs}\n                        minorStepSize={1}\n                        placeholder=\"n\"\n                    />\n                </Label>\n\n            </Column>\n            <Column margin=\".8em 1em\" noGrow >\n                <Label>\n                    {t('round-precision')} <code> (0.xf)</code>\n                    <NumericInput\n                        min={0}\n                        onValueChange={setRoundPrecision}\n                        value={roundPrecision ?? 'x'}\n                        placeholder=\"x\"\n                    />\n                </Label>\n                { extraPanel }\n            </Column>\n        </Row>\n    )\n}\n\nexport default PascalInput\n","import { IProbabilities, IResult, ITable } from \"../types/tables\"\nimport { combinatory } from \"./general\"\nimport { analysis_labels } from \"./shared\"\n\nconst probability = (n: number, r: number, N: number, R: number): number => {\n    if ((n < r) || (n > (N - R + r))) // variable outside domain\n        return 0\n\n    const numerator = combinatory(N-n, R-r) * combinatory(n-1, r-1)\n    const denominator = combinatory(N, R)\n\n    return numerator / denominator\n}\n\nconst accumulatedLeft = (n: number, r: number, N: number, R: number): number => {\n    let total = 0\n\n    for (let x = r; x <= n; x++)\n        total += probability(x, r, N, R)\n\n    return total\n}\n\nconst accumulatedRight = (n: number, r: number, N: number, R: number): number => {\n    let total = 0\n\n    for (let x = n; x <= (N - R + r); x++)\n        total +=  probability(x, r, N, R)\n\n    return total\n}\n\nconst expectedValue = (r: number, N: number, R: number): number => {\n    return (r * (N+1)) / (R+1)\n}\n\nconst variance = (r: number, N: number, R: number): number => {\n    const mu = expectedValue(r, N, R)\n    const middle_expr = ((r+1) * (N+2) / (R+2)) - 1\n\n    return (mu * middle_expr) - mu**2\n}\n\nconst stdDeviation =  (r: number, N: number, R: number): number => {\n    return Math.sqrt(variance(r, N, R))\n}\n\nconst partialLeftExpected = (n: number, r: number, N: number, R: number): number => {\n    return (r * (N+1)) / (R+1) * accumulatedLeft(n+1, r+1, N+1, R+1)\n}\n\nconst createTable = (\n    r: number,\n    N: number,\n    R: number,\n): ITable => {\n\n    const headers = ['n', 'P(n)', 'F(n)', 'G(n)', 'H(n)']\n    // const headers = ['r', 'P(r)', 'F(r)', 'G(r)', 'H(r)', 'J(r)']\n\n    const content: number[][] = []\n\n    let prob: number\n    let accL: number\n    let accR: number\n    let expe: number\n\n    for (let n = 0; n <= N; n++ ) {\n        prob = probability(n, r, N, R)\n        accL = accumulatedLeft(n, r, N, R)\n        accR = accumulatedRight(n, r, N, R)\n        expe = partialLeftExpected(n, r, N, R)\n        content.push([\n            n,\n            prob,\n            accL,\n            accR,\n            expe,\n            // probability(n, r, N, R),\n            // accumulatedLeft(n, r, N, R),\n            // accumulatedRight(n, r, N, R),\n            // partialLeftExpected(n, r, N, R),\n            // partialRightExpected(n, r, N, R),\n        ])\n    }\n    return {headers, content}\n}\n\n\nconst getAnalysis = (r: number, N: number, R: number): IResult[]  => {\n    const results: IResult[] = [\n        {\n            texLabel: analysis_labels.expected,\n            value: expectedValue(r, N, R),\n        },\n        {\n            texLabel: analysis_labels.variance,\n            value: variance(r, N, R),\n        },\n        {\n            texLabel: analysis_labels.std_dev,\n            value: stdDeviation(r, N, R),\n        },\n    ]\n    return results\n}\n\nconst getProbabilities = (n: number, r: number, N: number, R: number): IProbabilities => {\n    const results: IProbabilities = {\n        punctual: probability(n, r, N, R),\n        accum_left: accumulatedLeft(n, r, N, R),\n        accum_right: accumulatedRight(n, r, N, R),\n    }\n    return results\n}\n\nconst defaultTable: ITable = {\n    headers: ['n', 'P(n)', 'F(n)', 'G(n)', 'H(n)'],\n    content: [\n        [0, 0, 0 ,0, 0], [0, 0, 0 ,0, 0],\n        [0, 0, 0 ,0, 0], [0, 0, 0 ,0, 0],\n        [0, 0, 0 ,0, 0], [0, 0, 0 ,0, 0],\n        [0, 0, 0 ,0, 0], [0, 0, 0 ,0, 0],\n        [0, 0, 0 ,0, 0], [0, 0, 0 ,0, 0],\n    ]\n}\n\nexport {\n    probability,\n    expectedValue,\n    variance,\n    stdDeviation,\n    createTable,\n    getAnalysis,\n    getProbabilities,\n    defaultTable,\n}\n","import React, { useEffect, useState } from 'react'\nimport ProbabilityChart from '../../components/ProbabilityChart'\nimport { IOperationType } from '../../types/pages'\nimport { handleHighlight } from '../../utils/arrays'\n\nimport PunctualOrAccumulated from '../../components/PunctualOrAccumulated'\nimport ResultGroup from '../../components/ResultGroup'\nimport ProbabilityTable from '../../components/ProbabilityTable'\nimport { useDebounce } from 'react-use'\n\nimport { IBarChartItem, ITable, IProbabilities, IResult } from '../../types/tables'\nimport { Spinner } from '@blueprintjs/core'\nimport PageTemplate from '../PageTemplate'\nimport { PrecisionContext } from '../../contexts/inputs'\n\nimport HyperPascalInput from '../../components/InputGroups/HyperPascalInput'\nimport {\n    createTable,\n    defaultTable,\n    getAnalysis,\n    getProbabilities\n} from '../../functions/hyperPascal'\nimport { defaultResults } from '../../functions/shared'\nimport { showToast } from '../../utils/toaster'\nimport NoGreater from '../../components/NoGreater'\nimport NoNegative from '../../components/NoNegative'\n\nconst validateInput = (N: number, R: number, n: number, r: number): void => {\n\n    const MAX_n = N - R + r\n\n    if (R > N)\n        showToast(<NoGreater a='R' b='N' />, 'danger')\n    if (r > N)\n        showToast(<NoGreater a='r' b='N' />, 'danger')\n    if (r > R)\n        showToast(<NoGreater a='r' b='R' />, 'danger')\n    if (r > n)\n        showToast(<NoGreater a='r' b='n' />, 'danger')\n    if (n > MAX_n)\n        showToast(<NoGreater a='n' b={`(N - R + r) = ${MAX_n}`} />, 'danger')\n    if ([N, R, n, r].some(item => item < 0))\n        showToast(<NoNegative />, 'danger')\n}\n\nfunction HyperPascal() {\n\n    const [totalSize, setTotalSize] = useState(NaN) // N\n    const [totalSuccess, setTotalSuccess] = useState(NaN) // R\n    const [sampleSize, setSampleSize] = useState(NaN) // n\n    const [successFound, setSuccessFound] = useState<number>(NaN) // r\n\n    const [validInput, setValidInput] = useState(false)\n\n    const [roundPrecision, setRoundPrecision] = useState(5)\n    const [results, setResults] = useState<IResult[]>(defaultResults)\n    const [validResults, setValidResults] = useState(false)\n    const [probabilities, setProbabilities] = useState<IProbabilities | undefined>()\n\n    const [tableData, setTableData] = useState<ITable | undefined>()\n    const [chartData, setChartData] = useState<IBarChartItem[] | undefined>(([ {label: '', value: 0} ]) as IBarChartItem[])\n\n    const [highlight, setHighlight] = useState<string | string[]>('')\n    const [opType, setOpType] = useState<IOperationType>('p')\n\n\n    const handleType = (n: number, r: number, N: number, R: number) => {\n        setProbabilities(getProbabilities(n, r, N, R))\n    }\n\n    // For the panel animation\n    useEffect(() => {\n        setProbabilities(undefined)\n        validateInput(totalSize, totalSuccess, sampleSize, successFound)\n    }, [totalSize, totalSuccess, sampleSize, successFound])\n\n    // For the  calculations\n    useDebounce(() => {\n        handleType(sampleSize, successFound, totalSize, totalSuccess)\n    }, 300, [totalSize, totalSuccess, sampleSize, successFound])\n\n    // For the higlights\n    useEffect(() => {\n        const toHighlight = handleHighlight(opType, sampleSize, totalSize)\n        setHighlight(toHighlight)\n    }, [opType, sampleSize, totalSize])\n\n    // for rendering the loaders\n    useEffect(() => {\n        setTableData(undefined)\n        setChartData(undefined)\n        setResults(defaultResults)\n        setValidResults(false)\n        setProbabilities(undefined)\n\n    }, [totalSize, totalSuccess, successFound])\n\n    // Debouncing the table and chart calculations\n    useDebounce(() => {\n\n        if (validInput) {\n            console.time('Table generation ⌚')\n            const newTable = createTable(successFound, totalSize, totalSuccess)\n            console.timeEnd('Table generation ⌚')\n\n            console.time('Analysis generation ⌚')\n            const analysis = getAnalysis(successFound, totalSize, totalSuccess) // TODO: add J(r) (1)\n            console.timeEnd('Analysis generation ⌚')\n\n            console.time('Chart data ⌚')\n            const probs_from_table = newTable.content.map(item => ({\n                label: String(item[0]),\n                value: item[1],\n            }))\n            console.timeEnd('Chart data ⌚')\n\n            setTableData(newTable)\n            setResults(analysis)   // TODO: add J(r) (1)\n            setChartData(probs_from_table)\n            setValidResults(true)\n        }\n    }, 300, [totalSize, totalSuccess, successFound, validInput])\n\n    useEffect(() => {\n        const valid = !!(totalSize && totalSuccess && successFound)\n        setValidInput(valid)\n    }, [totalSize, totalSuccess, successFound])\n\n    return (\n        <PrecisionContext.Provider value={roundPrecision}>\n            <PageTemplate\n                noInputs={{ a: 'N', b: 'r', c: 'R' }}\n                validInput={validInput}\n                input={\n                    <HyperPascalInput\n                        handleTotalSize={setTotalSize} // N\n                        handleTotalSuccess={setTotalSuccess} // R\n                        handleSampleSize={setSampleSize} // n\n                        handleSuccessFound={setSuccessFound} // r\n                        setRoundPrecision={setRoundPrecision}\n\n                        extraPanel={\n                            <PunctualOrAccumulated\n                                handleTab={setOpType}\n                                variable={sampleSize}\n                                validInput={validInput}\n                                probabilities={probabilities}\n                                varLabel=\"n\"\n                            />\n                        }\n                    />\n                }\n                analysis={\n                    <ResultGroup\n                        validResults={validResults}\n                        results={results}\n                    /> }\n                table={\n                    <ProbabilityTable\n                        table={tableData ?? defaultTable}\n                        isLoading={!tableData}\n                        highlight={highlight}\n                    />\n                }\n                chart={\n                    (chartData ?\n                        <ProbabilityChart\n                            variable=\"n\"\n                            data={chartData}\n                            highlight={highlight}\n                        />\n                    :\n                        <Spinner size={100} />\n                    )\n                }\n            />\n        </PrecisionContext.Provider>\n    )\n}\n\nexport default HyperPascal\n","import React, { Suspense, useEffect, useState } from 'react'\nimport { useLocalStorage } from 'react-use'\nimport { dark, light } from './styles/colors'\nimport { ThemeProvider } from 'styled-components'\n\nimport { FocusStyleManager } from \"@blueprintjs/core\"\nimport Sidebar from './components/Sidebar'\nimport PageHeader from './components/PageHeader'\nimport { pageOptions, defaultPage } from './pages/available'\n\nimport { HashRouter, Route, Switch, useLocation } from 'react-router-dom'\nimport Binomial from './pages/Binomial'\nimport Pascal from './pages/Pascal'\nimport Home from './pages/Home'\n\nimport Hypergeometric from './pages/Hypergeometric'\nimport LoadingScreen from './components/LoadingScreen'\nimport NotFound404 from './pages/NotFound404'\nimport {\n    ViewPort,\n    SideContainer,\n    AppPageContainer,\n    PageFrame\n} from './pages/layout'\nimport HyperPascal from './pages/HyperPascal'\n\nFocusStyleManager.onlyShowFocusOnTabs()\n\nfunction App() {\n\n    const location = useLocation()\n\n    const [isDark, setIsDark] = useLocalStorage('isDark', false)\n    const [currentPage, setCurrentPage] = useState(defaultPage)\n\n    const toggleTheme = () => {\n        setIsDark(!isDark)\n    }\n\n    // Select curent page form url\n    useEffect(() => {\n        const current_location = location.pathname.substring(1)\n\n        const page = pageOptions.find(\n            item => item.url === current_location && !item.disabled\n        ) ?? defaultPage\n\n        setCurrentPage(page)\n\n        // Google analytics\n        if (typeof((window as any).gtag) === 'function') {\n            (window as any).gtag('set', 'page', location.pathname + location.hash + location.search);\n            (window as any).gtag('send', 'pageview');\n        }\n\n    // eslint-disable-next-line\n    }, [location.pathname])\n\n    return (\n        <ThemeProvider theme={isDark ? dark : light}>\n            <ViewPort className={`.bp3-ui-text ${isDark ? 'bp3-dark' : ''}`}>\n                <Suspense fallback={<LoadingScreen />}>\n\n                    <SideContainer>\n                        <Sidebar current_page={currentPage} />\n                    </SideContainer>\n\n                    <AppPageContainer>\n                        <PageHeader\n                            title={currentPage.title}\n                            currentPage={currentPage}\n                            isDark={!!isDark}\n                            toggleTheme={toggleTheme}\n                        />\n                        <PageFrame>\n\n                            <HashRouter>\n                                <Switch>\n                                    <Route exact path=\"/binomial\">\n                                        <Binomial />\n                                    </Route>\n                                    <Route exact path=\"/pascal\">\n                                        <Pascal />\n                                    </Route>\n                                    <Route exact path=\"/hypergeometric\">\n                                        <Hypergeometric />\n                                    </Route>\n                                    <Route exact path=\"/hyperpascal\">\n                                        <HyperPascal />\n                                    </Route>\n                                    <Route exact path=\"/\">\n                                        <Home />\n                                    </Route>\n                                    <Route path=\"/\">\n                                        <NotFound404 />\n                                    </Route>\n                                </Switch>\n                            </HashRouter>\n\n                        </PageFrame>\n                    </AppPageContainer>\n\n                </Suspense>\n            </ViewPort>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/table/lib/css/table.css\";\nimport '@blueprintjs/select/lib/css/blueprint-select.css'\nimport \"@blueprintjs/popover2/lib/css/blueprint-popover2.css\";\nimport 'katex/dist/katex.min.css';\nimport './i18n'\nimport { HashRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}