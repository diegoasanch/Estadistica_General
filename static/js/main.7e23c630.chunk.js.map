{"version":3,"sources":["styles/colors.ts","components/Sidebar/styles.ts","components/Sidebar/Sidebar.tsx","components/PageHeader/styles.ts","components/PageHeader/PageHeader.tsx","pages/layout.ts","utils/determine_style.ts","components/BinomialTable/BinomialTable.tsx","components/Result/Result.tsx","functions/binomials.ts","components/BinomialChart/BinomialChart.tsx","utils/arrays.ts","pages/Binomial/Binomial.tsx","pages/available.ts","App.tsx","reportWebVitals.ts","i18n.ts","index.tsx"],"names":["dark","background","text","sidebarText","sidebarBg","result","scrollBarBg","scrollBarThumb","chart_barNormal","chart_barHighlight","chart_gridColor","light","SidebarContainer","styled","nav","props","theme","Header","H1","SideMain","main","SideFooter","footer","PageSelect","Select","ofType","StyledSelect","Sidebar","current_page","available_pages","setNewPage","translate","useTranslation","t","items","itemRenderer","item","handleClick","id","onClick","active","disabled","icon","onItemSelect","filterable","noResults","rightIcon","className","href","packageJSON","version","target","rel","StyledNavbar","Navbar","StyledSwitch","Switch","PageHeader","title","isDark","toggleTheme","align","Alignment","LEFT","RIGHT","alignIndicator","checked","onChange","innerLabel","innerLabelChecked","large","sideBarWidth","minSideBarWidth","ViewPort","div","SideContainer","AppPageContainer","PageFrame","Column","noGrow","height","width","noPad","margin","Row","Container","OverflowContainer","PageContainer","isCellHighlight","value","highlight","String","Array","includes","BinomialTable","table","precision","console","content","numRows","length","columnWidths","headers","map","header","i","name","cellRenderer","row","col","intent","toFixed","renderCell","StyledResult","Text","Result","math","factorial","n","res","binomialModel","r","p","a","b","accumulatedLeft","total","x","accumulatedRight","variance","stdDeviation","Math","sqrt","assymetry","kurtosis","partialLeftExpected","partialRightExpected","BinomialChart","data","roundPrecision","legend","themeContext","useContext","ThemeContext","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","formatter","y","payload","label","Bar","entry","index","color","BarColor","Cell","fill","range","from","to","step","_","stringRange","StyledCallout","Callout","Binomial","binomial","ToRenderPage","NoInput","iconSize","NoR","useState","sampleSize","setSampleSize","successProbability","setSuccessProbability","NaN","successFound","setSuccessFound","validInput","setValidInput","setRoundPrecision","undefined","tableData","setTableData","probabilities","setProbabilities","dataTo","setDataTo","setHighlight","punctualProbability","setPunctualProbability","accumLeft","setAccumLeft","accumRight","setAccumRight","opType","setOpType","useDebounce","useEffect","tab","hl","handleHighlight","newTable","push","createTable","probs_from_table","valid","log","min","onValueChange","valueNum","valueStr","parseFloat","minorStepSize","placeholder","max","stepSize","panel","isNaN","size","pageOptions","React","Fragment","defaultPage","FocusStyleManager","onlyShowFocusOnTabs","App","useLocalStorage","setIsDark","CurrentPage","setCurrentPage","fallback","selected","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e23c630.chunk.js","sourcesContent":["import Itheme from '../types/theme'\n\nexport const dark: Itheme = {\n    background: '#2F3437',\n    text: '#EBEBEB',\n    sidebarText: '#EBEBEB',\n    sidebarBg: '#1B222A',\n    result: '#19A6FF',\n    scrollBarBg: '#2F3437',\n    scrollBarThumb: '#151515',\n    chart_barNormal: '#828282',\n    chart_barHighlight: '#19A6FF',\n    chart_gridColor: '#999999',\n}\n\nexport const light: Itheme = {\n    background: '#FFFFFF',\n    text: '#37352F',\n    sidebarText: '#37352F',\n    sidebarBg: '#EBEBEB',\n    result: '#0C527E',\n    scrollBarBg: '#EBEBEB',\n    scrollBarThumb: '#888',\n    chart_barNormal: '#828282',\n    chart_barHighlight: '#19A6FF',\n    chart_gridColor: '#CCCCCC'\n}\n","import { H1 } from '@blueprintjs/core'\nimport styled from 'styled-components'\n\nexport const SidebarContainer = styled.nav`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    width: 100%;\n    color: ${props => props.theme.sidebarText};\n    background-color: ${ props => props.theme.sidebarBg };\n    border-right: 3px solid \"#CACBCC\";\n`\n\nexport const Header = styled(H1)`\n    font-size: 3em !important;\n    line-height: 1.2em !important;\n    font-weight: bold;\n    word-wrap: break-word;\n    width: 100%;\n    padding: .5em .4em;\n`\n\nexport const SideMain = styled.main`\n    position: relative;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const SideFooter = styled.footer`\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    padding: 0 1em;\n    align-items: flex-start;\n`\n","import React from 'react'\nimport { Button, Divider, H4, H5, H6, Icon, MenuItem } from '@blueprintjs/core'\nimport { useTranslation } from 'react-i18next'\nimport { Select } from '@blueprintjs/select'\n\nimport { IPageInfo } from '../../types/pages'\nimport styled from 'styled-components'\nimport packageJSON from '../../../package.json'\nimport {\n    SidebarContainer,\n    Header,\n    SideMain,\n    SideFooter,\n} from './styles'\n\ntype IProps = {\n    readonly current_page: IPageInfo,\n    readonly available_pages: IPageInfo[],\n    setNewPage: (newItem: IPageInfo) => void,\n}\n\ntype IClickHandler = {\n    handleClick: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void,\n}\n\nconst PageSelect = Select.ofType<IPageInfo>()\n\nconst StyledSelect = styled(PageSelect)`\n    width: 100%;\n    padding: 1em 3.5em;\n`\n\nconst Sidebar = ({\n    current_page,\n    available_pages,\n    setNewPage\n}: IProps ) => {\n\n    const { t: translate } = useTranslation();\n\n    // const initialContent = () => {\n    //     return current_page ? <MenuItem text={current_page} disabled /> : undefined\n    // }\n\n    const renderItem = (item: IPageInfo, {handleClick}: IClickHandler) => (\n\n        <MenuItem\n            key={item.id}\n            text={translate(`select-${item.id}`)}\n            onClick={handleClick}\n            active={current_page.id === item.id}\n            disabled={item.disabled}\n            icon={item.icon}\n        />\n\n    )\n\n    return (\n        <SidebarContainer>\n            <Header>\n                {translate('sidebar-header')}\n            </Header>\n\n            <Divider />\n\n            <SideMain>\n                <StyledSelect\n                    // initialContent={initialContent}\n                    items={available_pages}\n                    itemRenderer={renderItem}\n                    onItemSelect={setNewPage}\n                    filterable={false}\n                    noResults={<MenuItem text=\"No results.\" disabled={true} />}\n                >\n                    <Button\n                        icon=\"function\"\n                        text={translate(`select-${current_page.id}`)}\n                        rightIcon=\"caret-down\"\n                    />\n                </StyledSelect>\n                <SideFooter>\n                    <H4>\n                        <Icon className=\"bp3-text-muted\" icon=\"git-branch\" />&nbsp;\n                        Ver en&nbsp;\n                        <a href=\"https://github.com/diegoasanch/Estadistica_General\">\n                            GitHub\n                        </a>\n                    </H4>\n                    <H5 className=\"bp3-text-muted\">\n                        version: {packageJSON.version}\n                    </H5>\n                    <H6 className=\"bp3-text-muted\">\n                        <Icon icon=\"code\" />&nbsp;\n                        {translate('with')} 💖&nbsp;\n                        {translate('by')}&nbsp;\n                        <a href=\"https://github.com/diegoasanch\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            Diego.\n                        </a>\n                    </H6>\n                </SideFooter>\n            </SideMain>\n        </SidebarContainer>\n    )\n}\n\nexport default Sidebar\n","import { Navbar } from '@blueprintjs/core'\nimport styled from 'styled-components'\nimport { Switch } from '@blueprintjs/core'\n\nexport const StyledNavbar = styled(Navbar)`\n    width: 100%;\n    position: sticky;\n    top: 0;\n    &.bp3-navbar {\n        background-color: ${ props => props.theme.sidebarBg};\n    }\n`\n\nexport const StyledSwitch = styled(Switch)`\n    margin: .2em;\n`\n","import React from 'react'\nimport {\n    NavbarGroup,\n    NavbarHeading,\n    Alignment\n} from '@blueprintjs/core'\n\nimport { StyledNavbar, StyledSwitch } from './styles'\nimport { useTranslation } from 'react-i18next'\n\n\ntype Iprops = {\n    title: string,\n    readonly isDark: boolean,\n    toggleTheme: () => void,\n}\n\nconst PageHeader = ({ title, isDark, toggleTheme }: Iprops) => {\n\n    const { t } = useTranslation()\n\n    return (\n        <StyledNavbar>\n            <NavbarGroup align={Alignment.LEFT}>\n                <NavbarHeading>{t(title)}</NavbarHeading>\n            </NavbarGroup>\n\n            <NavbarGroup align={Alignment.RIGHT}>\n                <StyledSwitch\n                    alignIndicator={Alignment.RIGHT}\n                    checked={isDark}\n                    onChange={toggleTheme}\n                    innerLabel=\"🌞\"\n                    innerLabelChecked=\"🌚\"\n                    large\n                />\n            </NavbarGroup>\n        </StyledNavbar>\n    )\n}\n\nexport default PageHeader\n","import styled from 'styled-components'\n\nconst sideBarWidth = '20vw'\nconst minSideBarWidth = '250px'\n\ntype IContainer = {\n    width?: 'auto' |  '100%' | '' | 'max-content' | string ,\n    height?: string,\n    margin?: string,\n    noPad?: boolean,\n    noGrow?: boolean,\n}\n\nconst ViewPort = styled.div`\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    flex-direction: row;\n`\n\nconst SideContainer = styled.div`\n    width: ${sideBarWidth};\n    height: 100%;\n    min-width: ${minSideBarWidth};\n`\n\nconst AppPageContainer = styled.div`\n    width: calc(100% - ${sideBarWidth});\n    height: 100%;\n    overflow-y: auto;\n    min-width: ${minSideBarWidth};\n`\n\nconst PageFrame = styled.main`\n    position: relative;\n    width: 100%;\n    overflow: auto;\n    margin: 0;\n    background-color: ${ props => props.theme.background };\n    color: ${props => props.theme.text };\n`\n\n\n\nconst Column = styled.div<IContainer>`\n    display: flex;\n    flex-direction: column;\n    flex-grow: ${props => props.noGrow ? 0 : 1};\n    height: ${ props => props.height ?? '100%'};\n    width: ${ props => props.width ?? 'calc(max-content + 10vw)'};\n    min-width: max-content;\n\n    margin: ${props => (\n        props.noPad ? '0' : (\n            props.margin ?? '1em'\n        )\n    )};\n`\n\nconst Row = styled.div<IContainer>`\n    display: flex;\n    flex-direction: row;\n    margin: ${props => props.noPad ? '0' : 'inherit'};\n`\nconst Container = styled(Column)<IContainer>`\n    width: 100%;\n    height: 100%;\n    min-width: max-content;\n    margin: 0;\n`\nconst OverflowContainer = styled(Container)<IContainer>`\n    overflow: auto;\n`\n\nconst PageContainer = styled(Container)<IContainer>`\n    padding: 2em;\n    margin: 0;\n    overflow: auto;\n`\n\nexport {\n    ViewPort,\n    SideContainer,\n    PageFrame,\n    Column,\n    Row,\n    Container,\n    OverflowContainer,\n    AppPageContainer,\n    PageContainer,\n}\n","const isCellHighlight = (\n    value: number | string,\n    highlight: string | string[] | undefined,\n): boolean => {\n\n    let is_highlight\n    value = String(value)\n\n    if (typeof(highlight) === 'string')\n        is_highlight =  highlight === value\n\n    else if (highlight instanceof Array)\n        is_highlight = highlight.includes(value)\n    else\n        is_highlight = true\n\n    // console.log({ is_highlight, value, highlight })\n    return is_highlight\n}\n\nexport {\n    isCellHighlight\n}\n","import React from 'react'\nimport { Cell, Column, Table } from '@blueprintjs/table'\nimport { IBinomialTable } from '../../types/tables'\nimport { isCellHighlight } from '../../utils/determine_style'\n\ntype IProps = {\n    table: IBinomialTable,\n    precision: number,\n    highlight?: string | string[],\n}\n\nconst BinomialTable = ({ table, precision, highlight }: IProps) => {\n\n    const renderCell = (row: number, col: number) => {\n        const intent = isCellHighlight(row, highlight) ? 'primary' : 'none'\n        // console.log(`Cell intent: ${intent}`)\n\n        return (\n            <Cell intent={intent}>\n                { table.content[row][col]\n                    .toFixed(col ? precision : 0)\n                }\n            </Cell>\n        )\n    }\n\n    console.table(table.content)\n\n    return (\n        <Table\n            numRows={table.content.length}\n            columnWidths={[35, 75, 75, 75, 75, 75]}\n        >\n            {table.headers.map((header: string, i: number) => (\n                <Column name={header} cellRenderer={row => renderCell(row, i)} />\n            ))}\n        </Table>\n    )\n}\n\nexport default BinomialTable\n","import React from 'react'\nimport { Text } from '@blueprintjs/core'\nimport styled from 'styled-components'\nimport TeX from '@matejmazur/react-katex'\n\nconst StyledResult = styled(Text)`\n    font-size: 1.4em;\n    margin: .2em;\n    margin-left: .5em;\n\n    .number {\n        font-weight: bold;\n        font-size: 1.2em;\n        color: ${props => props.theme.result};\n    }\n`\n\ntype IProps = {\n    name: string,\n    result: number,\n    precision: number,\n}\n\n/**\n * ## `name` string Will be rendered using [KaTeX](https://katex.org/docs/supported.html)\n */\nconst Result = ({ name, result, precision= 4 }: IProps) => {\n    return (\n        <StyledResult>\n\n            <TeX math={name + ' = '} />&nbsp;\n            <span className=\"number\">\n                {result.toFixed(precision)}\n            </span>\n        </StyledResult>)\n}\n\nexport default Result\n","import { IBinomialTable } from \"../types/tables\"\n\nconst factorial = (n: number): number => {\n    if (n === 0)\n        return 1\n\n    let res = 1\n    for (let i = 1; i <= n; i++)\n        res *= i\n    return res\n}\n\nconst combinatory = (a: number, b: number): number => {\n    if (a === b)\n        return 1\n\n    const numerator = factorial(a)\n    const denominator = factorial(b) * factorial(a - b)\n\n    return numerator / denominator\n}\n\nconst binomialModel = (r: number, n: number, p: number): number => {\n    const nCr = combinatory(n, r)\n    const result = nCr * (p ** r) * ((1 - p) ** (n - r))\n    return result\n}\n\nconst accumulatedLeft = (r: number, n: number, p: number): number => {\n    let total = 0\n\n    for (let x = 0; x <= r; x++)\n        total += binomialModel(x, n, p)\n\n    return total\n}\n\nconst accumulatedRight = (r: number, n: number, p: number): number => {\n    let total = 0\n\n    for (let x = r; x <= n; x++)\n        total += binomialModel(x, n, p)\n\n    return total\n}\n\n/**\n * \"Esperanza matematica\" o mu\n * @param n Cantidad de observaciones\n * @param p Probabilidad de exito\n * @returns Esperanza matematica\n */\nconst expectedValue = (n: number, p: number): number => {\n    return n * p\n}\n\nconst variance = (n: number, p: number): number => {\n    return n * p * (1 - p)\n}\n\nconst stdDeviation = (n: number, p: number): number => {\n    return Math.sqrt(variance(n, p))\n}\n\nconst assymetry = (n: number, p: number): number => {\n    return (1 - 2 * p) / Math.sqrt(n * p * (1 - p))\n}\nconst kurtosis = (n: number, p: number): number => {\n    return 3 + ((1 - 6 * p * (1 - p)) / (n * p * (1 - p)))\n}\n\nconst partialLeftExpected = (r: number, n: number, p: number): number => {\n    let total = 0\n    for (let x = 0; x <= r; x++)\n        total += (x * binomialModel(x, n, p))\n    return total\n}\nconst partialRightExpected = (r: number, n: number, p: number): number => {\n    let total = 0\n    for (let x = r; x <= n; x++)\n        total += (x * binomialModel(x, n, p))\n    return total\n}\n\n\nconst createTable = (\n    n: number,\n    p: number,\n    from?: number,\n    to?: number,\n): IBinomialTable => {\n\n    const headers = ['r', 'P(r)', 'F(r)', 'G(r)', 'H(r)', 'J(r)']\n    const content: number[][] = []\n\n    from = from ?? 0\n    to = to ?? n\n\n    for (let r = from; r <= to; r++ ) {\n        content.push([\n            r,\n            binomialModel(r, n, p),\n            accumulatedLeft(r, n, p),\n            accumulatedRight(r, n, p),\n            partialLeftExpected(r, n, p),\n            partialRightExpected(r, n, p),\n        ])\n    }\n    return {headers, content}\n}\n\nexport { binomialModel,\n    accumulatedLeft,\n    accumulatedRight,\n    expectedValue,\n    variance,\n    stdDeviation,\n    assymetry,\n    kurtosis,\n    partialLeftExpected,\n    partialRightExpected,\n    createTable,\n}\n","import React, { useContext } from 'react'\nimport { IBarChartItem } from '../../types/tables'\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nimport { OverflowContainer } from '../../pages/layout';\nimport { ThemeContext } from 'styled-components'\nimport { isCellHighlight } from '../../utils/determine_style';\n\ntype IProps = {\n    data: IBarChartItem[],\n    highlight?: string | string[],\n    legend?: string,\n    roundPrecision?: number,\n}\n\nconst BinomialChart = ({ data, highlight, legend, roundPrecision }: IProps ) => {\n\n    const themeContext = useContext(ThemeContext)\n\n    const BarColor = (entry: IBarChartItem): string => {\n        const is_highlight = isCellHighlight(entry.label, highlight)\n\n        return is_highlight ? themeContext.chart_barHighlight : themeContext.chart_barNormal;\n    }\n\n    return (\n        <OverflowContainer>\n            <BarChart\n                width={450}\n                height={300}\n                data={data}\n            >\n                <CartesianGrid strokeDasharray=\"5\" />\n                <XAxis dataKey=\"label\" />\n                <YAxis />\n                <Tooltip\n                    formatter={(x: any, y: any, props: any) => (\n                        `P(${props.payload.label}) = ${props.value.toFixed(roundPrecision ?? 4)}`\n                    )}\n                />\n\n                <Bar dataKey=\"value\">\n                    { data.map((entry, index) => {\n                        const color = BarColor(entry)\n                        return <Cell key={`cell-${index}`} fill={color} />\n                    })}\n                </Bar>\n            </BarChart>\n        </OverflowContainer>\n    )\n}\n\nexport default BinomialChart\n","/**\n * from and to inclusive\n * @param from\n * @param to\n * @param step\n * @returns\n */\nconst range = (from: number, to: number, step=1): number[] => {\n    const length = to - from\n    if (length)\n        return [...Array(length + 1)].map((_, i) => from + i * step);\n    return []\n}\n\nconst stringRange = (from: number, to: number, step=1): string[] => {\n    return range(from, to, step).map(item => String(item))\n}\n\nexport {\n    range,\n    stringRange\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n    H1,\n    H3,\n    Callout,\n    Label,\n    NumericInput,\n    Spinner,\n    Card,\n    Tabs,\n    Tab,\n    Icon,\n} from '@blueprintjs/core'\nimport { PageContainer, Row, Column } from '../layout'\nimport BinomialTable from '../../components/BinomialTable'\n\nimport Result from '../../components/Result'\nimport { useTranslation } from 'react-i18next'\nimport { useDebounce } from 'react-use'\n\nimport { IBarChartItem, IBinomialTable } from '../../types/tables'\nimport {\n    kurtosis,\n    createTable,\n    expectedValue,\n    stdDeviation,\n    variance,\n    assymetry,\n    binomialModel,\n    accumulatedLeft,\n    accumulatedRight\n} from '../../functions/binomials'\nimport BinomialChart from '../../components/BinomialChart'\nimport { IOperationType } from '../../types/pages'\nimport { stringRange } from '../../utils/arrays'\nimport TeX from '@matejmazur/react-katex'\nimport styled from 'styled-components'\n\nconst StyledCallout = styled(Callout)`\n    width: max-content;\n    padding: 1.5em;\n`\n\n\nfunction Binomial() {\n\n    const { t } = useTranslation()\n\n    const NoInput = () => (\n        <StyledCallout>\n            <H3>\n                <span className=\"bp3-text-muted\">\n                    <Icon icon=\"calculator\" iconSize={25} />&nbsp;\n                </span>\n                {t('specify')} <code>n</code> {t('and')} <code>p</code>\n            </H3>\n        </StyledCallout>\n    )\n    const NoR = () => (\n        <StyledCallout>\n            <H3>\n                <span className=\"bp3-text-muted\">\n                    <Icon icon=\"calculator\" iconSize={25} />&nbsp;\n                </span>\n                {t('specify')} <code>r</code>\n            </H3>\n        </StyledCallout>\n    )\n\n\n    // TODO: Set defaults to 0\n\n    const [sampleSize, setSampleSize] = useState<number>(0) // n\n    const [successProbability, setSuccessProbability] = useState<number>(0) // p\n    const [successFound, setSuccessFound] = useState<number>(NaN) // r\n    const [validInput, setValidInput] = useState<boolean>(false)\n\n    const [roundPrecision, setRoundPrecision] = useState<number>(5)\n\n    const [tableData, setTableData] = useState<IBinomialTable | undefined>(undefined)\n    const [probabilities, setProbabilities] = useState<IBarChartItem[] | undefined>(([ {label: '', value: 0} ]) as IBarChartItem[])\n\n    // const [dataFrom, setDataFrom] = useState<number>(0)\n    const [dataTo, setDataTo] = useState<number>(0)\n    const [highlight, setHighlight] = useState<string | string[]>('')\n\n    const [punctualProbability, setPunctualProbability] = useState<number>(0)\n    const [accumLeft, setAccumLeft] = useState<number>(0)\n    const [accumRight, setAccumRight] = useState<number>(0)\n    const [opType, setOpType] = useState<IOperationType>('p')\n\n    const handleSampleSize = (valueNum: number, valueStr: string ) => {\n        setSampleSize(parseFloat(valueStr) ?? 0)\n    }\n    const handleSuccessProb = (valueNum: number, valueStr: string ) => {\n        setSuccessProbability(parseFloat(valueStr) ?? 0)\n    }\n    const handleSuccessFound = (valueNum: number, valueStr: string ) => {\n        setSuccessFound(parseFloat(valueStr) ?? 0)\n    }\n    const handleTab = (tab: IOperationType) => {\n        setOpType(tab)\n    }\n\n    const handleHighlight = (tab: IOperationType, r: number, n: number) => {\n        let hl: string | string[]\n\n        if (tab === 'f')\n            hl = stringRange(0, r)\n        else if (tab === 'g')\n            hl = stringRange(r, n)\n        else\n            hl = String(r)\n\n        setHighlight(hl)\n    }\n\n    const handleType = (r: number, n: number, p: number) => {\n        setPunctualProbability(binomialModel(r, n, p))\n        setAccumLeft(accumulatedLeft(r, n, p))\n        setAccumRight(accumulatedRight(r, n, p))\n    }\n\n    // For the calculations\n    useDebounce(() => {\n        handleType( successFound, sampleSize, successProbability)\n    }, 200, [sampleSize, successProbability, successFound])\n\n    useEffect(() => {\n        handleHighlight(opType, successFound, dataTo)\n    }, [successFound, dataTo, opType])\n\n    // for rendering the loaders\n    useEffect(() => {\n        setTableData(undefined)\n        setProbabilities(undefined)\n    }, [sampleSize, successProbability])\n\n    // Debouncing the calculations\n    useDebounce(() => {\n        const newTable = createTable(sampleSize, successProbability)\n        const probs_from_table = newTable.content.map(item => ({\n            label: String(item[0]),\n            value: item[1],\n        }))\n        setTableData(newTable)\n        setProbabilities(probs_from_table)\n        setDataTo(sampleSize)\n        // console.table(probs_from_table)\n\n    }, 300, [sampleSize, successProbability])\n\n    useEffect(() => {\n        const valid = !!(sampleSize && successProbability)\n        setValidInput(valid)\n        console.log({ valid, sampleSize, successProbability})\n    }, [sampleSize, successProbability])\n\n    return (\n        <PageContainer>\n            <Row>\n                <Column>\n                    <H1>Input</H1>\n                    <Row noPad>\n                        <Column margin=\".8em 1em\" noGrow >\n                            <Label>\n                                <code>n</code> = {t('sample-size')}\n                                <NumericInput\n                                    min={1}\n                                    onValueChange={handleSampleSize}\n                                    minorStepSize={0.0001}\n                                    placeholder=\"n\"\n                                />\n                            </Label>\n                            <Label>\n                                <code>p</code> = {t('success-prob')}\n                                <NumericInput\n                                    min={0}\n                                    max={1}\n                                    stepSize={0.1}\n                                    onValueChange={handleSuccessProb}\n                                    placeholder=\"p\"\n                                />\n                            </Label>\n                            <Label>\n                                <code>r</code> = {t('success-found')}\n                                <NumericInput\n                                    min={0}\n                                    onValueChange={handleSuccessFound}\n                                    max={sampleSize}\n                                    placeholder=\"r\"\n                                />\n                            </Label>\n                        </Column>\n                        <Column margin=\".8em 1em\" noGrow >\n                            <Label>\n                                {t('round-precision')} <code> (0.xf)</code>\n                                <NumericInput\n                                    min={0}\n                                    onValueChange={setRoundPrecision}\n                                    value={roundPrecision ?? 'x'}\n                                    placeholder=\"x\"\n                                />\n                            </Label>\n                            <Card>\n                                <Tabs id=\"operation\" onChange={handleTab}>\n                                    <Tab\n                                        title={<TeX math=\"P(r)\" />}\n                                        id=\"p\"\n                                        panel={\n                                            isNaN(successFound) ?\n                                            <NoR />\n                                            :\n                                            <Result\n                                                name={`P(\\\\text{V.A.} = ${successFound})`}\n                                                // name=\"P(\\text{V.A.} = r)\"\n                                                result={punctualProbability}\n                                                precision={roundPrecision}\n                                            />\n                                        }\n                                    />\n                                    <Tab\n                                        title={<TeX math=\"F(r)\"/>}\n                                        id=\"f\"\n                                        panel={\n                                            <Result\n                                                name=\"P(\\text{V.A.} \\leq r)\"\n                                                result={accumLeft}\n                                                precision={roundPrecision}\n                                            />\n                                        }\n                                    />\n                                    <Tab\n                                        title={<TeX math=\"G(r)\"/>}\n                                        id=\"g\"\n                                        panel={\n                                            <Result\n                                                name=\"P(\\text{V.A.} \\geq r)\"\n                                                result={accumRight}\n                                                precision={roundPrecision}\n                                            />\n                                        }\n                                    />\n                                </Tabs>\n\n                            </Card>\n                        </Column>\n                        </Row>\n                </Column>\n                <Column>\n                    <H1>{t('analysis')}</H1>\n                    { !validInput ?\n                        <NoInput />\n                      :\n                        <>\n                            <Result\n                                name=\"E(r) = \\mu\"\n                                result={expectedValue(sampleSize, successProbability)}\n                                precision={roundPrecision}\n                            />\n                            <Result\n                                name=\"V(r) = \\sigma^2\"\n                                result={variance(sampleSize, successProbability)}\n                                precision={roundPrecision}\n                            />\n                            <Result\n                                name=\"D(r) = \\sigma\"\n                                result={stdDeviation(sampleSize, successProbability)}\n                                precision={roundPrecision}\n                            />\n                            <Result\n                                name=\"As = \\alpha_3\"\n                                result={assymetry(sampleSize, successProbability)}\n                                precision={roundPrecision}\n                            />\n                            <Result\n                                name=\"Ku = \\alpha_4\"\n                                result={kurtosis(sampleSize, successProbability)}\n                                precision={roundPrecision}\n                            />\n                        </>\n                    }\n                </Column>\n            </Row>\n            <Row>\n                <Column width=\"max-content\" noGrow>\n                    <H1>{t('table')}</H1>\n                    { !validInput ?\n                        <NoInput />\n                      :\n                        (tableData ?\n                            <BinomialTable\n                                table={tableData}\n                                precision={roundPrecision}\n                                highlight={highlight}\n                            />\n                          :\n                            <Spinner size={100} />\n                        )\n                    }\n                </Column>\n                <Column>\n                    <H1>{t('chart')}</H1>\n                    { !validInput ?\n                        <NoInput />\n                      :\n                       (probabilities ?\n                            <BinomialChart\n                                data={probabilities}\n                                highlight={highlight}\n                                roundPrecision={roundPrecision}\n                            />\n                        :\n                            <Spinner size={100} />\n                        )\n                     }\n                </Column>\n            </Row>\n\n\n        </PageContainer >\n    )\n}\n\nexport default Binomial\n","import React from \"react\"\nimport { IPageInfo } from \"../types/pages\"\nimport Binomial from \"./Binomial\"\n\n// All available pages\nexport const binomial: IPageInfo = {\n    id: 'binomial',\n    title: 'pages-binomial',\n    ToRenderPage: Binomial,\n    disabled: false,\n}\n\nexport const coming_soon: IPageInfo = {\n    id: 'more_soon',\n    title: 'pages-binomial',\n    ToRenderPage: () => React.Fragment,\n    disabled: true,\n    icon: 'plus'\n}\n\n// Array of all of them\nexport const pageOptions: IPageInfo[] = [\n    binomial,\n    coming_soon,\n]\n\nexport const defaultPage = binomial\n\n","import React, { Suspense, useState } from 'react'\nimport { useLocalStorage } from 'react-use'\nimport { dark, light } from './styles/colors'\nimport { ThemeProvider } from 'styled-components'\n\nimport { FocusStyleManager, Spinner } from \"@blueprintjs/core\"\nimport Sidebar from './components/Sidebar'\nimport PageHeader from './components/PageHeader'\nimport { pageOptions, defaultPage } from './pages/available'\n\nimport { IPageInfo } from './types/pages'\nimport {\n    ViewPort,\n    SideContainer,\n    AppPageContainer,\n    PageFrame\n} from './pages/layout'\n\nFocusStyleManager.onlyShowFocusOnTabs()\n\nfunction App() {\n\n    const [isDark, setIsDark] = useLocalStorage('isDark', false)\n    const [CurrentPage, setCurrentPage] = useState(defaultPage)\n\n    const toggleTheme = () => {\n        setIsDark(!isDark)\n    }\n\n    console.log({ CurrentPage })\n\n    const selectPage = (selected: IPageInfo) => {\n\n        setCurrentPage(selected)\n\n        // TODO: push id to url\n        // TODO: use URL params from hash router\n    }\n\n    return (\n        <Suspense fallback={<AppPageContainer> <Spinner /> </AppPageContainer>}>\n            <ThemeProvider theme={isDark ? dark : light}>\n                <ViewPort className={`.bp3-ui-text ${isDark ? 'bp3-dark' : ''}`}>\n\n                    <SideContainer>\n                        <Sidebar\n                            current_page={CurrentPage}\n                            available_pages={pageOptions}\n                            setNewPage={selectPage}\n                        />\n                    </SideContainer>\n\n                    <AppPageContainer>\n                        <PageHeader\n                            title={CurrentPage.title}\n                            isDark={!!isDark}\n                            toggleTheme={toggleTheme}\n                        />\n                        <PageFrame>\n                            <CurrentPage.ToRenderPage />\n                        </PageFrame>\n                    </AppPageContainer>\n\n                </ViewPort>\n            </ThemeProvider>\n        </Suspense>\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next'\nimport Backend from 'i18next-http-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport { initReactI18next } from 'react-i18next'\n\ni18n\n    .use(Backend)\n  // Enable automatic language detection\n    .use(LanguageDetector)\n  // Enables the hook initialization module\n    .use (initReactI18next)\n    .init({\n        // Standard language used\n        fallbackLng: 'en',\n        debug: true,\n        interpolation: {\n            escapeValue: false\n        }\n    })\n\nexport default i18n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/table/lib/css/table.css\";\nimport '@blueprintjs/select/lib/css/blueprint-select.css'\nimport 'katex/dist/katex.min.css';\nimport './i18n'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}